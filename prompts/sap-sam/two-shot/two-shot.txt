Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.

Use the following implementation rules:

- The contract name must be the `id` of the `<choreography>` element in the model.
- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.
- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.
- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.
Use the following mapping of taskID to `choreographyTask` id of the model:
```json
{{taskIDs}}
```
- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.
  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.
  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.
  - If at least one condition is satisfied, activate the target task.
  - If none are satisfied, follow the `default` sequenceFlow.
  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.
  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.

- Implement parallel gateways (`<parallelGateway>`) as:
  - Join: wait for all incoming tokens to activate.
  - Split: activate all outgoing tasks concurrently.

- Use `uint public tokenState` to encode current control flow positions:
  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).
  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.
  - Transitions may activate multiple concurrent paths.

- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.
- Allow execution of each task only by the correct initiating participant, using:
  ```solidity
  require(msg.sender == participants[i]);
  ```
- Use this mapping of participant index to participant ID:
```json
{{parIDs}}
```

- At the end of the process, set `tokenState = 0` to indicate termination.
- Do not output any text other than the Solidity contract itself.

An example.
Given the choreography
```XML
<?xml version="1.0" encoding="UTF-8"?>
<definitions id="_tTv5YOycEeiHGOQ2NkJZNQ" targetNamespace="http://bpmn.io/schema/bpmn">
  <message id="Message_032z8ml"></message>
  <message id="Message_19qrd5q"></message>
  <message id="Message_0vnm1wq"></message>
  <message id="Message_085o98p"></message>
  <choreography id="ChoreographyExample">
    <participant id="Participant_1tzf68i" name="Customer"></participant>
    <participant id="Participant_198pz14" name="Seller"></participant>
    <participant id="Participant_0378t5g" name="Manufacturer"></participant>
    <messageFlow id="MessageFlow_0r98f9o" sourceRef="Participant_198pz14" targetRef="Participant_1tzf68i" messageRef="Message_032z8ml"></messageFlow>
    <messageFlow id="MessageFlow_18xf3u6" sourceRef="Participant_198pz14" targetRef="Participant_1tzf68i" messageRef="Message_19qrd5q"></messageFlow>
    <messageFlow id="MessageFlow_0r00txu" sourceRef="Participant_198pz14" targetRef="Participant_0378t5g" messageRef="Message_0vnm1wq"></messageFlow>
    <messageFlow id="MessageFlow_1cx9rl4" sourceRef="Participant_1tzf68i" targetRef="Participant_198pz14" messageRef="Message_085o98p"></messageFlow>
    <startEvent id="Event_0y1sdn3">
      <outgoing>Flow_0e2c805</outgoing>
    </startEvent>
    <choreographyTask id="ChoreographyTask_1vnykqp" name="Order goods" initiatingParticipantRef="Participant_1tzf68i">
      <incoming>Flow_0e2c805</incoming>
      <outgoing>Flow_0d6j7vb</outgoing>
      <participantRef>Participant_1tzf68i</participantRef>
      <participantRef>Participant_198pz14</participantRef>
      <messageFlowRef>MessageFlow_1cx9rl4</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="ChoreographyTask_16lc74v" name="Produce goods" initiatingParticipantRef="Participant_198pz14">
      <incoming>Flow_0ybxbuc</incoming>
      <outgoing>Flow_14ulro8</outgoing>
      <participantRef>Participant_198pz14</participantRef>
      <participantRef>Participant_0378t5g</participantRef>
      <messageFlowRef>MessageFlow_0r00txu</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="ChoreographyTask_07t2zjo" name="Inform customer" initiatingParticipantRef="Participant_198pz14">
      <incoming>Flow_02gqwyg</incoming>
      <outgoing>Flow_1kim4vq</outgoing>
      <participantRef>Participant_198pz14</participantRef>
      <participantRef>Participant_1tzf68i</participantRef>
      <messageFlowRef>MessageFlow_18xf3u6</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="ChoreographyTask_056ylqg" name="Ship goods" initiatingParticipantRef="Participant_198pz14">
      <incoming>Flow_11zi7qu</incoming>
      <outgoing>Flow_04lnqsf</outgoing>
      <participantRef>Participant_198pz14</participantRef>
      <participantRef>Participant_1tzf68i</participantRef>
      <messageFlowRef>MessageFlow_0r98f9o</messageFlowRef>
    </choreographyTask>
    <sequenceFlow id="Flow_0e2c805" sourceRef="Event_0y1sdn3" targetRef="ChoreographyTask_1vnykqp"></sequenceFlow>
    <sequenceFlow id="Flow_0d6j7vb" sourceRef="ChoreographyTask_1vnykqp" targetRef="Gateway_1bpkhpg"></sequenceFlow>
    <sequenceFlow id="Flow_0ymdsa2" name="unavailable" sourceRef="Gateway_1bpkhpg" targetRef="Gateway_1klfaw3"></sequenceFlow>
    <sequenceFlow id="Flow_0ybxbuc" sourceRef="Gateway_1klfaw3" targetRef="ChoreographyTask_16lc74v"></sequenceFlow>
    <sequenceFlow id="Flow_02gqwyg" sourceRef="Gateway_1klfaw3" targetRef="ChoreographyTask_07t2zjo"></sequenceFlow>
    <sequenceFlow id="Flow_1kim4vq" sourceRef="ChoreographyTask_07t2zjo" targetRef="Gateway_0xcnzox"></sequenceFlow>
    <sequenceFlow id="Flow_14ulro8" sourceRef="ChoreographyTask_16lc74v" targetRef="Gateway_0xcnzox"></sequenceFlow>
    <sequenceFlow id="Flow_067nql1" name="available" sourceRef="Gateway_1bpkhpg" targetRef="Gateway_1yl9mch">
      <conditionExpression xsi:type="bpmn2:tFormalExpression" language="Solidity">conditions &amp; 1 == 1</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="Flow_198zju1" sourceRef="Gateway_0xcnzox" targetRef="Gateway_1yl9mch"></sequenceFlow>
    <sequenceFlow id="Flow_11zi7qu" sourceRef="Gateway_1yl9mch" targetRef="ChoreographyTask_056ylqg"></sequenceFlow>
    <sequenceFlow id="Flow_04lnqsf" sourceRef="ChoreographyTask_056ylqg" targetRef="Event_1ezlk4g"></sequenceFlow>
    <exclusiveGateway id="Gateway_1bpkhpg" default="Flow_0ymdsa2">
      <incoming>Flow_0d6j7vb</incoming>
      <outgoing>Flow_0ymdsa2</outgoing>
      <outgoing>Flow_067nql1</outgoing>
    </exclusiveGateway>
    <exclusiveGateway id="Gateway_1yl9mch" default="Flow_11zi7qu">
      <incoming>Flow_067nql1</incoming>
      <incoming>Flow_198zju1</incoming>
      <outgoing>Flow_11zi7qu</outgoing>
    </exclusiveGateway>
    <parallelGateway id="Gateway_1klfaw3">
      <incoming>Flow_0ymdsa2</incoming>
      <outgoing>Flow_0ybxbuc</outgoing>
      <outgoing>Flow_02gqwyg</outgoing>
    </parallelGateway>
    <parallelGateway id="Gateway_0xcnzox">
      <incoming>Flow_1kim4vq</incoming>
      <incoming>Flow_14ulro8</incoming>
      <outgoing>Flow_198zju1</outgoing>
    </parallelGateway>
    <endEvent id="Event_1ezlk4g">
      <incoming>Flow_04lnqsf</incoming>
    </endEvent>
  </choreography>
</definitions>
```
A correct implementation is:
```solidity
//SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;
contract ChoreographyExample {
  // The example code uses bitmasking for the current state, as it is more efficient.
  // tokenState represents the current active elements, which can include multiple concurrent paths.
  uint public tokenState = 1;
  address[3] public participants;
  uint public conditions;
  constructor(address[3] memory _participants) {
    participants = _participants;
  }
  function setConditions(uint _conditions) external {
    conditions = _conditions;
  }
  function enact(uint id) external {
    uint _tokenState = tokenState;
    while(_tokenState != 0) {
      if (_tokenState & 1 == 1) {
        // <--- ChoreographyTask_1vnykqp Order goods --->
        if (0 == id && msg.sender == participants[0]) {
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(1);
        _tokenState |= 6;
        continue; 
        }
      }
      if (_tokenState & 2 == 2) {
        // <--- ChoreographyTask_16lc74v Produce goods --->
        if (1 == id && msg.sender == participants[1]) {
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(2);
        _tokenState |= 8;
        continue; 
        }
      }
      if (_tokenState & 4 == 4) {
        // <--- ChoreographyTask_07t2zjo Inform customer --->
        if (2 == id && msg.sender == participants[1]) {
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(4);
        _tokenState |= 16;
        continue; 
        }
      }
      if (_tokenState & 32 == 32) {
        // <--- ChoreographyTask_056ylqg Ship goods --->
        if (3 == id && msg.sender == participants[1]) {
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(32);
        _tokenState |= 0;
        break; // is end
        }
      }
      if (_tokenState & 6 == 6) {
        if (conditions & 1 == 1) {
          // <---  auto transition  --->
          // Transition: deactivate current, activate next state
          _tokenState &= ~uint(6);
          _tokenState |= 32;
          continue; 
        }
      }
      if (_tokenState & 24 == 24) {
        // <---  auto transition  --->
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(24);
        _tokenState |= 32;
        continue; 
      }
      break;
    }
    tokenState = _tokenState;
  }
}
```
Another Example. Given
```XML
<ns0:definitions xmlns:ns0="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:ns2="http://www.signavio.com" xmlns:ns3="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:ns4="http://www.omg.org/spec/DD/20100524/DI" xmlns:ns5="http://www.omg.org/spec/DD/20100524/DC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exporter="Signavio Process Editor, http://www.signavio.com" exporterVersion="19.1.2" expressionLanguage="http://www.w3.org/TR/XPath" id="sid-ba5eb474-d509-4dfc-a09e-a661f678f2b3" targetNamespace="http://www.signavio.com" typeLanguage="http://www.w3.org/2001/XMLSchema" xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd">
  <ns0:collaboration id="sid-8d443809-2b9a-4ee4-b54f-bf69a4017ad4">
    <ns0:association associationDirection="None" id="sid-37E2AAAD-1D69-4A94-88F2-D752B6869514" sourceRef="sid-1981991E-29DD-441D-8448-1FC4425556A3" targetRef="sid-CD0EA145-545E-4C05-8E04-5B7C5F029077"></ns0:association>
  </ns0:collaboration>
  <ns0:message id="sid-b02a61e1-72bb-4d31-a4bc-17c5824eec5c" name="Prośba o skasowaniu&amp;#10;wizyty"></ns0:message>
  <ns0:message id="sid-835ef5a4-53a4-4fd9-aeb8-1bc625b1fc4f" name="Powiadomienie o&amp;#10;skasowaniu terminu"></ns0:message>
  <ns0:message id="sid-96f678cc-90ea-4919-9786-68ae2b8bedf1" name="Prośba o skasowaniu&amp;#10;wizyty"></ns0:message>
  <ns0:message id="sid-6b4e38dd-25dc-42cc-843e-0e6606fe68f2" name="Powiadomienie o&amp;#10;skasowaniu terminu"></ns0:message>
  <ns0:choreography id="sid_328a2509_2c20_498a_96e7_5cc2a7fa12c0" isClosed="false">
    <ns0:participant id="sid-873cdd24-59ac-421d-9806-31740d0974ce" name="Pacjent"></ns0:participant>
    <ns0:participant id="sid-84c9a4a5-c9d6-4ac7-a197-b1f3f1bf78d9" name="Szpital"></ns0:participant>
    <ns0:participant id="sid-b56c83b4-9af7-4c84-a3e9-171f976994df" name="Szpital"></ns0:participant>
    <ns0:participant id="sid-133391b3-fb33-4ba9-8e0a-ea397eb7fe2c" name="Lekarz"></ns0:participant>
    <ns0:participant id="sid-EFEBA1C0-1903-49E2-8FA3-6EA5A92E89E8" name="Szpital"></ns0:participant>
    <ns0:participant id="sid-3B8A1FE7-589F-4569-832C-CC3F7E604339" name="Lekarz"></ns0:participant>
    <ns0:participant id="sid-DBC71017-8C7E-415C-B876-F19C3A362AE1" name="Pacjent"></ns0:participant>
    <ns0:participant id="sid-CD0EA145-545E-4C05-8E04-5B7C5F029077" name="Szpital"></ns0:participant>
    <ns0:messageFlow id="sid-43af5c4d-1ade-476d-9bbf-3d9ef898c46a" messageRef="sid-b02a61e1-72bb-4d31-a4bc-17c5824eec5c" sourceRef="sid-873cdd24-59ac-421d-9806-31740d0974ce" targetRef="sid-84c9a4a5-c9d6-4ac7-a197-b1f3f1bf78d9"></ns0:messageFlow>
    <ns0:messageFlow id="sid-a97d9ec1-890a-4543-a234-cc0823693567" messageRef="sid-835ef5a4-53a4-4fd9-aeb8-1bc625b1fc4f" sourceRef="sid-b56c83b4-9af7-4c84-a3e9-171f976994df" targetRef="sid-133391b3-fb33-4ba9-8e0a-ea397eb7fe2c"></ns0:messageFlow>
    <ns0:messageFlow id="sid-2c9b3ed8-8a5a-440a-bc6d-9facc285e314" messageRef="sid-96f678cc-90ea-4919-9786-68ae2b8bedf1" sourceRef="sid-3B8A1FE7-589F-4569-832C-CC3F7E604339" targetRef="sid-EFEBA1C0-1903-49E2-8FA3-6EA5A92E89E8"></ns0:messageFlow>
    <ns0:messageFlow id="sid-162a3ec9-bb1f-4758-ab5b-d1c50f46fa5a" messageRef="sid-6b4e38dd-25dc-42cc-843e-0e6606fe68f2" sourceRef="sid-CD0EA145-545E-4C05-8E04-5B7C5F029077" targetRef="sid-DBC71017-8C7E-415C-B876-F19C3A362AE1"></ns0:messageFlow>
    <ns0:choreographyTask id="sid-4DB685DD-6383-42A3-8D06-0AB4D69F921C" initiatingParticipantRef="sid-873cdd24-59ac-421d-9806-31740d0974ce" loopType="None" name="Skasowanie wizyty">
      <ns0:incoming>sid-AE7FD9F2-089E-4675-B6BD-B4E543902680</ns0:incoming>
      <ns0:outgoing>sid-C3D9CDB8-C5B2-4C3D-88DE-7C3D4974EDE9</ns0:outgoing>
      <ns0:participantRef>sid-873cdd24-59ac-421d-9806-31740d0974ce</ns0:participantRef>
      <ns0:participantRef>sid-84c9a4a5-c9d6-4ac7-a197-b1f3f1bf78d9</ns0:participantRef>
      <ns0:messageFlowRef>sid-43af5c4d-1ade-476d-9bbf-3d9ef898c46a</ns0:messageFlowRef>
    </ns0:choreographyTask>
    <ns0:choreographyTask id="sid-CD8932F0-FA63-4338-B81E-2E2B4D6E149F" initiatingParticipantRef="sid-b56c83b4-9af7-4c84-a3e9-171f976994df" loopType="None" name="Dokonanie skasowania wizyty">
      <ns0:incoming>sid-599161B4-CDC2-4AE4-BF24-45B7F6E1847B</ns0:incoming>
      <ns0:outgoing>sid-3A0B8A31-E3E0-4920-98E5-1B701BB442F5</ns0:outgoing>
      <ns0:participantRef>sid-b56c83b4-9af7-4c84-a3e9-171f976994df</ns0:participantRef>
      <ns0:participantRef>sid-133391b3-fb33-4ba9-8e0a-ea397eb7fe2c</ns0:participantRef>
      <ns0:messageFlowRef>sid-a97d9ec1-890a-4543-a234-cc0823693567</ns0:messageFlowRef>
    </ns0:choreographyTask>
    <ns0:choreographyTask id="sid-9A69B876-7737-4E82-9EAF-4023E127749C" initiatingParticipantRef="sid-3B8A1FE7-589F-4569-832C-CC3F7E604339" loopType="None" name="Skasowanie wizyty">
      <ns0:incoming>sid-7ED6FD29-A918-4BEE-984F-7D61BC91A277</ns0:incoming>
      <ns0:outgoing>sid-B28A64DD-E529-42CC-8977-F03E32A92272</ns0:outgoing>
      <ns0:participantRef>sid-EFEBA1C0-1903-49E2-8FA3-6EA5A92E89E8</ns0:participantRef>
      <ns0:participantRef>sid-3B8A1FE7-589F-4569-832C-CC3F7E604339</ns0:participantRef>
      <ns0:messageFlowRef>sid-2c9b3ed8-8a5a-440a-bc6d-9facc285e314</ns0:messageFlowRef>
    </ns0:choreographyTask>
    <ns0:choreographyTask id="sid-E40BD334-AFF4-43A2-9144-B49F16663E03" initiatingParticipantRef="sid-CD0EA145-545E-4C05-8E04-5B7C5F029077" loopType="None" name="Dokonanie skasowania wizyty">
      <ns0:incoming>sid-61499B70-AE27-420D-BAD6-3364F25D3DAB</ns0:incoming>
      <ns0:outgoing>sid-9F4A7D1C-A10A-41DD-A9B1-001DA66F4F8C</ns0:outgoing>
      <ns0:participantRef>sid-DBC71017-8C7E-415C-B876-F19C3A362AE1</ns0:participantRef>
      <ns0:participantRef>sid-CD0EA145-545E-4C05-8E04-5B7C5F029077</ns0:participantRef>
      <ns0:messageFlowRef>sid-162a3ec9-bb1f-4758-ab5b-d1c50f46fa5a</ns0:messageFlowRef>
    </ns0:choreographyTask>
    <ns0:exclusiveGateway gatewayDirection="Converging" id="sid-5ECAAC87-4877-474A-A106-1ABD47BAA1EA" name="" default="sid-38BF3CF6-2305-4E4A-8E21-F20878ECDB1B">
      <ns0:incoming>sid-B28A64DD-E529-42CC-8977-F03E32A92272</ns0:incoming>
      <ns0:incoming>sid-C3D9CDB8-C5B2-4C3D-88DE-7C3D4974EDE9</ns0:incoming>
      <ns0:outgoing>sid-38BF3CF6-2305-4E4A-8E21-F20878ECDB1B</ns0:outgoing>
    </ns0:exclusiveGateway>
    <ns0:parallelGateway gatewayDirection="Diverging" id="sid-26AD080D-D2BA-4FFF-A84A-5ED32418E470" name="">
      <ns0:incoming>sid-38BF3CF6-2305-4E4A-8E21-F20878ECDB1B</ns0:incoming>
      <ns0:outgoing>sid-599161B4-CDC2-4AE4-BF24-45B7F6E1847B</ns0:outgoing>
      <ns0:outgoing>sid-61499B70-AE27-420D-BAD6-3364F25D3DAB</ns0:outgoing>
    </ns0:parallelGateway>
    <ns0:endEvent id="sid-8FFD75E0-7F1D-4AB7-90B8-163F66D0AF51" name="Wizyta usunięta">
      <ns0:incoming>sid-3A0B8A31-E3E0-4920-98E5-1B701BB442F5</ns0:incoming>
      <ns0:incoming>sid-9F4A7D1C-A10A-41DD-A9B1-001DA66F4F8C</ns0:incoming>
    </ns0:endEvent>
    <ns0:eventBasedGateway eventGatewayType="Exclusive" gatewayDirection="Diverging" id="sid-AA462EEC-E354-4613-8331-6A7316716EDF" instantiate="false" name="">
      <ns0:incoming>sid-0D4557C1-8E82-4E5A-893E-C176B253617E</ns0:incoming>
      <ns0:outgoing>sid-7ED6FD29-A918-4BEE-984F-7D61BC91A277</ns0:outgoing>
      <ns0:outgoing>sid-AE7FD9F2-089E-4675-B6BD-B4E543902680</ns0:outgoing>
    </ns0:eventBasedGateway>
    <ns0:startEvent id="sid-FC15200D-EFC8-49F5-A378-85EF47E5DD36" name="Usunięcie&amp;#10;wizyty">
      <ns0:outgoing>sid-0D4557C1-8E82-4E5A-893E-C176B253617E</ns0:outgoing>
    </ns0:startEvent>
    <ns0:sequenceFlow id="sid-B28A64DD-E529-42CC-8977-F03E32A92272" name="" sourceRef="sid-9A69B876-7737-4E82-9EAF-4023E127749C" targetRef="sid-5ECAAC87-4877-474A-A106-1ABD47BAA1EA"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-C3D9CDB8-C5B2-4C3D-88DE-7C3D4974EDE9" name="" sourceRef="sid-4DB685DD-6383-42A3-8D06-0AB4D69F921C" targetRef="sid-5ECAAC87-4877-474A-A106-1ABD47BAA1EA"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-38BF3CF6-2305-4E4A-8E21-F20878ECDB1B" name="" sourceRef="sid-5ECAAC87-4877-474A-A106-1ABD47BAA1EA" targetRef="sid-26AD080D-D2BA-4FFF-A84A-5ED32418E470"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-599161B4-CDC2-4AE4-BF24-45B7F6E1847B" name="" sourceRef="sid-26AD080D-D2BA-4FFF-A84A-5ED32418E470" targetRef="sid-CD8932F0-FA63-4338-B81E-2E2B4D6E149F"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-61499B70-AE27-420D-BAD6-3364F25D3DAB" name="" sourceRef="sid-26AD080D-D2BA-4FFF-A84A-5ED32418E470" targetRef="sid-E40BD334-AFF4-43A2-9144-B49F16663E03"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-3A0B8A31-E3E0-4920-98E5-1B701BB442F5" name="" sourceRef="sid-CD8932F0-FA63-4338-B81E-2E2B4D6E149F" targetRef="sid-8FFD75E0-7F1D-4AB7-90B8-163F66D0AF51"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-9F4A7D1C-A10A-41DD-A9B1-001DA66F4F8C" name="" sourceRef="sid-E40BD334-AFF4-43A2-9144-B49F16663E03" targetRef="sid-8FFD75E0-7F1D-4AB7-90B8-163F66D0AF51"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-7ED6FD29-A918-4BEE-984F-7D61BC91A277" name="" sourceRef="sid-AA462EEC-E354-4613-8331-6A7316716EDF" targetRef="sid-9A69B876-7737-4E82-9EAF-4023E127749C"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-AE7FD9F2-089E-4675-B6BD-B4E543902680" name="" sourceRef="sid-AA462EEC-E354-4613-8331-6A7316716EDF" targetRef="sid-4DB685DD-6383-42A3-8D06-0AB4D69F921C"></ns0:sequenceFlow>
    <ns0:sequenceFlow id="sid-0D4557C1-8E82-4E5A-893E-C176B253617E" name="" sourceRef="sid-FC15200D-EFC8-49F5-A378-85EF47E5DD36" targetRef="sid-AA462EEC-E354-4613-8331-6A7316716EDF"></ns0:sequenceFlow>
  </ns0:choreography>
</ns0:definitions>
```
A correct implementation is:
```solidity
//SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;
contract comp_sid_328a2509_2c20_498a_96e7_5cc2a7fa12c0 {
  uint public tokenState = 1;
  address[8] public participants;
  uint public conditions;
  constructor(address[8] memory _participants) {
    participants = _participants;
  }
  function setConditions(uint _conditions) external {
    conditions = _conditions;
  }
  function enact(uint id) external {
    uint _tokenState = tokenState;
    while(_tokenState != 0) {
      if (_tokenState & 1 == 1) {
        // <--- sid-4DB685DD-6383-42A3-8D06-0AB4D69F921C Skasowanie wizyty --->
        if (0 == id && msg.sender == participants[0]) {
        // <--- custom code for task here --->
        _tokenState &= ~uint(1);
        _tokenState |= 2;
        continue; 
        }
        // <--- sid-9A69B876-7737-4E82-9EAF-4023E127749C Skasowanie wizyty --->
        if (2 == id && msg.sender == participants[5]) {
        // <--- custom code for task here --->
        _tokenState &= ~uint(1);
        _tokenState |= 2;
        continue; 
        }
      }
      if (_tokenState & 4 == 4) {
        // <--- sid-CD8932F0-FA63-4338-B81E-2E2B4D6E149F Dokonanie skasowania wizyty --->
        if (1 == id && msg.sender == participants[2]) {
        // <--- custom code for task here --->
        _tokenState &= ~uint(4);
        _tokenState |= 0;
        break; // is end
        }
      }
      if (_tokenState & 8 == 8) {
        // <--- sid-E40BD334-AFF4-43A2-9144-B49F16663E03 Dokonanie skasowania wizyty --->
        if (3 == id && msg.sender == participants[7]) {
        // <--- custom code for task here --->
        _tokenState &= ~uint(8);
        _tokenState |= 0;
        break; // is end
        }
      }
      if (_tokenState & 2 == 2) {
        // <---  auto transition  --->
        _tokenState &= ~uint(2);
        _tokenState |= 12;
        continue; 
      }
      break;
    }
    tokenState = _tokenState;
  }
}
```