Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.
Use the following implementation rules:
- The contract name must be the `id` of the `<choreography>` element in the model.
- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.
- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start and end events are handled internally.
- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.
Use the following mapping of taskID to `choreographyTask` id of the model:
```json
{{taskIDs}}
```
- Implement exclusive gateways (`exclusiveGateway`s) using Solidity conditional logic.
- All outgoing flows (`<sequenceFlow>`s) from an exclusive gateway must enforce a condition, except the default flow.
- All `<sequenceFlow>`s with a `conditionExpression` must be implemented exactly as in `<conditionExpression>...</conditionExpression>` (each flow has a separate condition), 
and should only be evaluated when their source gateway is active.
- Ensure that each conditional branch must check its associated condition before permitting task execution.
- Default branches from exclusive gateways (i.e., the `default` attribute) must be treated as fallback paths if none of the conditions are satisfied.
- Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.
- For parallel gateways, the following tasks can be taken in any order but it has to wait for all incoming flows before continuing.
- Use the constructor `constructor(address[n] memory _participants)`, where n is the number of participants.
- Allow execution of each task only by the correct initiating participant by enforcing that `msg.sender` equals the correct `initiatingParticipantRef`.
- Use the following mapping of index of the address array to the participant id in the model:
```json
{{parIDs}}
```
- Use a variable `tokenState` to encode the current control flow position.
- At the end of the process, set the `tokenState` variable to zero.
Just output the smart contract, do not output additional, redundant text. 

An example.
Given the choreography
```XML
<?xml version="1.0" encoding="UTF-8"?>
<definitions id="_tTv5YOycEeiHGOQ2NkJZNQ" targetNamespace="http://bpmn.io/schema/bpmn">
  <message id="Message_032z8ml"></message>
  <message id="Message_19qrd5q"></message>
  <message id="Message_0vnm1wq"></message>
  <message id="Message_085o98p"></message>
  <choreography id="ChoreographyExample">
    <participant id="Participant_1tzf68i" name="Customer"></participant>
    <participant id="Participant_198pz14" name="Seller"></participant>
    <participant id="Participant_0378t5g" name="Manufacturer"></participant>
    <messageFlow id="MessageFlow_0r98f9o" sourceRef="Participant_198pz14" targetRef="Participant_1tzf68i" messageRef="Message_032z8ml"></messageFlow>
    <messageFlow id="MessageFlow_18xf3u6" sourceRef="Participant_198pz14" targetRef="Participant_1tzf68i" messageRef="Message_19qrd5q"></messageFlow>
    <messageFlow id="MessageFlow_0r00txu" sourceRef="Participant_198pz14" targetRef="Participant_0378t5g" messageRef="Message_0vnm1wq"></messageFlow>
    <messageFlow id="MessageFlow_1cx9rl4" sourceRef="Participant_1tzf68i" targetRef="Participant_198pz14" messageRef="Message_085o98p"></messageFlow>
    <startEvent id="Event_0y1sdn3">
      <outgoing>Flow_0e2c805</outgoing>
    </startEvent>
    <choreographyTask id="ChoreographyTask_1vnykqp" name="Order goods" initiatingParticipantRef="Participant_1tzf68i">
      <incoming>Flow_0e2c805</incoming>
      <outgoing>Flow_0d6j7vb</outgoing>
      <participantRef>Participant_1tzf68i</participantRef>
      <participantRef>Participant_198pz14</participantRef>
      <messageFlowRef>MessageFlow_1cx9rl4</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="ChoreographyTask_16lc74v" name="Produce goods" initiatingParticipantRef="Participant_198pz14">
      <incoming>Flow_0ybxbuc</incoming>
      <outgoing>Flow_14ulro8</outgoing>
      <participantRef>Participant_198pz14</participantRef>
      <participantRef>Participant_0378t5g</participantRef>
      <messageFlowRef>MessageFlow_0r00txu</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="ChoreographyTask_07t2zjo" name="Inform customer" initiatingParticipantRef="Participant_198pz14">
      <incoming>Flow_02gqwyg</incoming>
      <outgoing>Flow_1kim4vq</outgoing>
      <participantRef>Participant_198pz14</participantRef>
      <participantRef>Participant_1tzf68i</participantRef>
      <messageFlowRef>MessageFlow_18xf3u6</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="ChoreographyTask_056ylqg" name="Ship goods" initiatingParticipantRef="Participant_198pz14">
      <incoming>Flow_11zi7qu</incoming>
      <outgoing>Flow_04lnqsf</outgoing>
      <participantRef>Participant_198pz14</participantRef>
      <participantRef>Participant_1tzf68i</participantRef>
      <messageFlowRef>MessageFlow_0r98f9o</messageFlowRef>
    </choreographyTask>
    <sequenceFlow id="Flow_0e2c805" sourceRef="Event_0y1sdn3" targetRef="ChoreographyTask_1vnykqp"></sequenceFlow>
    <sequenceFlow id="Flow_0d6j7vb" sourceRef="ChoreographyTask_1vnykqp" targetRef="Gateway_1bpkhpg"></sequenceFlow>
    <sequenceFlow id="Flow_0ymdsa2" name="unavailable" sourceRef="Gateway_1bpkhpg" targetRef="Gateway_1klfaw3"></sequenceFlow>
    <sequenceFlow id="Flow_0ybxbuc" sourceRef="Gateway_1klfaw3" targetRef="ChoreographyTask_16lc74v"></sequenceFlow>
    <sequenceFlow id="Flow_02gqwyg" sourceRef="Gateway_1klfaw3" targetRef="ChoreographyTask_07t2zjo"></sequenceFlow>
    <sequenceFlow id="Flow_1kim4vq" sourceRef="ChoreographyTask_07t2zjo" targetRef="Gateway_0xcnzox"></sequenceFlow>
    <sequenceFlow id="Flow_14ulro8" sourceRef="ChoreographyTask_16lc74v" targetRef="Gateway_0xcnzox"></sequenceFlow>
    <sequenceFlow id="Flow_067nql1" name="available" sourceRef="Gateway_1bpkhpg" targetRef="Gateway_1yl9mch">
      <conditionExpression xsi:type="bpmn2:tFormalExpression" language="Solidity">conditions &amp; 1 == 1</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="Flow_198zju1" sourceRef="Gateway_0xcnzox" targetRef="Gateway_1yl9mch"></sequenceFlow>
    <sequenceFlow id="Flow_11zi7qu" sourceRef="Gateway_1yl9mch" targetRef="ChoreographyTask_056ylqg"></sequenceFlow>
    <sequenceFlow id="Flow_04lnqsf" sourceRef="ChoreographyTask_056ylqg" targetRef="Event_1ezlk4g"></sequenceFlow>
    <exclusiveGateway id="Gateway_1bpkhpg" default="Flow_0ymdsa2">
      <incoming>Flow_0d6j7vb</incoming>
      <outgoing>Flow_0ymdsa2</outgoing>
      <outgoing>Flow_067nql1</outgoing>
    </exclusiveGateway>
    <exclusiveGateway id="Gateway_1yl9mch" default="Flow_11zi7qu">
      <incoming>Flow_067nql1</incoming>
      <incoming>Flow_198zju1</incoming>
      <outgoing>Flow_11zi7qu</outgoing>
    </exclusiveGateway>
    <parallelGateway id="Gateway_1klfaw3">
      <incoming>Flow_0ymdsa2</incoming>
      <outgoing>Flow_0ybxbuc</outgoing>
      <outgoing>Flow_02gqwyg</outgoing>
    </parallelGateway>
    <parallelGateway id="Gateway_0xcnzox">
      <incoming>Flow_1kim4vq</incoming>
      <incoming>Flow_14ulro8</incoming>
      <outgoing>Flow_198zju1</outgoing>
    </parallelGateway>
    <endEvent id="Event_1ezlk4g">
      <incoming>Flow_04lnqsf</incoming>
    </endEvent>
  </choreography>
</definitions>
```
A correct implementation is (Note: The example code uses bitmasking for the current state, as it is more efficient and has optimised the control flow):
```solidity
//SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

contract ChoreographyExample {
  uint public tokenState = 1;
  address[3] public participants;
  uint public conditions;

  constructor(address[3] memory _participants) {
    participants = _participants;
  }
  function setConditions(uint _conditions) external {
    conditions = _conditions;
  }

  function enact(uint id) external {
    uint _tokenState = tokenState;

    while(_tokenState != 0) {
      if (_tokenState & 1 == 1) {
        // <--- ChoreographyTask_1vnykqp Order goods --->
        if (0 == id && msg.sender == participants[0]) {
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(1);
        _tokenState |= 6;
        continue; 
        }
      }
      if (_tokenState & 2 == 2) {
        // <--- ChoreographyTask_16lc74v Produce goods --->
        if (1 == id && msg.sender == participants[1]) {
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(2);
        _tokenState |= 8;
        continue; 
        }
      }
      if (_tokenState & 4 == 4) {
        // <--- ChoreographyTask_07t2zjo Inform customer --->
        if (2 == id && msg.sender == participants[1]) {
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(4);
        _tokenState |= 16;
        continue; 
        }
      }
      if (_tokenState & 32 == 32) {
        // <--- ChoreographyTask_056ylqg Ship goods --->
        if (3 == id && msg.sender == participants[1]) {
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(32);
        _tokenState |= 0;
        break; // is end
        }
      }
      if (_tokenState & 6 == 6) {
        if (conditions & 1 == 1) {
          // <---  auto transition  --->
          // Transition: deactivate current, activate next state
          _tokenState &= ~uint(6);
          _tokenState |= 32;
          continue; 
        }
      }
      if (_tokenState & 24 == 24) {
        // <---  auto transition  --->
        // Transition: deactivate current, activate next state
        _tokenState &= ~uint(24);
        _tokenState |= 32;
        continue; 
      }
      break;
    }

    tokenState = _tokenState;
  }

}
```
Example number two:
Given the choreography
```XML
<definitions exporter="Signavio Process Editor, http://www.signavio.com" exporterVersion="18.16.2" expressionLanguage="http://www.w3.org/TR/XPath" id="sid-10e3ca7c-e140-48b0-acf8-f2f7cf1f7ea1" targetNamespace="http://www.signavio.com" typeLanguage="http://www.w3.org/2001/XMLSchema" schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd">
  <message id="sid-F3899C94-65E0-41B9-A402-E276E002089F" name="Bewerbung">
    <extensionElements>
      <signavioMetaData metaKey="bgcolor" metaValue="#ffffff"></signavioMetaData>
      <signavioMetaData metaKey="bordercolor" metaValue="#000000"></signavioMetaData>
    </extensionElements>
  </message>
  <message id="sid-0D561DCE-E8A1-400F-8180-0D09D846C04E" name="Eingangsbestätigung">
    <extensionElements>
      <signavioMetaData metaKey="bgcolor" metaValue="#ffffff"></signavioMetaData>
      <signavioMetaData metaKey="bordercolor" metaValue="#000000"></signavioMetaData>
    </extensionElements>
  </message>
  <message id="sid-C0F50D32-DA41-4402-A476-00DA0A8D3D59" name="Liste der fehlenden Unterlagen">
    <extensionElements>
      <signavioMetaData metaKey="bgcolor" metaValue="#ffffff"></signavioMetaData>
      <signavioMetaData metaKey="bordercolor" metaValue="#000000"></signavioMetaData>
    </extensionElements>
  </message>
  <message id="sid-CDF42052-534D-4E09-8A46-F1A421460A8F" name="Fehlenden Unterlagen">
    <extensionElements>
      <signavioMetaData metaKey="bgcolor" metaValue="#ffffff"></signavioMetaData>
      <signavioMetaData metaKey="bordercolor" metaValue="#000000"></signavioMetaData>
    </extensionElements>
  </message>
  <message id="sid-E45AA616-75C9-4E74-88F7-467501EFA117" name="Zusage">
    <extensionElements>
      <signavioMetaData metaKey="bgcolor" metaValue="#ffffff"></signavioMetaData>
      <signavioMetaData metaKey="bordercolor" metaValue="#000000"></signavioMetaData>
    </extensionElements>
  </message>
  <message id="sid-8454C160-FDB9-4316-B27B-825D3A9F0126" name="Absage">
    <extensionElements>
      <signavioMetaData metaKey="bgcolor" metaValue="#ffffff"></signavioMetaData>
      <signavioMetaData metaKey="bordercolor" metaValue="#000000"></signavioMetaData>
    </extensionElements>
  </message>
  <choreography id="sid_fcc8b91c_8ddf_4dfa_9dbe_c492016f54f1" isClosed="false">
    <participant id="sid-DEB0453E-CA6C-4EF9-A672-5C532227F23D" name="Bewerber"></participant>
    <participant id="sid-DA99E64B-FA2B-4ADB-8C06-50636ECEF44D" name="Uni"></participant>
    <participant id="sid-87AF061B-967D-4188-9442-9C3FADF3EFE2" name="Uni"></participant>
    <participant id="sid-E430F415-B872-4206-B3BF-C325EDD933F2" name="Bewerber"></participant>
    <participant id="sid-8D5C8892-C331-48AF-A5DA-D7F14A7B5FEC" name="Bewerber"></participant>
    <participant id="sid-E43F9ED0-678D-4DFC-9FC2-B3C6F225E8EF" name="Uni"></participant>
    <participant id="sid-4008BC50-EDA9-499D-BBA7-DF7DDC897FDF" name="Uni"></participant>
    <participant id="sid-34FE4829-D2BF-411C-9878-178ED3B2C629" name="Bewerber"></participant>
    <participant id="sid-DEAD035B-2ABC-4E50-B910-156ECC692EAE" name="Uni"></participant>
    <participant id="sid-8ABC7871-B77B-4CE8-85A0-E0CC38F4639C" name="Bewerber"></participant>
    <messageFlow id="sid-0ac94f8c-3534-471e-a589-c43b9532db37" messageRef="sid-F3899C94-65E0-41B9-A402-E276E002089F" sourceRef="sid-DEB0453E-CA6C-4EF9-A672-5C532227F23D" targetRef="sid-DA99E64B-FA2B-4ADB-8C06-50636ECEF44D"></messageFlow>
    <messageFlow id="sid-113a347f-32c9-46c6-a428-57221d8eb5ff" messageRef="sid-0D561DCE-E8A1-400F-8180-0D09D846C04E" sourceRef="sid-DA99E64B-FA2B-4ADB-8C06-50636ECEF44D" targetRef="sid-DEB0453E-CA6C-4EF9-A672-5C532227F23D"></messageFlow>
    <messageFlow id="sid-999a1dde-8f85-4444-9cf0-57d30b8644ba" messageRef="sid-C0F50D32-DA41-4402-A476-00DA0A8D3D59" sourceRef="sid-87AF061B-967D-4188-9442-9C3FADF3EFE2" targetRef="sid-E430F415-B872-4206-B3BF-C325EDD933F2"></messageFlow>
    <messageFlow id="sid-d353bc09-c19e-4a7f-ab99-79711e570cf4" messageRef="sid-CDF42052-534D-4E09-8A46-F1A421460A8F" sourceRef="sid-8D5C8892-C331-48AF-A5DA-D7F14A7B5FEC" targetRef="sid-E43F9ED0-678D-4DFC-9FC2-B3C6F225E8EF"></messageFlow>
    <messageFlow id="sid-35768254-6281-4d79-bcc8-08b0654a20ec" messageRef="sid-E45AA616-75C9-4E74-88F7-467501EFA117" sourceRef="sid-4008BC50-EDA9-499D-BBA7-DF7DDC897FDF" targetRef="sid-34FE4829-D2BF-411C-9878-178ED3B2C629"></messageFlow>
    <messageFlow id="sid-701930b4-7d65-4abd-897e-b575a6e16e23" messageRef="sid-8454C160-FDB9-4316-B27B-825D3A9F0126" sourceRef="sid-DEAD035B-2ABC-4E50-B910-156ECC692EAE" targetRef="sid-8ABC7871-B77B-4CE8-85A0-E0CC38F4639C"></messageFlow>
    <textAnnotation id="sid-A5B8BDCD-DF25-4EBC-8577-4181E1427D62" alignment="left" textFormat="text/plain">
      <text>Two-way communication</text>
    </textAnnotation>
    <association associationDirection="None" id="sid-6D3784DE-F046-4170-B7B7-BB0EAE13D829" sourceRef="sid-C12DEEB5-86BF-4254-BB68-C930FD0905D6" targetRef="sid-A5B8BDCD-DF25-4EBC-8577-4181E1427D62"></association>
    <startEvent id="sid-70A86310-0F95-4A72-8333-C8AE6DF54368" name="">
      <outgoing>sid-8F4D6E79-C431-4378-A267-85F9639FF5D9</outgoing>
    </startEvent>
    <choreographyTask id="sid-C12DEEB5-86BF-4254-BB68-C930FD0905D6" initiatingParticipantRef="sid-DEB0453E-CA6C-4EF9-A672-5C532227F23D" loopType="None" name="Bewerbung und Eingangsbestätigung senden">
      <incoming>sid-8F4D6E79-C431-4378-A267-85F9639FF5D9</incoming>
      <outgoing>sid-7DD2D391-52FE-4BF4-970B-0970F8CF1DA6</outgoing>
      <participantRef>sid-DEB0453E-CA6C-4EF9-A672-5C532227F23D</participantRef>
      <participantRef>sid-DA99E64B-FA2B-4ADB-8C06-50636ECEF44D</participantRef>
      <messageFlowRef>sid-0ac94f8c-3534-471e-a589-c43b9532db37</messageFlowRef>
      <messageFlowRef>sid-113a347f-32c9-46c6-a428-57221d8eb5ff</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="sid-63049054-FF0D-448E-A42E-7B917601D74C" initiatingParticipantRef="sid-87AF061B-967D-4188-9442-9C3FADF3EFE2" loopType="None" name="Fehlende Unterlagen anfordern">
      <incoming>sid-BF908D03-AB64-4DE5-931B-5CB7F5AF78C7</incoming>
      <outgoing>sid-44DF8367-566C-42E9-87C1-7A1F620421FF</outgoing>
      <participantRef>sid-87AF061B-967D-4188-9442-9C3FADF3EFE2</participantRef>
      <participantRef>sid-E430F415-B872-4206-B3BF-C325EDD933F2</participantRef>
      <messageFlowRef>sid-999a1dde-8f85-4444-9cf0-57d30b8644ba</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="sid-9153A3B6-9D23-44BA-A624-2B6C91C8355F" initiatingParticipantRef="sid-8D5C8892-C331-48AF-A5DA-D7F14A7B5FEC" loopType="None" name="Fehlende Unterlagen schicken">
      <incoming>sid-44DF8367-566C-42E9-87C1-7A1F620421FF</incoming>
      <outgoing>sid-992B71D0-4289-4255-9892-B165D7F63C53</outgoing>
      <participantRef>sid-8D5C8892-C331-48AF-A5DA-D7F14A7B5FEC</participantRef>
      <participantRef>sid-E43F9ED0-678D-4DFC-9FC2-B3C6F225E8EF</participantRef>
      <messageFlowRef>sid-d353bc09-c19e-4a7f-ab99-79711e570cf4</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="sid-996BBBD2-CA44-45A3-BD54-6C7090363FBF" initiatingParticipantRef="sid-4008BC50-EDA9-499D-BBA7-DF7DDC897FDF" loopType="None" name="Zusage senden">
      <incoming>sid-2F3AC027-22F1-4D6A-8A9B-8146D23D732B</incoming>
      <outgoing>sid-6489315E-88D3-47BC-862B-01A80630310B</outgoing>
      <participantRef>sid-4008BC50-EDA9-499D-BBA7-DF7DDC897FDF</participantRef>
      <participantRef>sid-34FE4829-D2BF-411C-9878-178ED3B2C629</participantRef>
      <messageFlowRef>sid-35768254-6281-4d79-bcc8-08b0654a20ec</messageFlowRef>
    </choreographyTask>
    <choreographyTask id="sid-510EFA3E-DFC7-4FCE-A5B1-57AB528CFBB9" initiatingParticipantRef="sid-DEAD035B-2ABC-4E50-B910-156ECC692EAE" loopType="None" name="Absage senden">
      <incoming>sid-882B8A1A-5E7A-4DF9-BFE5-D0F41C10960F</incoming>
      <outgoing>sid-62C7B7E0-9B96-43E2-870C-ABD38067C114</outgoing>
      <participantRef>sid-DEAD035B-2ABC-4E50-B910-156ECC692EAE</participantRef>
      <participantRef>sid-8ABC7871-B77B-4CE8-85A0-E0CC38F4639C</participantRef>
      <messageFlowRef>sid-701930b4-7d65-4abd-897e-b575a6e16e23</messageFlowRef>
    </choreographyTask>
    <exclusiveGateway default="sid-4069629D-D16A-45C2-9564-95868D56762E" gatewayDirection="Diverging" id="sid-C03C28F6-BD2B-46DC-BE33-9AAF77C48157" name="Bewerbung vollständig ?">
      <incoming>sid-7DD2D391-52FE-4BF4-970B-0970F8CF1DA6</incoming>
      <outgoing>sid-4069629D-D16A-45C2-9564-95868D56762E</outgoing>
      <outgoing>sid-BF908D03-AB64-4DE5-931B-5CB7F5AF78C7</outgoing>
    </exclusiveGateway>
    <exclusiveGateway gatewayDirection="Converging" id="sid-A1DCC015-7407-4D15-80AB-4AC299655E72" name="" default="sid-8E40B30E-1FE9-4F67-AAE2-04A0F5C5F6B7">
      <incoming>sid-992B71D0-4289-4255-9892-B165D7F63C53</incoming>
      <incoming>sid-4069629D-D16A-45C2-9564-95868D56762E</incoming>
      <outgoing>sid-8E40B30E-1FE9-4F67-AAE2-04A0F5C5F6B7</outgoing>
    </exclusiveGateway>
    <exclusiveGateway default="sid-882B8A1A-5E7A-4DF9-BFE5-D0F41C10960F" gatewayDirection="Diverging" id="sid-834869E9-BC7C-41F5-8A4E-FD7DC06D693D" name="Bewerbung ausreichend ?">
      <incoming>sid-8E40B30E-1FE9-4F67-AAE2-04A0F5C5F6B7</incoming>
      <outgoing>sid-2F3AC027-22F1-4D6A-8A9B-8146D23D732B</outgoing>
      <outgoing>sid-882B8A1A-5E7A-4DF9-BFE5-D0F41C10960F</outgoing>
    </exclusiveGateway>
    <exclusiveGateway gatewayDirection="Converging" id="sid-684ECB46-310F-4D15-9C70-6CE7F49A771F" name="" default="sid-0E18896B-5012-4402-95AC-3956E3DE6B16">
      <incoming>sid-6489315E-88D3-47BC-862B-01A80630310B</incoming>
      <incoming>sid-62C7B7E0-9B96-43E2-870C-ABD38067C114</incoming>
      <outgoing>sid-0E18896B-5012-4402-95AC-3956E3DE6B16</outgoing>
    </exclusiveGateway>
    <endEvent id="sid-8EA82B3A-29EA-4FD9-9EEC-54B4805F4563" name="Bewerbung bearbeitetet">
      <incoming>sid-0E18896B-5012-4402-95AC-3956E3DE6B16</incoming>
    </endEvent>
    <sequenceFlow id="sid-8F4D6E79-C431-4378-A267-85F9639FF5D9" name="" sourceRef="sid-70A86310-0F95-4A72-8333-C8AE6DF54368" targetRef="sid-C12DEEB5-86BF-4254-BB68-C930FD0905D6"></sequenceFlow>
    <sequenceFlow id="sid-7DD2D391-52FE-4BF4-970B-0970F8CF1DA6" name="" sourceRef="sid-C12DEEB5-86BF-4254-BB68-C930FD0905D6" targetRef="sid-C03C28F6-BD2B-46DC-BE33-9AAF77C48157"></sequenceFlow>
    <sequenceFlow id="sid-44DF8367-566C-42E9-87C1-7A1F620421FF" name="" sourceRef="sid-63049054-FF0D-448E-A42E-7B917601D74C" targetRef="sid-9153A3B6-9D23-44BA-A624-2B6C91C8355F"></sequenceFlow>
    <sequenceFlow id="sid-992B71D0-4289-4255-9892-B165D7F63C53" name="" sourceRef="sid-9153A3B6-9D23-44BA-A624-2B6C91C8355F" targetRef="sid-A1DCC015-7407-4D15-80AB-4AC299655E72"></sequenceFlow>
    <sequenceFlow id="sid-4069629D-D16A-45C2-9564-95868D56762E" name="" sourceRef="sid-C03C28F6-BD2B-46DC-BE33-9AAF77C48157" targetRef="sid-A1DCC015-7407-4D15-80AB-4AC299655E72"></sequenceFlow>
    <sequenceFlow id="sid-BF908D03-AB64-4DE5-931B-5CB7F5AF78C7" name="conditions &amp; 1 == 1" sourceRef="sid-C03C28F6-BD2B-46DC-BE33-9AAF77C48157" targetRef="sid-63049054-FF0D-448E-A42E-7B917601D74C">
      <conditionExpression xsi:type="bpmn2:tFormalExpression" language="Solidity">conditions &amp; 1 == 1</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="sid-8E40B30E-1FE9-4F67-AAE2-04A0F5C5F6B7" name="" sourceRef="sid-A1DCC015-7407-4D15-80AB-4AC299655E72" targetRef="sid-834869E9-BC7C-41F5-8A4E-FD7DC06D693D"></sequenceFlow>
    <sequenceFlow id="sid-6489315E-88D3-47BC-862B-01A80630310B" name="" sourceRef="sid-996BBBD2-CA44-45A3-BD54-6C7090363FBF" targetRef="sid-684ECB46-310F-4D15-9C70-6CE7F49A771F"></sequenceFlow>
    <sequenceFlow id="sid-62C7B7E0-9B96-43E2-870C-ABD38067C114" name="" sourceRef="sid-510EFA3E-DFC7-4FCE-A5B1-57AB528CFBB9" targetRef="sid-684ECB46-310F-4D15-9C70-6CE7F49A771F"></sequenceFlow>
    <sequenceFlow id="sid-0E18896B-5012-4402-95AC-3956E3DE6B16" name="" sourceRef="sid-684ECB46-310F-4D15-9C70-6CE7F49A771F" targetRef="sid-8EA82B3A-29EA-4FD9-9EEC-54B4805F4563"></sequenceFlow>
    <sequenceFlow id="sid-2F3AC027-22F1-4D6A-8A9B-8146D23D732B" name="conditions &amp; 2 == 2" sourceRef="sid-834869E9-BC7C-41F5-8A4E-FD7DC06D693D" targetRef="sid-996BBBD2-CA44-45A3-BD54-6C7090363FBF">
      <conditionExpression xsi:type="bpmn2:tFormalExpression" language="Solidity">conditions &amp; 2 == 2</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="sid-882B8A1A-5E7A-4DF9-BFE5-D0F41C10960F" name="" sourceRef="sid-834869E9-BC7C-41F5-8A4E-FD7DC06D693D" targetRef="sid-510EFA3E-DFC7-4FCE-A5B1-57AB528CFBB9"></sequenceFlow>
  </choreography>
</definitions>
```
A correct implementation is:
```solidity
//SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

contract comp_sid_fcc8b91c_8ddf_4dfa_9dbe_c492016f54f1 {
  uint public tokenState = 1;
  address[10] public participants;
  uint public conditions;

  constructor(address[10] memory _participants) {
    participants = _participants;
  }
  function setConditions(uint _conditions) external {
    conditions = _conditions;
  }

  function enact(uint id) external {
    uint _tokenState = tokenState;

    while(_tokenState != 0) {
      if (_tokenState & 1 == 1) {
        // <--- sid-C12DEEB5-86BF-4254-BB68-C930FD0905D6 Bewerbung und Eingangsbestätigung senden --->
        if (0 == id && msg.sender == participants[0]) {
        // <--- custom code for task here --->
        _tokenState &= ~uint(1);
        _tokenState |= 2;
        continue; 
        }
      }
      if (_tokenState & 2 == 2) {
        if (conditions & 1 == 1) {
          // <--- sid-63049054-FF0D-448E-A42E-7B917601D74C Fehlende Unterlagen anfordern --->
          if (1 == id && msg.sender == participants[2]) {
          // <--- custom code for task here --->
          _tokenState &= ~uint(2);
          _tokenState |= 4;
          continue; 
          }
        }
        else {
          // <---  auto transition  --->
          _tokenState &= ~uint(2);
          _tokenState |= 8;
          continue; 
        }
      }
      if (_tokenState & 4 == 4) {
        // <--- sid-9153A3B6-9D23-44BA-A624-2B6C91C8355F Fehlende Unterlagen schicken --->
        if (2 == id && msg.sender == participants[4]) {
        // <--- custom code for task here --->
        _tokenState &= ~uint(4);
        _tokenState |= 8;
        continue; 
        }
      }
      if (_tokenState & 8 == 8) {
        if (conditions & 2 == 2) {
          // <--- sid-996BBBD2-CA44-45A3-BD54-6C7090363FBF Zusage senden --->
          if (3 == id && msg.sender == participants[6]) {
          // <--- custom code for task here --->
          _tokenState &= ~uint(8);
          _tokenState |= 0;
          break; // is end
          }
        }
        else {
          // <--- sid-510EFA3E-DFC7-4FCE-A5B1-57AB528CFBB9 Absage senden --->
          if (4 == id && msg.sender == participants[8]) {
          // <--- custom code for task here --->
          _tokenState &= ~uint(8);
          _tokenState |= 0;
          break; // is end
          }
        }
      }
      break;
    }

    tokenState = _tokenState;
  }
}
```