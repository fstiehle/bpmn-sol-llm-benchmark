{
  "name": "meta-llama/llama-3.3-70b-instruct - one-shot",
  "processID": "sid_2e74919b_c2d6_44d6_9596_5771ad85f314",
  "timestamp": "2025-06-12T09:15:24.174Z",
  "model": "meta-llama/llama-3.3-70b-instruct",
  "compiled": true,
  "usage": {
    "prompt_tokens": 8305,
    "completion_tokens": 971,
    "total_tokens": 9276,
    "cost": 0.0008241
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-181F9D56-226F-4071-A541-5B34611F8C21\":1,\"sid-3791BA58-F1EE-48E9-A212-E6FBC50B3AAC\":2,\"sid-E4C67638-32F7-4EF7-B567-F5CDC766B074\":3,\"sid-95D5D543-0404-4C29-98F8-FD3EA102C79F\":4}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-6660C65A-6582-4059-93FB-9BBB3546A95C\":0,\"sid-A55F8ADA-9CC7-4927-AC80-471920CB9A51\":1,\"sid-3D9ABCFA-0B62-47EF-806C-CBEFCAFF9CD6\":2,\"sid-F199B39C-245E-406D-AD68-C9829FA7AFB8\":3,\"sid-9DA08B84-BF46-42AB-BCAA-AD6B6E33A8AE\":4,\"sid-73989703-17A5-41BA-AA60-697264CE7253\":5,\"sid-0A68008E-9992-4571-AF4F-893F675BC6C0\":6,\"sid-56DC16DF-E322-4B39-B802-F2163D586528\":7}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-24a72e93-cd22-4174-81f9-64b54a5f2e50\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:choreography id=\"sid_2e74919b_c2d6_44d6_9596_5771ad85f314\" isClosed=\"false\">\n    <ns0:participant id=\"sid-6660C65A-6582-4059-93FB-9BBB3546A95C\" name=\"\"></ns0:participant>\n    <ns0:participant id=\"sid-A55F8ADA-9CC7-4927-AC80-471920CB9A51\" name=\"\"></ns0:participant>\n    <ns0:participant id=\"sid-3D9ABCFA-0B62-47EF-806C-CBEFCAFF9CD6\" name=\"\"></ns0:participant>\n    <ns0:participant id=\"sid-F199B39C-245E-406D-AD68-C9829FA7AFB8\" name=\"\"></ns0:participant>\n    <ns0:participant id=\"sid-9DA08B84-BF46-42AB-BCAA-AD6B6E33A8AE\" name=\"\"></ns0:participant>\n    <ns0:participant id=\"sid-73989703-17A5-41BA-AA60-697264CE7253\" name=\"\"></ns0:participant>\n    <ns0:participant id=\"sid-0A68008E-9992-4571-AF4F-893F675BC6C0\" name=\"\"></ns0:participant>\n    <ns0:participant id=\"sid-56DC16DF-E322-4B39-B802-F2163D586528\" name=\"\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-9eade98d-8611-4718-9031-71962c7ea795\" sourceRef=\"sid-6660C65A-6582-4059-93FB-9BBB3546A95C\" targetRef=\"sid-A55F8ADA-9CC7-4927-AC80-471920CB9A51\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-826c87af-61e1-41d6-adc6-483b01312114\" sourceRef=\"sid-3D9ABCFA-0B62-47EF-806C-CBEFCAFF9CD6\" targetRef=\"sid-F199B39C-245E-406D-AD68-C9829FA7AFB8\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-259e34bd-4c6d-43ac-9a60-8d77aba7423d\" sourceRef=\"sid-9DA08B84-BF46-42AB-BCAA-AD6B6E33A8AE\" targetRef=\"sid-73989703-17A5-41BA-AA60-697264CE7253\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-c85ac898-7cf7-4f20-bc59-b46e0fca67ad\" sourceRef=\"sid-0A68008E-9992-4571-AF4F-893F675BC6C0\" targetRef=\"sid-56DC16DF-E322-4B39-B802-F2163D586528\"></ns0:messageFlow>\n    <ns0:startEvent id=\"sid-43D725B3-CDB2-4E8F-A687-B573FAF34B7E\" name=\"Gast betritt Rezeption\">\n      <ns0:outgoing>sid-80FC9738-AD56-4994-BFCA-584EB7C02EF7</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:choreographyTask id=\"sid-181F9D56-226F-4071-A541-5B34611F8C21\" initiatingParticipantRef=\"sid-6660C65A-6582-4059-93FB-9BBB3546A95C\" loopType=\"None\" name=\"Auf Reservierung prüfen&amp;#10;\">\n      <ns0:incoming>sid-80FC9738-AD56-4994-BFCA-584EB7C02EF7</ns0:incoming>\n      <ns0:outgoing>sid-C75EA31C-C7AD-4E62-8F0F-DE3D2C30E0F0</ns0:outgoing>\n      <ns0:participantRef>sid-6660C65A-6582-4059-93FB-9BBB3546A95C</ns0:participantRef>\n      <ns0:participantRef>sid-A55F8ADA-9CC7-4927-AC80-471920CB9A51</ns0:participantRef>\n      <ns0:messageFlowRef>sid-9eade98d-8611-4718-9031-71962c7ea795</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-3791BA58-F1EE-48E9-A212-E6FBC50B3AAC\" initiatingParticipantRef=\"sid-3D9ABCFA-0B62-47EF-806C-CBEFCAFF9CD6\" loopType=\"None\" name=\"Schlüssel aushändigen&amp;#10;\">\n      <ns0:incoming>sid-AF3DC48F-801F-46A6-81FF-52F4AF85794F</ns0:incoming>\n      <ns0:outgoing>sid-BBB05CAE-53BC-4876-B486-7DB1FDDE036E</ns0:outgoing>\n      <ns0:participantRef>sid-3D9ABCFA-0B62-47EF-806C-CBEFCAFF9CD6</ns0:participantRef>\n      <ns0:participantRef>sid-F199B39C-245E-406D-AD68-C9829FA7AFB8</ns0:participantRef>\n      <ns0:messageFlowRef>sid-826c87af-61e1-41d6-adc6-483b01312114</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-E4C67638-32F7-4EF7-B567-F5CDC766B074\" initiatingParticipantRef=\"sid-9DA08B84-BF46-42AB-BCAA-AD6B6E33A8AE\" loopType=\"None\" name=\"Freies Zimmer verfügbar&amp;#10;&amp;#10;?\">\n      <ns0:incoming>sid-053A56CF-EA09-4E3A-8A03-6F556AD327A2</ns0:incoming>\n      <ns0:outgoing>sid-1944BA4A-6401-4C35-AD9F-EB7A91B445B2</ns0:outgoing>\n      <ns0:participantRef>sid-9DA08B84-BF46-42AB-BCAA-AD6B6E33A8AE</ns0:participantRef>\n      <ns0:participantRef>sid-73989703-17A5-41BA-AA60-697264CE7253</ns0:participantRef>\n      <ns0:messageFlowRef>sid-259e34bd-4c6d-43ac-9a60-8d77aba7423d</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-95D5D543-0404-4C29-98F8-FD3EA102C79F\" initiatingParticipantRef=\"sid-0A68008E-9992-4571-AF4F-893F675BC6C0\" loopType=\"None\" name=\"In anderes Hotel &amp;#10;&amp;#10;verwiesen&amp;#10;\">\n      <ns0:incoming>sid-5C58D34C-EB8C-487B-A49E-F69E93E01FAA</ns0:incoming>\n      <ns0:outgoing>sid-513C880B-EFAE-4FB4-91DF-77081599EB09</ns0:outgoing>\n      <ns0:participantRef>sid-0A68008E-9992-4571-AF4F-893F675BC6C0</ns0:participantRef>\n      <ns0:participantRef>sid-56DC16DF-E322-4B39-B802-F2163D586528</ns0:participantRef>\n      <ns0:messageFlowRef>sid-c85ac898-7cf7-4f20-bc59-b46e0fca67ad</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:exclusiveGateway gatewayDirection=\"Diverging\" id=\"sid-A25E4563-B053-45A5-987B-A0B3D3B3CCCF\" name=\"\" default=\"sid-053A56CF-EA09-4E3A-8A03-6F556AD327A2\">\n      <ns0:incoming>sid-C75EA31C-C7AD-4E62-8F0F-DE3D2C30E0F0</ns0:incoming>\n      <ns0:outgoing>sid-053A56CF-EA09-4E3A-8A03-6F556AD327A2</ns0:outgoing>\n      <ns0:outgoing>sid-810917A0-3C19-4435-9F03-2FAFC8A4B811</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:exclusiveGateway gatewayDirection=\"Diverging\" id=\"sid-22F83BA6-496B-4257-ABA3-36229D63918F\" name=\"\" default=\"sid-5C58D34C-EB8C-487B-A49E-F69E93E01FAA\">\n      <ns0:incoming>sid-1944BA4A-6401-4C35-AD9F-EB7A91B445B2</ns0:incoming>\n      <ns0:outgoing>sid-5C58D34C-EB8C-487B-A49E-F69E93E01FAA</ns0:outgoing>\n      <ns0:outgoing>sid-E1240EF2-1366-4153-BB02-E538496BDDCC</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:exclusiveGateway gatewayDirection=\"Converging\" id=\"sid-F42E8563-54A5-4CAD-B230-15AE7A37AE91\" name=\"\" default=\"sid-AF3DC48F-801F-46A6-81FF-52F4AF85794F\">\n      <ns0:incoming>sid-810917A0-3C19-4435-9F03-2FAFC8A4B811</ns0:incoming>\n      <ns0:incoming>sid-E1240EF2-1366-4153-BB02-E538496BDDCC</ns0:incoming>\n      <ns0:outgoing>sid-AF3DC48F-801F-46A6-81FF-52F4AF85794F</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:exclusiveGateway gatewayDirection=\"Converging\" id=\"sid-461AC4BA-58CF-4194-8464-2A0B8AD34054\" name=\"\" default=\"sid-1A49A82D-021D-411D-9878-64A2AA0480D8\">\n      <ns0:incoming>sid-513C880B-EFAE-4FB4-91DF-77081599EB09</ns0:incoming>\n      <ns0:incoming>sid-BBB05CAE-53BC-4876-B486-7DB1FDDE036E</ns0:incoming>\n      <ns0:outgoing>sid-1A49A82D-021D-411D-9878-64A2AA0480D8</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:endEvent id=\"sid-AA48C9CC-A2B1-407A-B43B-64DD64D25E67\" name=\"Gast verlässt Rezeption\">\n      <ns0:incoming>sid-1A49A82D-021D-411D-9878-64A2AA0480D8</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-80FC9738-AD56-4994-BFCA-584EB7C02EF7\" name=\"\" sourceRef=\"sid-43D725B3-CDB2-4E8F-A687-B573FAF34B7E\" targetRef=\"sid-181F9D56-226F-4071-A541-5B34611F8C21\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-C75EA31C-C7AD-4E62-8F0F-DE3D2C30E0F0\" name=\"\" sourceRef=\"sid-181F9D56-226F-4071-A541-5B34611F8C21\" targetRef=\"sid-A25E4563-B053-45A5-987B-A0B3D3B3CCCF\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-053A56CF-EA09-4E3A-8A03-6F556AD327A2\" name=\"nicht vorhanden\" sourceRef=\"sid-A25E4563-B053-45A5-987B-A0B3D3B3CCCF\" targetRef=\"sid-E4C67638-32F7-4EF7-B567-F5CDC766B074\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-1944BA4A-6401-4C35-AD9F-EB7A91B445B2\" name=\"\" sourceRef=\"sid-E4C67638-32F7-4EF7-B567-F5CDC766B074\" targetRef=\"sid-22F83BA6-496B-4257-ABA3-36229D63918F\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-5C58D34C-EB8C-487B-A49E-F69E93E01FAA\" name=\"Nein&amp;#10;\" sourceRef=\"sid-22F83BA6-496B-4257-ABA3-36229D63918F\" targetRef=\"sid-95D5D543-0404-4C29-98F8-FD3EA102C79F\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-513C880B-EFAE-4FB4-91DF-77081599EB09\" name=\"\" sourceRef=\"sid-95D5D543-0404-4C29-98F8-FD3EA102C79F\" targetRef=\"sid-461AC4BA-58CF-4194-8464-2A0B8AD34054\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-810917A0-3C19-4435-9F03-2FAFC8A4B811\" name=\"conditions &amp; 1 == 1\" sourceRef=\"sid-A25E4563-B053-45A5-987B-A0B3D3B3CCCF\" targetRef=\"sid-F42E8563-54A5-4CAD-B230-15AE7A37AE91\">\n      <conditionExpression xsi:type=\"ns0:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-AF3DC48F-801F-46A6-81FF-52F4AF85794F\" name=\"\" sourceRef=\"sid-F42E8563-54A5-4CAD-B230-15AE7A37AE91\" targetRef=\"sid-3791BA58-F1EE-48E9-A212-E6FBC50B3AAC\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-E1240EF2-1366-4153-BB02-E538496BDDCC\" name=\"conditions &amp; 2 == 2\" sourceRef=\"sid-22F83BA6-496B-4257-ABA3-36229D63918F\" targetRef=\"sid-F42E8563-54A5-4CAD-B230-15AE7A37AE91\">\n      <conditionExpression xsi:type=\"ns0:tFormalExpression\" language=\"Solidity\">conditions &amp; 2 == 2</conditionExpression>\n    </ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-1A49A82D-021D-411D-9878-64A2AA0480D8\" name=\"\" sourceRef=\"sid-461AC4BA-58CF-4194-8464-2A0B8AD34054\" targetRef=\"sid-AA48C9CC-A2B1-407A-B43B-64DD64D25E67\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-BBB05CAE-53BC-4876-B486-7DB1FDDE036E\" name=\"\" sourceRef=\"sid-3791BA58-F1EE-48E9-A212-E6FBC50B3AAC\" targetRef=\"sid-461AC4BA-58CF-4194-8464-2A0B8AD34054\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "Here's the Solidity smart contract generated based on the provided BPMN 2.0 choreography model XML:\n\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract sid_2e74919b_c2d6_44d6_9596_5771ad85f314 {\n  uint public tokenState = 1;\n  address[8] public participants;\n  uint public conditions;\n\n  constructor(address[8] memory _participants) {\n    participants = _participants;\n  }\n\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState!= 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_181F9D56_226F_4071_A541_5B34611F8C21 Auf Reservierung prüfen --->\n        if (1 == id && msg.sender == participants[0]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(1);\n          _tokenState |= 2;\n          id = 0;\n          continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // Exclusive Gateway: sid_A25E4563_B053_45A5_987B_A0B3D3B3CCCF\n        if (conditions & 1 == 1) {\n          _tokenState &= ~uint(2);\n          _tokenState |= 4;\n          continue; \n        } else {\n          _tokenState &= ~uint(2);\n          _tokenState |= 8;\n          continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_E4C67638_32F7_4EF7_B567_F5CDC766B074 Freies Zimmer verfügbar --->\n        if (3 == id && msg.sender == participants[4]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(4);\n          _tokenState |= 16;\n          id = 0;\n          continue; \n        }\n      }\n      if (_tokenState & 8 == 8) {\n        // Exclusive Gateway: sid_22F83BA6_496B_4257_ABA3_36229D63918F\n        if (conditions & 2 == 2) {\n          _tokenState &= ~uint(8);\n          _tokenState |= 32;\n          continue; \n        } else {\n          _tokenState &= ~uint(8);\n          _tokenState |= 64;\n          continue; \n        }\n      }\n      if (_tokenState & 16 == 16) {\n        // <--- ChoreographyTask_95D5D543_0404_4C29_98F8_FD3EA102C79F In anderes Hotel verwiesen --->\n        if (4 == id && msg.sender == participants[6]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(16);\n          _tokenState |= 128;\n          id = 0;\n          continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_3791BA58_F1EE_48E9_A212_E6FBC50B3AAC Schlüssel aushändigen --->\n        if (2 == id && msg.sender == participants[2]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(32);\n          _tokenState |= 256;\n          id = 0;\n          continue; \n        }\n      }\n      if (_tokenState & 64 == 64) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(64);\n        _tokenState |= 128;\n        continue; \n      }\n      if (_tokenState & 128 == 128) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(128);\n        _tokenState |= 0;\n        break; // is end\n      }\n      if (_tokenState & 256 == 256) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(256);\n        _tokenState |= 0;\n        break; // is end\n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```"
}