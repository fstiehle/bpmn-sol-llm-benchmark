{
  "name": "deepseek/deepseek-chat-v3-0324 - one-shot",
  "processID": "sid_35c756a2_9047_4830_87a6_242061afb964",
  "timestamp": "2025-06-13T16:52:52.531Z",
  "model": "deepseek/deepseek-chat-v3-0324",
  "compiled": true,
  "usage": {
    "prompt_tokens": 7771,
    "completion_tokens": 600,
    "total_tokens": 8371,
    "cost": 0.00334443
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-0438451E-B03C-4078-BD63-A35564E8C13E\":1,\"sid-89B76F19-6E10-4164-A58C-02653BD1E2B0\":2,\"sid-9D2AFD1C-CCF8-46DA-8FB5-39920C84E558\":3,\"sid-A65185D7-046D-49D4-98A2-5506A4ED48E2\":4}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-3F7D4970-EE6D-4874-9901-F93EA690ABAB\":0,\"sid-5BD631D1-BBE9-456F-AC96-27D7BA874DB7\":1,\"sid-CC6680F4-52EB-411D-8F17-C316162F6130\":2,\"sid-5C9408AA-EB28-4FA2-93CE-AFBDBEAA8088\":3,\"sid-111A47DD-8E0A-468F-88B9-CB323C4165A9\":4,\"sid-E15887D3-EC1E-480F-8090-20F0D7A1948B\":5,\"sid-A545F707-8FAE-4979-9341-71CF785C3E12\":6,\"sid-F2423677-54D0-405F-93AC-FB90AD769D06\":7}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-b5dbcfec-bb13-4d05-a969-eb84f6f962ea\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:collaboration id=\"sid-ff559dae-2f57-474f-8a74-a9ac42ae803e\">\n    <ns0:textAnnotation id=\"sid-E18B7E77-502E-40B1-8B5F-A42B01461B16\" ns2:alignment=\"left\" textFormat=\"text/plain\">\n      <ns0:text>for each judges</ns0:text>\n    </ns0:textAnnotation>\n    <ns0:association associationDirection=\"None\" id=\"sid-A7839342-C09B-4811-AD1D-92C7121AEDB5\" sourceRef=\"sid-E18B7E77-502E-40B1-8B5F-A42B01461B16\" targetRef=\"sid-5C9408AA-EB28-4FA2-93CE-AFBDBEAA8088\"></ns0:association>\n  </ns0:collaboration>\n  <ns0:message id=\"sid-cb45df37-150d-444b-a52f-1814d26aca42\" name=\"Request Sitting list\"></ns0:message>\n  <ns0:message id=\"sid-9E40D84B-58E3-4D00-9BBE-19F8D409728B\" name=\"Sitting List\"></ns0:message>\n  <ns0:message id=\"sid-2d992688-e55b-44ad-b5df-3949308496ae\" name=\"Calendar Change Request\"></ns0:message>\n  <ns0:message id=\"sid-D14C800E-FAB2-45E5-8B8D-738F507FAC78\" name=\"Yearly Schedule\"></ns0:message>\n  <ns0:choreography id=\"sid_35c756a2_9047_4830_87a6_242061afb964\" isClosed=\"false\">\n    <ns0:participant id=\"sid-3F7D4970-EE6D-4874-9901-F93EA690ABAB\" name=\"Court Administration\"></ns0:participant>\n    <ns0:participant id=\"sid-5BD631D1-BBE9-456F-AC96-27D7BA874DB7\" name=\"P&amp;E Court\"></ns0:participant>\n    <ns0:participant id=\"sid-CC6680F4-52EB-411D-8F17-C316162F6130\" name=\"P&amp;E COURT\"></ns0:participant>\n    <ns0:participant id=\"sid-5C9408AA-EB28-4FA2-93CE-AFBDBEAA8088\" name=\"Court Administration\">\n      <ns0:participantMultiplicity id=\"sid-62466d09-9e05-48f8-9504-33552f1256d4\" maximum=\"2\" minimum=\"2\"></ns0:participantMultiplicity>\n    </ns0:participant>\n    <ns0:participant id=\"sid-111A47DD-8E0A-468F-88B9-CB323C4165A9\" name=\"P&amp;E COURT\"></ns0:participant>\n    <ns0:participant id=\"sid-E15887D3-EC1E-480F-8090-20F0D7A1948B\" name=\"Court Administration\"></ns0:participant>\n    <ns0:participant id=\"sid-A545F707-8FAE-4979-9341-71CF785C3E12\" name=\"P&amp;E COURT\"></ns0:participant>\n    <ns0:participant id=\"sid-F2423677-54D0-405F-93AC-FB90AD769D06\" name=\"Court Administration\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-f4604262-e061-47ee-ac22-72a77e83021c\" sourceRef=\"sid-3F7D4970-EE6D-4874-9901-F93EA690ABAB\" targetRef=\"sid-5BD631D1-BBE9-456F-AC96-27D7BA874DB7\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-e9b9c7b3-540b-44ef-a1e0-1b589c618f45\" messageRef=\"sid-cb45df37-150d-444b-a52f-1814d26aca42\" sourceRef=\"sid-CC6680F4-52EB-411D-8F17-C316162F6130\" targetRef=\"sid-5C9408AA-EB28-4FA2-93CE-AFBDBEAA8088\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-bedba573-6079-4115-8700-d6a48e9ab644\" messageRef=\"sid-9E40D84B-58E3-4D00-9BBE-19F8D409728B\" sourceRef=\"sid-5C9408AA-EB28-4FA2-93CE-AFBDBEAA8088\" targetRef=\"sid-CC6680F4-52EB-411D-8F17-C316162F6130\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-5dc332b2-02d9-4ad6-8e84-aa67d5462555\" messageRef=\"sid-2d992688-e55b-44ad-b5df-3949308496ae\" sourceRef=\"sid-111A47DD-8E0A-468F-88B9-CB323C4165A9\" targetRef=\"sid-E15887D3-EC1E-480F-8090-20F0D7A1948B\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-da41786e-b2d2-4479-bb88-f1177f41331e\" messageRef=\"sid-D14C800E-FAB2-45E5-8B8D-738F507FAC78\" sourceRef=\"sid-A545F707-8FAE-4979-9341-71CF785C3E12\" targetRef=\"sid-F2423677-54D0-405F-93AC-FB90AD769D06\"></ns0:messageFlow>\n    <ns0:choreographyTask id=\"sid-0438451E-B03C-4078-BD63-A35564E8C13E\" initiatingParticipantRef=\"sid-3F7D4970-EE6D-4874-9901-F93EA690ABAB\" loopType=\"None\" name=\"Send Court Calendar\">\n      <ns0:incoming>sid-37D9A79B-E534-4AA7-B339-BD8C07789417</ns0:incoming>\n      <ns0:outgoing>sid-53879047-CF5C-4577-8E82-4BD5EE868E64</ns0:outgoing>\n      <ns0:participantRef>sid-3F7D4970-EE6D-4874-9901-F93EA690ABAB</ns0:participantRef>\n      <ns0:participantRef>sid-5BD631D1-BBE9-456F-AC96-27D7BA874DB7</ns0:participantRef>\n      <ns0:messageFlowRef>sid-f4604262-e061-47ee-ac22-72a77e83021c</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-89B76F19-6E10-4164-A58C-02653BD1E2B0\" initiatingParticipantRef=\"sid-CC6680F4-52EB-411D-8F17-C316162F6130\" loopType=\"Standard\" name=\"Request for sitting list\">\n      <ns0:incoming>sid-53879047-CF5C-4577-8E82-4BD5EE868E64</ns0:incoming>\n      <ns0:outgoing>sid-8A937003-5D47-4A21-9D97-692DFF38AE41</ns0:outgoing>\n      <ns0:participantRef>sid-CC6680F4-52EB-411D-8F17-C316162F6130</ns0:participantRef>\n      <ns0:participantRef>sid-5C9408AA-EB28-4FA2-93CE-AFBDBEAA8088</ns0:participantRef>\n      <ns0:messageFlowRef>sid-e9b9c7b3-540b-44ef-a1e0-1b589c618f45</ns0:messageFlowRef>\n      <ns0:messageFlowRef>sid-bedba573-6079-4115-8700-d6a48e9ab644</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-9D2AFD1C-CCF8-46DA-8FB5-39920C84E558\" initiatingParticipantRef=\"sid-111A47DD-8E0A-468F-88B9-CB323C4165A9\" loopType=\"None\" name=\"Request court calendar change\">\n      <ns0:incoming>sid-8A937003-5D47-4A21-9D97-692DFF38AE41</ns0:incoming>\n      <ns0:outgoing>sid-5B140333-83D2-402B-9425-3ED9A6CC901F</ns0:outgoing>\n      <ns0:participantRef>sid-111A47DD-8E0A-468F-88B9-CB323C4165A9</ns0:participantRef>\n      <ns0:participantRef>sid-E15887D3-EC1E-480F-8090-20F0D7A1948B</ns0:participantRef>\n      <ns0:messageFlowRef>sid-5dc332b2-02d9-4ad6-8e84-aa67d5462555</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-A65185D7-046D-49D4-98A2-5506A4ED48E2\" initiatingParticipantRef=\"sid-A545F707-8FAE-4979-9341-71CF785C3E12\" loopType=\"None\" name=\"Send Yearly Schedule\">\n      <ns0:incoming>sid-5B140333-83D2-402B-9425-3ED9A6CC901F</ns0:incoming>\n      <ns0:outgoing>sid-5A6E8B0E-C702-4D4C-A386-6D10B4DEC018</ns0:outgoing>\n      <ns0:participantRef>sid-A545F707-8FAE-4979-9341-71CF785C3E12</ns0:participantRef>\n      <ns0:participantRef>sid-F2423677-54D0-405F-93AC-FB90AD769D06</ns0:participantRef>\n      <ns0:messageFlowRef>sid-da41786e-b2d2-4479-bb88-f1177f41331e</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:startEvent id=\"sid-E28062C4-3778-440A-833A-BB7AE19385D5\" name=\"\">\n      <ns0:outgoing>sid-37D9A79B-E534-4AA7-B339-BD8C07789417</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:endEvent id=\"sid-C60EA078-61EE-47C7-8440-4EB8397AD6C9\" name=\"\">\n      <ns0:incoming>sid-5A6E8B0E-C702-4D4C-A386-6D10B4DEC018</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-53879047-CF5C-4577-8E82-4BD5EE868E64\" name=\"\" sourceRef=\"sid-0438451E-B03C-4078-BD63-A35564E8C13E\" targetRef=\"sid-89B76F19-6E10-4164-A58C-02653BD1E2B0\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-8A937003-5D47-4A21-9D97-692DFF38AE41\" name=\"\" sourceRef=\"sid-89B76F19-6E10-4164-A58C-02653BD1E2B0\" targetRef=\"sid-9D2AFD1C-CCF8-46DA-8FB5-39920C84E558\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-37D9A79B-E534-4AA7-B339-BD8C07789417\" name=\"\" sourceRef=\"sid-E28062C4-3778-440A-833A-BB7AE19385D5\" targetRef=\"sid-0438451E-B03C-4078-BD63-A35564E8C13E\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-5B140333-83D2-402B-9425-3ED9A6CC901F\" name=\"\" sourceRef=\"sid-9D2AFD1C-CCF8-46DA-8FB5-39920C84E558\" targetRef=\"sid-A65185D7-046D-49D4-98A2-5506A4ED48E2\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-5A6E8B0E-C702-4D4C-A386-6D10B4DEC018\" name=\"\" sourceRef=\"sid-A65185D7-046D-49D4-98A2-5506A4ED48E2\" targetRef=\"sid-C60EA078-61EE-47C7-8440-4EB8397AD6C9\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "Here's the Solidity smart contract implementation for the provided BPMN choreography model:\n\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract sid_35c756a2_9047_4830_87a6_242061afb964 {\n    uint public tokenState = 1;\n    address[8] public participants;\n    uint public conditions;\n    \n    constructor(address[8] memory _participants) {\n        participants = _participants;\n    }\n    \n    function setConditions(uint _conditions) external {\n        conditions = _conditions;\n    }\n    \n    function enact(uint id) external {\n        uint _tokenState = tokenState;\n        while(_tokenState != 0) {\n            if (_tokenState & 1 == 1) {\n                // <--- sid-0438451E-B03C-4078-BD63-A35564E8C13E Send Court Calendar --->\n                if (1 == id && msg.sender == participants[0]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(1);\n                    _tokenState |= 2;\n                    id = 0;\n                    continue;\n                }\n            }\n            if (_tokenState & 2 == 2) {\n                // <--- sid-89B76F19-6E10-4164-A58C-02653BD1E2B0 Request for sitting list --->\n                if (2 == id && msg.sender == participants[2]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(2);\n                    _tokenState |= 4;\n                    id = 0;\n                    continue;\n                }\n            }\n            if (_tokenState & 4 == 4) {\n                // <--- sid-9D2AFD1C-CCF8-46DA-8FB5-39920C84E558 Request court calendar change --->\n                if (3 == id && msg.sender == participants[4]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(4);\n                    _tokenState |= 8;\n                    id = 0;\n                    continue;\n                }\n            }\n            if (_tokenState & 8 == 8) {\n                // <--- sid-A65185D7-046D-49D4-98A2-5506A4ED48E2 Send Yearly Schedule --->\n                if (4 == id && msg.sender == participants[6]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(8);\n                    _tokenState |= 0;\n                    break; // is end\n                }\n            }\n            break;\n        }\n        tokenState = _tokenState;\n    }\n}\n```"
}