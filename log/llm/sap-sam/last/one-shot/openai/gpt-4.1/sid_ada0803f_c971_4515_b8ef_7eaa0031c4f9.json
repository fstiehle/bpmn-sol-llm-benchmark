{
  "name": "openai/gpt-4.1 - one-shot",
  "processID": "sid_ada0803f_c971_4515_b8ef_7eaa0031c4f9",
  "timestamp": "2025-06-12T00:04:59.713Z",
  "model": "openai/gpt-4.1",
  "compiled": true,
  "usage": {
    "prompt_tokens": 6785,
    "completion_tokens": 764,
    "total_tokens": 7549,
    "cost": 0.019682
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-3B8BF843-1819-4EAD-AC9C-326E62F85FAB\":1,\"sid-AAD29D1E-2C9A-48FC-9E90-DC8F8288DBFA\":2,\"sid-A7CAE9F1-CB6F-4829-9924-62E33BB5F436\":3}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-4D58B7F9-8616-469A-A979-7661ECBD91B4\":0,\"sid-0D29274E-BF53-48A5-8B70-DE8E04D65D59\":1,\"sid-AD6CE2DD-9349-4C3B-97EE-E0C893E6ECAF\":2,\"sid-1468B99D-9AA7-4B0C-89E3-D82ADA27EA37\":3,\"sid-B51E74DA-5253-4F19-A7CF-2EDD628DCB7E\":4,\"sid-9D4BF123-8A14-4161-B901-730294D796C3\":5}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-e1dccc58-ab28-4f58-8160-2053d09fcf47\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:message id=\"sid-44956A5E-F4B0-450A-B970-597D161FDA20\" name=\"Will Vetrag abschließen\"></ns0:message>\n  <ns0:choreography id=\"sid_ada0803f_c971_4515_b8ef_7eaa0031c4f9\" isClosed=\"false\">\n    <ns0:participant id=\"sid-4D58B7F9-8616-469A-A979-7661ECBD91B4\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-0D29274E-BF53-48A5-8B70-DE8E04D65D59\" name=\"Unternehmen\"></ns0:participant>\n    <ns0:participant id=\"sid-AD6CE2DD-9349-4C3B-97EE-E0C893E6ECAF\" name=\"Unternehmen\"></ns0:participant>\n    <ns0:participant id=\"sid-1468B99D-9AA7-4B0C-89E3-D82ADA27EA37\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-B51E74DA-5253-4F19-A7CF-2EDD628DCB7E\" name=\"Unternehmen\"></ns0:participant>\n    <ns0:participant id=\"sid-9D4BF123-8A14-4161-B901-730294D796C3\" name=\"Kunde\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-be3cf8a6-eeb9-498e-9ddf-0ecaccaa9d75\" messageRef=\"sid-44956A5E-F4B0-450A-B970-597D161FDA20\" sourceRef=\"sid-4D58B7F9-8616-469A-A979-7661ECBD91B4\" targetRef=\"sid-0D29274E-BF53-48A5-8B70-DE8E04D65D59\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-f1d7bd8e-18b4-4268-99ef-8c217aead506\" sourceRef=\"sid-AD6CE2DD-9349-4C3B-97EE-E0C893E6ECAF\" targetRef=\"sid-1468B99D-9AA7-4B0C-89E3-D82ADA27EA37\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-296b5444-6f34-4376-8009-445b8cc83808\" sourceRef=\"sid-B51E74DA-5253-4F19-A7CF-2EDD628DCB7E\" targetRef=\"sid-9D4BF123-8A14-4161-B901-730294D796C3\"></ns0:messageFlow>\n    <ns0:textAnnotation id=\"sid-96F810D9-4003-4EB4-94D7-B2157E9FD56B\" ns2:alignment=\"left\" textFormat=\"text/plain\">\n      <ns0:text>Zustimmung</ns0:text>\n    </ns0:textAnnotation>\n    <ns0:textAnnotation id=\"sid-F6C0D437-5207-4C93-AB6B-3662FD91F200\" ns2:alignment=\"left\" textFormat=\"text/plain\">\n      <ns0:text>Keine Zustimmung</ns0:text>\n    </ns0:textAnnotation>\n    <ns0:choreographyTask id=\"sid-3B8BF843-1819-4EAD-AC9C-326E62F85FAB\" initiatingParticipantRef=\"sid-4D58B7F9-8616-469A-A979-7661ECBD91B4\" loopType=\"None\" name=\"Antragsformular wird verschickt\">\n      <ns0:incoming>sid-A8E287D0-1E44-4D78-8599-E8CE19149125</ns0:incoming>\n      <ns0:outgoing>sid-6CEFE9DC-01E6-4D47-AF2D-F9E3D6AEC73F</ns0:outgoing>\n      <ns0:participantRef>sid-4D58B7F9-8616-469A-A979-7661ECBD91B4</ns0:participantRef>\n      <ns0:participantRef>sid-0D29274E-BF53-48A5-8B70-DE8E04D65D59</ns0:participantRef>\n      <ns0:messageFlowRef>sid-be3cf8a6-eeb9-498e-9ddf-0ecaccaa9d75</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-AAD29D1E-2C9A-48FC-9E90-DC8F8288DBFA\" initiatingParticipantRef=\"sid-AD6CE2DD-9349-4C3B-97EE-E0C893E6ECAF\" loopType=\"None\" name=\"Vertrag wird abgeschlossen\">\n      <ns0:incoming>sid-78084F03-D84F-4DB1-987C-87730E893CD3</ns0:incoming>\n      <ns0:outgoing>sid-7509F950-77A4-424B-A9DE-F5F201E6FC57</ns0:outgoing>\n      <ns0:participantRef>sid-AD6CE2DD-9349-4C3B-97EE-E0C893E6ECAF</ns0:participantRef>\n      <ns0:participantRef>sid-1468B99D-9AA7-4B0C-89E3-D82ADA27EA37</ns0:participantRef>\n      <ns0:messageFlowRef>sid-f1d7bd8e-18b4-4268-99ef-8c217aead506</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-A7CAE9F1-CB6F-4829-9924-62E33BB5F436\" initiatingParticipantRef=\"sid-B51E74DA-5253-4F19-A7CF-2EDD628DCB7E\" loopType=\"None\" name=\"Über die Ablehnung wird informiert\">\n      <ns0:incoming>sid-49F9B909-8F7A-4C2F-B260-EDC143A68EB9</ns0:incoming>\n      <ns0:outgoing>sid-1AA280D5-4A90-4A91-AA66-FEAD6A81D94D</ns0:outgoing>\n      <ns0:participantRef>sid-B51E74DA-5253-4F19-A7CF-2EDD628DCB7E</ns0:participantRef>\n      <ns0:participantRef>sid-9D4BF123-8A14-4161-B901-730294D796C3</ns0:participantRef>\n      <ns0:messageFlowRef>sid-296b5444-6f34-4376-8009-445b8cc83808</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:exclusiveGateway gatewayDirection=\"Diverging\" id=\"sid-C685C610-E82E-4722-90F5-D0D9B4B176BD\" name=\"\" default=\"sid-78084F03-D84F-4DB1-987C-87730E893CD3\">\n      <ns0:incoming>sid-6CEFE9DC-01E6-4D47-AF2D-F9E3D6AEC73F</ns0:incoming>\n      <ns0:outgoing>sid-78084F03-D84F-4DB1-987C-87730E893CD3</ns0:outgoing>\n      <ns0:outgoing>sid-49F9B909-8F7A-4C2F-B260-EDC143A68EB9</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:startEvent id=\"sid-6CFD4753-8C3B-4CFF-A122-C238EDC68198\" name=\"\">\n      <ns0:outgoing>sid-A8E287D0-1E44-4D78-8599-E8CE19149125</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:endEvent id=\"sid-39517791-CF4F-43C2-868A-BF0D313F1415\" name=\"\">\n      <ns0:incoming>sid-7509F950-77A4-424B-A9DE-F5F201E6FC57</ns0:incoming>\n      <ns0:incoming>sid-1AA280D5-4A90-4A91-AA66-FEAD6A81D94D</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-6CEFE9DC-01E6-4D47-AF2D-F9E3D6AEC73F\" name=\"\" sourceRef=\"sid-3B8BF843-1819-4EAD-AC9C-326E62F85FAB\" targetRef=\"sid-C685C610-E82E-4722-90F5-D0D9B4B176BD\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-78084F03-D84F-4DB1-987C-87730E893CD3\" name=\"\" sourceRef=\"sid-C685C610-E82E-4722-90F5-D0D9B4B176BD\" targetRef=\"sid-AAD29D1E-2C9A-48FC-9E90-DC8F8288DBFA\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-49F9B909-8F7A-4C2F-B260-EDC143A68EB9\" name=\"conditions &amp; 1 == 1\" sourceRef=\"sid-C685C610-E82E-4722-90F5-D0D9B4B176BD\" targetRef=\"sid-A7CAE9F1-CB6F-4829-9924-62E33BB5F436\">\n      <conditionExpression xsi:type=\"ns0:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-7509F950-77A4-424B-A9DE-F5F201E6FC57\" name=\"\" sourceRef=\"sid-AAD29D1E-2C9A-48FC-9E90-DC8F8288DBFA\" targetRef=\"sid-39517791-CF4F-43C2-868A-BF0D313F1415\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-1AA280D5-4A90-4A91-AA66-FEAD6A81D94D\" name=\"\" sourceRef=\"sid-A7CAE9F1-CB6F-4829-9924-62E33BB5F436\" targetRef=\"sid-39517791-CF4F-43C2-868A-BF0D313F1415\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-A8E287D0-1E44-4D78-8599-E8CE19149125\" name=\"\" sourceRef=\"sid-6CFD4753-8C3B-4CFF-A122-C238EDC68198\" targetRef=\"sid-3B8BF843-1819-4EAD-AC9C-326E62F85FAB\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract sid_ada0803f_c971_4515_b8ef_7eaa0031c4f9 {\n  uint public tokenState = 1;\n  address[6] public participants;\n  uint public conditions;\n  constructor(address[6] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      // <--- sid-3B8BF843-1819-4EAD-AC9C-326E62F85FAB Antragsformular_wird_verschickt --->\n      if (_tokenState & 1 == 1) {\n        if (1 == id && msg.sender == participants[0]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(1);\n          _tokenState |= 2;\n          id = 0;\n          continue;\n        }\n      }\n      // <--- Gateway sid-C685C610_E82E_4722_90F5_D0D9B4B176BD (exclusive) --->\n      if (_tokenState & 2 == 2) {\n        // conditional sequence flow: sid-49F9B909-8F7A-4C2F-B260-EDC143A68EB9\n        if (conditions & 1 == 1) {\n          _tokenState &= ~uint(2);\n          _tokenState |= 8;\n          continue;\n        }\n        // default sequence flow: sid-78084F03-D84F-4DB1-987C-87730E893CD3\n        else {\n          _tokenState &= ~uint(2);\n          _tokenState |= 4;\n          continue;\n        }\n      }\n      // <--- sid-AAD29D1E-2C9A-48FC-9E90-DC8F8288DBFA Vertrag_wird_abgeschlossen --->\n      if (_tokenState & 4 == 4) {\n        if (2 == id && msg.sender == participants[2]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(4);\n          _tokenState |= 16;\n          id = 0;\n          continue;\n        }\n      }\n      // <--- sid-A7CAE9F1-CB6F-4829-9924-62E33BB5F436 Ueber_die_Ablehnung_wird_informiert --->\n      if (_tokenState & 8 == 8) {\n        if (3 == id && msg.sender == participants[4]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(8);\n          _tokenState |= 32;\n          id = 0;\n          continue;\n        }\n      }\n      // <--- End event sid-39517791-CF4F-43C2-868A-BF0D313F1415: reached if tokenState & 16 or 32 --->\n      if (_tokenState & 16 == 16) {\n        _tokenState &= ~uint(16);\n        _tokenState |= 0;\n        break;\n      }\n      if (_tokenState & 32 == 32) {\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break;\n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}"
}