{
  "name": "x-ai/grok-3-beta - one-shot",
  "processID": "sid_325a1bff_a6cb_4a0f_97db_97d548f5e646",
  "timestamp": "2025-06-12T07:44:18.438Z",
  "model": "x-ai/grok-3-beta",
  "compiled": true,
  "usage": {
    "prompt_tokens": 6430,
    "completion_tokens": 493,
    "total_tokens": 6923,
    "cost": 0.02623275
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-A1EADF1D-3C3A-42C6-83DF-1703AE75B073\":1,\"sid-A96A3CA9-D477-4CA2-83CC-1A3ABE9B2060\":2,\"sid-15522BFB-9AC3-485D-BBA9-81B6611C982D\":3}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-E3ABF494-B1ED-43C2-9445-D4BE9ECA787D\":0,\"sid-447820AA-84F2-447A-B624-BF2611BA2C45\":1,\"sid-CFFBC4E3-8C72-4876-9396-7419755A6295\":2,\"sid-4CCC542F-4C5E-41FB-AEA3-406AE46068D9\":3,\"sid-4C808E99-E9BC-47B6-9094-0A77AF004644\":4,\"sid-2CFB7EB0-CE08-485E-8D8E-3921D6D5EF81\":5}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-20579512-4e94-44f5-9caa-5e734da764cc\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:message id=\"sid-11360542-FD11-402F-9BF7-85FDCB24EF9B\" name=\"Factura\"></ns0:message>\n  <ns0:message id=\"sid-E59F7BE1-12E5-4791-B315-EC1F9A19126D\" name=\"Albarán\"></ns0:message>\n  <ns0:message id=\"sid-E30B7D7B-B041-4049-BCC6-D6864ECF7E90\" name=\"Cheque\"></ns0:message>\n  <ns0:choreography id=\"sid_325a1bff_a6cb_4a0f_97db_97d548f5e646\" isClosed=\"false\">\n    <ns0:participant id=\"sid-E3ABF494-B1ED-43C2-9445-D4BE9ECA787D\" name=\"Departamento de contabilidad\"></ns0:participant>\n    <ns0:participant id=\"sid-447820AA-84F2-447A-B624-BF2611BA2C45\" name=\"Editorial\"></ns0:participant>\n    <ns0:participant id=\"sid-CFFBC4E3-8C72-4876-9396-7419755A6295\" name=\"Departamento de contabilidad\"></ns0:participant>\n    <ns0:participant id=\"sid-4CCC542F-4C5E-41FB-AEA3-406AE46068D9\" name=\"Fotógrafo\"></ns0:participant>\n    <ns0:participant id=\"sid-4C808E99-E9BC-47B6-9094-0A77AF004644\" name=\"Departamento de contabilidad\"></ns0:participant>\n    <ns0:participant id=\"sid-2CFB7EB0-CE08-485E-8D8E-3921D6D5EF81\" name=\"Fotógrafo\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-08996d62-1087-46a6-89d6-06da5c48434a\" sourceRef=\"sid-E3ABF494-B1ED-43C2-9445-D4BE9ECA787D\" targetRef=\"sid-447820AA-84F2-447A-B624-BF2611BA2C45\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-b8986554-29e7-4755-95c1-22cf7338aa5f\" messageRef=\"sid-11360542-FD11-402F-9BF7-85FDCB24EF9B\" sourceRef=\"sid-447820AA-84F2-447A-B624-BF2611BA2C45\" targetRef=\"sid-E3ABF494-B1ED-43C2-9445-D4BE9ECA787D\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-9a374bdb-271e-41db-90a8-c078b32a8eea\" messageRef=\"sid-E59F7BE1-12E5-4791-B315-EC1F9A19126D\" sourceRef=\"sid-CFFBC4E3-8C72-4876-9396-7419755A6295\" targetRef=\"sid-4CCC542F-4C5E-41FB-AEA3-406AE46068D9\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-d0a91f3b-f798-4330-9af4-404c4e086c56\" sourceRef=\"sid-4C808E99-E9BC-47B6-9094-0A77AF004644\" targetRef=\"sid-2CFB7EB0-CE08-485E-8D8E-3921D6D5EF81\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-c70a98a2-9eb4-4a80-9401-a32edc55a22d\" messageRef=\"sid-E30B7D7B-B041-4049-BCC6-D6864ECF7E90\" sourceRef=\"sid-2CFB7EB0-CE08-485E-8D8E-3921D6D5EF81\" targetRef=\"sid-4C808E99-E9BC-47B6-9094-0A77AF004644\"></ns0:messageFlow>\n    <ns0:startEvent id=\"sid-CA814383-8844-472B-9F4D-416A1C643079\" name=\"\">\n      <ns0:outgoing>sid-B274FA60-33A1-49ED-905D-ED82398BC79B</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:choreographyTask id=\"sid-A1EADF1D-3C3A-42C6-83DF-1703AE75B073\" initiatingParticipantRef=\"sid-E3ABF494-B1ED-43C2-9445-D4BE9ECA787D\" loopType=\"None\" name=\"Envío de facturas de los reportajes y exclusivas\">\n      <ns0:incoming>sid-B274FA60-33A1-49ED-905D-ED82398BC79B</ns0:incoming>\n      <ns0:outgoing>sid-FC689900-5B9E-4514-A9C9-9C3BD3993EBD</ns0:outgoing>\n      <ns0:participantRef>sid-E3ABF494-B1ED-43C2-9445-D4BE9ECA787D</ns0:participantRef>\n      <ns0:participantRef>sid-447820AA-84F2-447A-B624-BF2611BA2C45</ns0:participantRef>\n      <ns0:messageFlowRef>sid-08996d62-1087-46a6-89d6-06da5c48434a</ns0:messageFlowRef>\n      <ns0:messageFlowRef>sid-b8986554-29e7-4755-95c1-22cf7338aa5f</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-A96A3CA9-D477-4CA2-83CC-1A3ABE9B2060\" initiatingParticipantRef=\"sid-CFFBC4E3-8C72-4876-9396-7419755A6295\" loopType=\"None\" name=\"Pago de reportajes\">\n      <ns0:incoming>sid-FC689900-5B9E-4514-A9C9-9C3BD3993EBD</ns0:incoming>\n      <ns0:outgoing>sid-47FEEB1E-B64C-4FFC-819F-0B1018D79787</ns0:outgoing>\n      <ns0:participantRef>sid-CFFBC4E3-8C72-4876-9396-7419755A6295</ns0:participantRef>\n      <ns0:participantRef>sid-4CCC542F-4C5E-41FB-AEA3-406AE46068D9</ns0:participantRef>\n      <ns0:messageFlowRef>sid-9a374bdb-271e-41db-90a8-c078b32a8eea</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-15522BFB-9AC3-485D-BBA9-81B6611C982D\" initiatingParticipantRef=\"sid-4C808E99-E9BC-47B6-9094-0A77AF004644\" loopType=\"None\" name=\"Entrega de cheque nominal\">\n      <ns0:incoming>sid-47FEEB1E-B64C-4FFC-819F-0B1018D79787</ns0:incoming>\n      <ns0:outgoing>sid-3CDA3A3B-0093-4813-8AD5-8448EE489023</ns0:outgoing>\n      <ns0:participantRef>sid-4C808E99-E9BC-47B6-9094-0A77AF004644</ns0:participantRef>\n      <ns0:participantRef>sid-2CFB7EB0-CE08-485E-8D8E-3921D6D5EF81</ns0:participantRef>\n      <ns0:messageFlowRef>sid-d0a91f3b-f798-4330-9af4-404c4e086c56</ns0:messageFlowRef>\n      <ns0:messageFlowRef>sid-c70a98a2-9eb4-4a80-9401-a32edc55a22d</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:endEvent id=\"sid-CE107A16-520C-4A65-A331-F22C235BB147\" name=\"\">\n      <ns0:incoming>sid-3CDA3A3B-0093-4813-8AD5-8448EE489023</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-B274FA60-33A1-49ED-905D-ED82398BC79B\" name=\"\" sourceRef=\"sid-CA814383-8844-472B-9F4D-416A1C643079\" targetRef=\"sid-A1EADF1D-3C3A-42C6-83DF-1703AE75B073\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-47FEEB1E-B64C-4FFC-819F-0B1018D79787\" name=\"\" sourceRef=\"sid-A96A3CA9-D477-4CA2-83CC-1A3ABE9B2060\" targetRef=\"sid-15522BFB-9AC3-485D-BBA9-81B6611C982D\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-FC689900-5B9E-4514-A9C9-9C3BD3993EBD\" name=\"\" sourceRef=\"sid-A1EADF1D-3C3A-42C6-83DF-1703AE75B073\" targetRef=\"sid-A96A3CA9-D477-4CA2-83CC-1A3ABE9B2060\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-3CDA3A3B-0093-4813-8AD5-8448EE489023\" name=\"\" sourceRef=\"sid-15522BFB-9AC3-485D-BBA9-81B6611C982D\" targetRef=\"sid-CE107A16-520C-4A65-A331-F22C235BB147\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract sid_325a1bff_a6cb_4a0f_97db_97d548f5e646 {\n  uint public tokenState = 1; // Start event is active initially\n  address[6] public participants;\n  uint public conditions;\n\n  constructor(address[6] memory _participants) {\n    participants = _participants;\n  }\n\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while (_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- sid-A1EADF1D-3C3A-42C6-83DF-1703AE75B073 Envio de facturas de los reportajes y exclusivas --->\n        if (1 == id && msg.sender == participants[0]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(1);\n          _tokenState |= 2; // Move to next task\n          id = 0;\n          continue;\n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- sid-A96A3CA9-D477-4CA2-83CC-1A3ABE9B2060 Pago de reportajes --->\n        if (2 == id && msg.sender == participants[2]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(2);\n          _tokenState |= 4; // Move to next task\n          id = 0;\n          continue;\n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- sid-15522BFB-9AC3-485D-BBA9-81B6611C982D Entrega de cheque nominal --->\n        if (3 == id && msg.sender == participants[4]) {\n          // <--- custom code for task here --->\n          _tokenState &= ~uint(4);\n          _tokenState |= 0; // End of process\n          break; // Process termination\n        }\n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}"
}