{
  "name": "qwen/qwen3-235b-a22b - one-shot",
  "processID": "sid_6464baf1_e9c8_4917_8881_c3036e949acd",
  "timestamp": "2025-06-13T00:35:24.658Z",
  "model": "qwen/qwen3-235b-a22b",
  "compiled": true,
  "usage": {
    "prompt_tokens": 7059,
    "completion_tokens": 1864,
    "total_tokens": 8923,
    "cost": 0.00203607
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-E70C051E-E333-4C36-84E7-4EFC594CA4F9\":1,\"sid-5E7F8B9A-D08B-4075-A5AA-334D33017824\":2,\"sid-14F93670-7F19-4E8D-985B-652CC65D24D6\":3}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-7DBFC1E2-3F1E-42FB-99DF-C2F204BE2E90\":0,\"sid-EFC01FD5-5D35-4863-92FF-B445358BCE4F\":1,\"sid-4519EFA1-14A7-4803-98EA-58849BC4EE52\":2,\"sid-9F4E5B86-AD88-481D-9D83-31F4B0C8C266\":3,\"sid-AAE00E03-B197-4DB9-91A0-488B36456775\":4,\"sid-8CC6BB10-BD67-40CF-B287-76D0B24E0058\":5}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-97e22572-f69b-40cd-a953-ed3d37afc408\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:message id=\"sid-edfeee7c-e6fb-4896-abb6-94ecd28474ee\" name=\"POST /reservation HTTP1/1\"></ns0:message>\n  <ns0:choreography id=\"sid_6464baf1_e9c8_4917_8881_c3036e949acd\" isClosed=\"false\">\n    <ns0:participant id=\"sid-7DBFC1E2-3F1E-42FB-99DF-C2F204BE2E90\" name=\"Guest\"></ns0:participant>\n    <ns0:participant id=\"sid-EFC01FD5-5D35-4863-92FF-B445358BCE4F\" name=\"ARS\"></ns0:participant>\n    <ns0:participant id=\"sid-4519EFA1-14A7-4803-98EA-58849BC4EE52\" name=\"ARS\"></ns0:participant>\n    <ns0:participant id=\"sid-9F4E5B86-AD88-481D-9D83-31F4B0C8C266\" name=\"Host\"></ns0:participant>\n    <ns0:participant id=\"sid-AAE00E03-B197-4DB9-91A0-488B36456775\" name=\"Host\"></ns0:participant>\n    <ns0:participant id=\"sid-8CC6BB10-BD67-40CF-B287-76D0B24E0058\" name=\"ARS\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-1e7af605-22ec-4399-ad39-3d8685855f21\" messageRef=\"sid-edfeee7c-e6fb-4896-abb6-94ecd28474ee\" sourceRef=\"sid-7DBFC1E2-3F1E-42FB-99DF-C2F204BE2E90\" targetRef=\"sid-EFC01FD5-5D35-4863-92FF-B445358BCE4F\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-97df0632-96a9-491c-b5a0-50200f9dc55d\" sourceRef=\"sid-4519EFA1-14A7-4803-98EA-58849BC4EE52\" targetRef=\"sid-9F4E5B86-AD88-481D-9D83-31F4B0C8C266\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-2ac349e1-d7d3-451f-95dc-ea8ab47c4032\" sourceRef=\"sid-AAE00E03-B197-4DB9-91A0-488B36456775\" targetRef=\"sid-8CC6BB10-BD67-40CF-B287-76D0B24E0058\"></ns0:messageFlow>\n    <ns0:startEvent id=\"sid-DB8F3733-4472-4A02-AFC7-B990B5DEF4D7\" name=\"Need for accommodation\">\n      <ns0:outgoing>sid-067B22E8-340D-485E-8456-0D6902585904</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:choreographyTask id=\"sid-E70C051E-E333-4C36-84E7-4EFC594CA4F9\" initiatingParticipantRef=\"sid-7DBFC1E2-3F1E-42FB-99DF-C2F204BE2E90\" loopType=\"None\" name=\"Request Reservation\">\n      <ns0:incoming>sid-067B22E8-340D-485E-8456-0D6902585904</ns0:incoming>\n      <ns0:outgoing>sid-38AEFF47-417B-442F-AD48-B55E7ECE5293</ns0:outgoing>\n      <ns0:participantRef>sid-7DBFC1E2-3F1E-42FB-99DF-C2F204BE2E90</ns0:participantRef>\n      <ns0:participantRef>sid-EFC01FD5-5D35-4863-92FF-B445358BCE4F</ns0:participantRef>\n      <ns0:messageFlowRef>sid-1e7af605-22ec-4399-ad39-3d8685855f21</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-5E7F8B9A-D08B-4075-A5AA-334D33017824\" initiatingParticipantRef=\"sid-4519EFA1-14A7-4803-98EA-58849BC4EE52\" loopType=\"None\" name=\"Inform Host\">\n      <ns0:incoming>sid-38AEFF47-417B-442F-AD48-B55E7ECE5293</ns0:incoming>\n      <ns0:outgoing>sid-1CFFB3A0-951C-43F0-9AAA-50CD7F5F6902</ns0:outgoing>\n      <ns0:participantRef>sid-4519EFA1-14A7-4803-98EA-58849BC4EE52</ns0:participantRef>\n      <ns0:participantRef>sid-9F4E5B86-AD88-481D-9D83-31F4B0C8C266</ns0:participantRef>\n      <ns0:messageFlowRef>sid-97df0632-96a9-491c-b5a0-50200f9dc55d</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-14F93670-7F19-4E8D-985B-652CC65D24D6\" initiatingParticipantRef=\"sid-AAE00E03-B197-4DB9-91A0-488B36456775\" loopType=\"None\" name=\"Accept Reservation\">\n      <ns0:incoming>sid-1CFFB3A0-951C-43F0-9AAA-50CD7F5F6902</ns0:incoming>\n      <ns0:outgoing>sid-828821A0-0555-4FCD-A019-7353D01D6F87</ns0:outgoing>\n      <ns0:participantRef>sid-AAE00E03-B197-4DB9-91A0-488B36456775</ns0:participantRef>\n      <ns0:participantRef>sid-8CC6BB10-BD67-40CF-B287-76D0B24E0058</ns0:participantRef>\n      <ns0:messageFlowRef>sid-2ac349e1-d7d3-451f-95dc-ea8ab47c4032</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:endEvent id=\"sid-48A6CAB1-A0B4-401E-839C-53F0BD75FA14\" name=\"Reservation accepted\">\n      <ns0:incoming>sid-828821A0-0555-4FCD-A019-7353D01D6F87</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-067B22E8-340D-485E-8456-0D6902585904\" name=\"\" sourceRef=\"sid-DB8F3733-4472-4A02-AFC7-B990B5DEF4D7\" targetRef=\"sid-E70C051E-E333-4C36-84E7-4EFC594CA4F9\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-38AEFF47-417B-442F-AD48-B55E7ECE5293\" name=\"\" sourceRef=\"sid-E70C051E-E333-4C36-84E7-4EFC594CA4F9\" targetRef=\"sid-5E7F8B9A-D08B-4075-A5AA-334D33017824\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-1CFFB3A0-951C-43F0-9AAA-50CD7F5F6902\" name=\"\" sourceRef=\"sid-5E7F8B9A-D08B-4075-A5AA-334D33017824\" targetRef=\"sid-14F93670-7F19-4E8D-985B-652CC65D24D6\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-828821A0-0555-4FCD-A019-7353D01D6F87\" name=\"\" sourceRef=\"sid-14F93670-7F19-4E8D-985B-652CC65D24D6\" targetRef=\"sid-48A6CAB1-A0B4-401E-839C-53F0BD75FA14\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract sid_6464baf1_e9c8_4917_8881_c3036e949acd {\n  uint public tokenState = 1;\n  address[6] public participants;\n  \n  constructor(address[6] memory _participants) {\n    participants = _participants;\n  }\n  \n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    \n    while (_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask sid-E70C051E-E333-4C36-84E7-4EFC594CA4F9 Request Reservation --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 2;\n        id = 0;\n        continue; \n        }\n      }\n      \n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask sid-5E7F8B9A-D08B-4075-A5AA-334D33017824 Inform Host --->\n        if (2 == id && msg.sender == participants[2]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 4;\n        id = 0;\n        continue; \n        }\n      }\n      \n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask sid-14F93670-7F19-4E8D-985B-652CC65D24D6 Accept Reservation --->\n        if (3 == id && msg.sender == participants[4]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      \n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```"
}