{
  "name": "qwen/qwen3-235b-a22b - one-shot",
  "processID": "sid_261c4cc8_8caa_46ad_856e_4baeaab98a5b",
  "timestamp": "2025-06-12T21:47:44.216Z",
  "model": "qwen/qwen3-235b-a22b",
  "compiled": true,
  "usage": {
    "prompt_tokens": 6979,
    "completion_tokens": 5357,
    "total_tokens": 12336,
    "cost": 0.00461
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-5D419652-4651-4347-A1C6-ACFA000AD990\":1,\"sid-749D18D6-E427-451B-9BCF-5F9663403EEB\":2,\"sid-7881B66F-CCD2-4ECC-87E4-0BB37991A5FC\":3}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-A37044B3-CA1B-46F5-9198-77852437BDF8\":0,\"sid-8CA5C16C-9F49-46CF-8C4B-1151EB784E37\":1,\"sid-315E7BBD-05A3-4273-9A7D-E6B6CD4862EB\":2,\"sid-122688C3-5A80-4A69-B118-574978107562\":3,\"sid-01203FD6-0D59-4C2B-9BEF-3D06AC480991\":4,\"sid-45FCC8A1-31E5-4040-BEC5-26E8D18EA2EA\":5}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-38160b19-81c9-470a-8d68-b87085f7dc99\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:choreography id=\"sid_261c4cc8_8caa_46ad_856e_4baeaab98a5b\" isClosed=\"false\">\n    <ns0:participant id=\"sid-A37044B3-CA1B-46F5-9198-77852437BDF8\" name=\"Admin\"></ns0:participant>\n    <ns0:participant id=\"sid-8CA5C16C-9F49-46CF-8C4B-1151EB784E37\" name=\"Game Service\"></ns0:participant>\n    <ns0:participant id=\"sid-315E7BBD-05A3-4273-9A7D-E6B6CD4862EB\" name=\"Admin\"></ns0:participant>\n    <ns0:participant id=\"sid-122688C3-5A80-4A69-B118-574978107562\" name=\"User Service\"></ns0:participant>\n    <ns0:participant id=\"sid-01203FD6-0D59-4C2B-9BEF-3D06AC480991\" name=\"Admin\"></ns0:participant>\n    <ns0:participant id=\"sid-45FCC8A1-31E5-4040-BEC5-26E8D18EA2EA\" name=\"Game Service\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-0547dea6-cd91-4aa3-bff7-688883eb196f\" sourceRef=\"sid-A37044B3-CA1B-46F5-9198-77852437BDF8\" targetRef=\"sid-8CA5C16C-9F49-46CF-8C4B-1151EB784E37\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-791d2c34-1248-4f89-94df-62d93c8c64ae\" sourceRef=\"sid-315E7BBD-05A3-4273-9A7D-E6B6CD4862EB\" targetRef=\"sid-122688C3-5A80-4A69-B118-574978107562\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-8e759e55-44c0-4094-86e9-c6daf2682fb6\" sourceRef=\"sid-01203FD6-0D59-4C2B-9BEF-3D06AC480991\" targetRef=\"sid-45FCC8A1-31E5-4040-BEC5-26E8D18EA2EA\"></ns0:messageFlow>\n    <ns0:choreographyTask id=\"sid-5D419652-4651-4347-A1C6-ACFA000AD990\" initiatingParticipantRef=\"sid-A37044B3-CA1B-46F5-9198-77852437BDF8\" loopType=\"None\" name=\"Get Game\">\n      <ns0:incoming>sid-0132642D-FC5C-451B-B091-E92A52568453</ns0:incoming>\n      <ns0:outgoing>sid-3487C687-80C0-4ECD-BAB0-43E032263939</ns0:outgoing>\n      <ns0:participantRef>sid-A37044B3-CA1B-46F5-9198-77852437BDF8</ns0:participantRef>\n      <ns0:participantRef>sid-8CA5C16C-9F49-46CF-8C4B-1151EB784E37</ns0:participantRef>\n      <ns0:messageFlowRef>sid-0547dea6-cd91-4aa3-bff7-688883eb196f</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-749D18D6-E427-451B-9BCF-5F9663403EEB\" initiatingParticipantRef=\"sid-315E7BBD-05A3-4273-9A7D-E6B6CD4862EB\" loopType=\"None\" name=\"List Users\">\n      <ns0:incoming>sid-3487C687-80C0-4ECD-BAB0-43E032263939</ns0:incoming>\n      <ns0:outgoing>sid-5B0D8122-E5A8-48C9-A9BA-FCF0342FF326</ns0:outgoing>\n      <ns0:participantRef>sid-315E7BBD-05A3-4273-9A7D-E6B6CD4862EB</ns0:participantRef>\n      <ns0:participantRef>sid-122688C3-5A80-4A69-B118-574978107562</ns0:participantRef>\n      <ns0:messageFlowRef>sid-791d2c34-1248-4f89-94df-62d93c8c64ae</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-7881B66F-CCD2-4ECC-87E4-0BB37991A5FC\" initiatingParticipantRef=\"sid-01203FD6-0D59-4C2B-9BEF-3D06AC480991\" loopType=\"None\" name=\"Update Game\">\n      <ns0:incoming>sid-5B0D8122-E5A8-48C9-A9BA-FCF0342FF326</ns0:incoming>\n      <ns0:outgoing>sid-789CB74E-18ED-45D0-BD20-F5141EAB66A1</ns0:outgoing>\n      <ns0:participantRef>sid-01203FD6-0D59-4C2B-9BEF-3D06AC480991</ns0:participantRef>\n      <ns0:participantRef>sid-45FCC8A1-31E5-4040-BEC5-26E8D18EA2EA</ns0:participantRef>\n      <ns0:messageFlowRef>sid-8e759e55-44c0-4094-86e9-c6daf2682fb6</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:startEvent id=\"sid-751C1393-FCC5-4B74-88EA-E9875980DF34\" name=\"\">\n      <ns0:outgoing>sid-0132642D-FC5C-451B-B091-E92A52568453</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:endEvent id=\"sid-ADDDEA7B-D57B-4B97-B045-D18B0E6B0C1F\" name=\"\">\n      <ns0:incoming>sid-789CB74E-18ED-45D0-BD20-F5141EAB66A1</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-3487C687-80C0-4ECD-BAB0-43E032263939\" name=\"\" sourceRef=\"sid-5D419652-4651-4347-A1C6-ACFA000AD990\" targetRef=\"sid-749D18D6-E427-451B-9BCF-5F9663403EEB\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-0132642D-FC5C-451B-B091-E92A52568453\" name=\"\" sourceRef=\"sid-751C1393-FCC5-4B74-88EA-E9875980DF34\" targetRef=\"sid-5D419652-4651-4347-A1C6-ACFA000AD990\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-5B0D8122-E5A8-48C9-A9BA-FCF0342FF326\" name=\"\" sourceRef=\"sid-749D18D6-E427-451B-9BCF-5F9663403EEB\" targetRef=\"sid-7881B66F-CCD2-4ECC-87E4-0BB37991A5FC\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-789CB74E-18ED-45D0-BD20-F5141EAB66A1\" name=\"\" sourceRef=\"sid-7881B66F-CCD2-4ECC-87E4-0BB37991A5FC\" targetRef=\"sid-ADDDEA7B-D57B-4B97-B045-D18B0E6B0C1F\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_sid_261c4cc8_8caa_46ad_856e_4baeaab98a5b {\n  uint public tokenState = 1;\n  address[6] public participants;\n  constructor(address[6] memory _participants) {\n    participants = _participants;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while (_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        if (id == 1 && msg.sender == participants[0]) {\n          _tokenState &= ~uint(1);\n          _tokenState |= 2;\n          id = 0;\n          continue;\n        }\n      }\n      if (_tokenState & 2 == 2) {\n        if (id == 2 && msg.sender == participants[2]) {\n          _tokenState &= ~uint(2);\n          _tokenState |= 4;\n          id = 0;\n          continue;\n        }\n      }\n      if (_tokenState & 4 == 4) {\n        if (id == 3 && msg.sender == participants[4]) {\n          _tokenState &= ~uint(4);\n          _tokenState |= 0;\n          break;\n        }\n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```"
}