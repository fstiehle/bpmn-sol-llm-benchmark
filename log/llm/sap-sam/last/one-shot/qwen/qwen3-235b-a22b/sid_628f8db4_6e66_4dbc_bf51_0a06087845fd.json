{
  "name": "qwen/qwen3-235b-a22b - one-shot",
  "processID": "sid_628f8db4_6e66_4dbc_bf51_0a06087845fd",
  "timestamp": "2025-06-12T18:15:26.645Z",
  "model": "qwen/qwen3-235b-a22b",
  "compiled": true,
  "usage": {
    "prompt_tokens": 9224,
    "completion_tokens": 1092,
    "total_tokens": 10316,
    "cost": 0.00185432
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-0D901C54-7C0B-4A1B-B120-22FF30DA505E\":1,\"sid-7361E9A9-0DEB-45D2-962E-6E3B1F835921\":2,\"sid-6C8FFED6-E7B4-4F20-9CCB-3D7EB1D99518\":3,\"sid-5F1A9D5C-4FC4-44D4-A6D2-669732D469BA\":4}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-01E62CD9-27E5-4031-9E59-841B5D22411B\":0,\"sid-F66C8122-A179-41D1-94F3-BF7ACD65CE05\":1,\"sid-D96F4AA6-4EE8-4B79-8025-7CAB28D76313\":2,\"sid-4EF49F1A-0032-4EA4-93B5-9D0108F02C06\":3,\"sid-B7FC87E4-3571-474A-BD5F-101D477FAE74\":4,\"sid-4CB19249-85E9-4871-80A2-EE1EF7F1A7EC\":5,\"sid-45D6AC9E-CB9F-4EE5-B140-1616AD15A7C6\":6,\"sid-FDA985E8-71E4-41D5-BB8F-6BF2BC19B7F8\":7}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-f8e0aab0-1df3-4b78-853e-7e35ea7f3b84\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:message id=\"sid-FCED2869-733D-4978-BCA2-7D0A4D00BC1C\" name=\"\"></ns0:message>\n  <ns0:message id=\"sid-26E2CCD6-29FA-4158-AE99-21145FD90D11\" name=\"\"></ns0:message>\n  <ns0:message id=\"sid-F82FE54B-6D31-43CE-8CF1-E0C04C777302\" name=\"\"></ns0:message>\n  <ns0:message id=\"sid-B3DA6B67-21B7-4218-AB8A-92DEA0C07961\" name=\"\"></ns0:message>\n  <ns0:choreography id=\"sid_628f8db4_6e66_4dbc_bf51_0a06087845fd\" isClosed=\"false\">\n    <ns0:participant id=\"sid-01E62CD9-27E5-4031-9E59-841B5D22411B\" name=\"Sender: Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-F66C8122-A179-41D1-94F3-BF7ACD65CE05\" name=\"Empfänger: Bildungsträger\"></ns0:participant>\n    <ns0:participant id=\"sid-D96F4AA6-4EE8-4B79-8025-7CAB28D76313\" name=\"Bildungsträger\"></ns0:participant>\n    <ns0:participant id=\"sid-4EF49F1A-0032-4EA4-93B5-9D0108F02C06\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-B7FC87E4-3571-474A-BD5F-101D477FAE74\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-4CB19249-85E9-4871-80A2-EE1EF7F1A7EC\" name=\"Bildungsträger\"></ns0:participant>\n    <ns0:participant id=\"sid-45D6AC9E-CB9F-4EE5-B140-1616AD15A7C6\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-FDA985E8-71E4-41D5-BB8F-6BF2BC19B7F8\" name=\"Bildungsträger\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-f448f8b4-11f3-4a6a-90d0-f447f8582b80\" messageRef=\"sid-FCED2869-733D-4978-BCA2-7D0A4D00BC1C\" sourceRef=\"sid-01E62CD9-27E5-4031-9E59-841B5D22411B\" targetRef=\"sid-F66C8122-A179-41D1-94F3-BF7ACD65CE05\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-f87e9e2c-017d-422e-a334-660aa0d5b333\" messageRef=\"sid-26E2CCD6-29FA-4158-AE99-21145FD90D11\" sourceRef=\"sid-D96F4AA6-4EE8-4B79-8025-7CAB28D76313\" targetRef=\"sid-4EF49F1A-0032-4EA4-93B5-9D0108F02C06\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-0914c0f3-b543-4969-af70-bef5c5a04171\" messageRef=\"sid-F82FE54B-6D31-43CE-8CF1-E0C04C777302\" sourceRef=\"sid-B7FC87E4-3571-474A-BD5F-101D477FAE74\" targetRef=\"sid-4CB19249-85E9-4871-80A2-EE1EF7F1A7EC\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-0a8ac742-3e40-4b14-a466-1d941922f681\" sourceRef=\"sid-45D6AC9E-CB9F-4EE5-B140-1616AD15A7C6\" targetRef=\"sid-FDA985E8-71E4-41D5-BB8F-6BF2BC19B7F8\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-f65ee641-1304-40d4-a6ab-51d4474d1f17\" messageRef=\"sid-B3DA6B67-21B7-4218-AB8A-92DEA0C07961\" sourceRef=\"sid-FDA985E8-71E4-41D5-BB8F-6BF2BC19B7F8\" targetRef=\"sid-45D6AC9E-CB9F-4EE5-B140-1616AD15A7C6\"></ns0:messageFlow>\n    <ns0:startEvent id=\"sid-8927571B-D906-4AA9-BC57-8B7A376CCB49\" name=\"\">\n      <ns0:outgoing>sid-5E94ADA8-94BA-415B-97E0-D6C2D88D49E2</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:choreographyTask id=\"sid-0D901C54-7C0B-4A1B-B120-22FF30DA505E\" initiatingParticipantRef=\"sid-01E62CD9-27E5-4031-9E59-841B5D22411B\" loopType=\"None\" name=\"Seminaranfrage weiterleiten\">\n      <ns0:incoming>sid-5E94ADA8-94BA-415B-97E0-D6C2D88D49E2</ns0:incoming>\n      <ns0:outgoing>sid-6DF52578-E198-4206-87D0-08E6A040C632</ns0:outgoing>\n      <ns0:participantRef>sid-01E62CD9-27E5-4031-9E59-841B5D22411B</ns0:participantRef>\n      <ns0:participantRef>sid-F66C8122-A179-41D1-94F3-BF7ACD65CE05</ns0:participantRef>\n      <ns0:messageFlowRef>sid-f448f8b4-11f3-4a6a-90d0-f447f8582b80</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-7361E9A9-0DEB-45D2-962E-6E3B1F835921\" initiatingParticipantRef=\"sid-D96F4AA6-4EE8-4B79-8025-7CAB28D76313\" loopType=\"None\" name=\"Angebot versenden\">\n      <ns0:incoming>sid-E29986AA-BC50-43A7-95D9-443D732228AA</ns0:incoming>\n      <ns0:outgoing>sid-CFCCEC9B-7979-47BA-8FBD-D25BAB7E03A1</ns0:outgoing>\n      <ns0:participantRef>sid-D96F4AA6-4EE8-4B79-8025-7CAB28D76313</ns0:participantRef>\n      <ns0:participantRef>sid-4EF49F1A-0032-4EA4-93B5-9D0108F02C06</ns0:participantRef>\n      <ns0:messageFlowRef>sid-f87e9e2c-017d-422e-a334-660aa0d5b333</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-6C8FFED6-E7B4-4F20-9CCB-3D7EB1D99518\" initiatingParticipantRef=\"sid-B7FC87E4-3571-474A-BD5F-101D477FAE74\" loopType=\"None\" name=\"Wünsche zusenden\">\n      <ns0:incoming>sid-D8B7E1E8-2F7B-411A-A0A7-2B7961EBD0C2</ns0:incoming>\n      <ns0:outgoing>sid-C5538022-E134-48BB-BE09-3939E0B50F52</ns0:outgoing>\n      <ns0:participantRef>sid-B7FC87E4-3571-474A-BD5F-101D477FAE74</ns0:participantRef>\n      <ns0:participantRef>sid-4CB19249-85E9-4871-80A2-EE1EF7F1A7EC</ns0:participantRef>\n      <ns0:messageFlowRef>sid-0914c0f3-b543-4969-af70-bef5c5a04171</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-5F1A9D5C-4FC4-44D4-A6D2-669732D469BA\" initiatingParticipantRef=\"sid-45D6AC9E-CB9F-4EE5-B140-1616AD15A7C6\" loopType=\"None\" name=\"Angebot annehmen\">\n      <ns0:incoming>sid-4A2EF321-9B70-4469-B8CF-6F22439A7F76</ns0:incoming>\n      <ns0:outgoing>sid-FB8D73E6-4804-40FF-8493-77B1AAA7E180</ns0:outgoing>\n      <ns0:participantRef>sid-45D6AC9E-CB9F-4EE5-B140-1616AD15A7C6</ns0:participantRef>\n      <ns0:participantRef>sid-FDA985E8-71E4-41D5-BB8F-6BF2BC19B7F8</ns0:participantRef>\n      <ns0:messageFlowRef>sid-0a8ac742-3e40-4b14-a466-1d941922f681</ns0:messageFlowRef>\n      <ns0:messageFlowRef>sid-f65ee641-1304-40d4-a6ab-51d4474d1f17</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:endEvent id=\"sid-CDBED98E-105C-4A1D-BCA8-5318F5920544\" name=\"\">\n      <ns0:incoming>sid-FB8D73E6-4804-40FF-8493-77B1AAA7E180</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:exclusiveGateway gatewayDirection=\"Converging\" id=\"sid-05E87F86-112D-4E1F-AA7D-93A34F85B3AF\" name=\"\" default=\"sid-E29986AA-BC50-43A7-95D9-443D732228AA\">\n      <ns0:incoming>sid-6DF52578-E198-4206-87D0-08E6A040C632</ns0:incoming>\n      <ns0:incoming>sid-C5538022-E134-48BB-BE09-3939E0B50F52</ns0:incoming>\n      <ns0:outgoing>sid-E29986AA-BC50-43A7-95D9-443D732228AA</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:eventBasedGateway eventGatewayType=\"Exclusive\" gatewayDirection=\"Diverging\" id=\"sid-C7841A0C-3408-403E-8A15-16F91CDC56FD\" instantiate=\"false\" name=\"Ergänzende Wünsche?\">\n      <ns0:incoming>sid-CFCCEC9B-7979-47BA-8FBD-D25BAB7E03A1</ns0:incoming>\n      <ns0:outgoing>sid-4A2EF321-9B70-4469-B8CF-6F22439A7F76</ns0:outgoing>\n      <ns0:outgoing>sid-D8B7E1E8-2F7B-411A-A0A7-2B7961EBD0C2</ns0:outgoing>\n    </ns0:eventBasedGateway>\n    <ns0:sequenceFlow id=\"sid-5E94ADA8-94BA-415B-97E0-D6C2D88D49E2\" name=\"\" sourceRef=\"sid-8927571B-D906-4AA9-BC57-8B7A376CCB49\" targetRef=\"sid-0D901C54-7C0B-4A1B-B120-22FF30DA505E\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-CFCCEC9B-7979-47BA-8FBD-D25BAB7E03A1\" name=\"\" sourceRef=\"sid-7361E9A9-0DEB-45D2-962E-6E3B1F835921\" targetRef=\"sid-C7841A0C-3408-403E-8A15-16F91CDC56FD\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-FB8D73E6-4804-40FF-8493-77B1AAA7E180\" name=\"\" sourceRef=\"sid-5F1A9D5C-4FC4-44D4-A6D2-669732D469BA\" targetRef=\"sid-CDBED98E-105C-4A1D-BCA8-5318F5920544\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-4A2EF321-9B70-4469-B8CF-6F22439A7F76\" name=\"Nein\" sourceRef=\"sid-C7841A0C-3408-403E-8A15-16F91CDC56FD\" targetRef=\"sid-5F1A9D5C-4FC4-44D4-A6D2-669732D469BA\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-D8B7E1E8-2F7B-411A-A0A7-2B7961EBD0C2\" name=\"Ja\" sourceRef=\"sid-C7841A0C-3408-403E-8A15-16F91CDC56FD\" targetRef=\"sid-6C8FFED6-E7B4-4F20-9CCB-3D7EB1D99518\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-6DF52578-E198-4206-87D0-08E6A040C632\" name=\"\" sourceRef=\"sid-0D901C54-7C0B-4A1B-B120-22FF30DA505E\" targetRef=\"sid-05E87F86-112D-4E1F-AA7D-93A34F85B3AF\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-E29986AA-BC50-43A7-95D9-443D732228AA\" name=\"\" sourceRef=\"sid-05E87F86-112D-4E1F-AA7D-93A34F85B3AF\" targetRef=\"sid-7361E9A9-0DEB-45D2-962E-6E3B1F835921\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-C5538022-E134-48BB-BE09-3939E0B50F52\" name=\"\" sourceRef=\"sid-6C8FFED6-E7B4-4F20-9CCB-3D7EB1D99518\" targetRef=\"sid-05E87F86-112D-4E1F-AA7D-93A34F85B3AF\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract sid_628f8db4_6e66_4dbc_bf51_0a06087845fd {\n  uint public tokenState = 1;\n  address[8] public participants;\n  uint public conditions;\n  constructor(address[8] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- Seminaranfrage weiterleiten --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 2;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- Angebot versenden --->\n        if (2 == id && msg.sender == participants[2]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 4;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 8 == 8) {\n        // <--- Wünsche zusenden --->\n        if (3 == id && msg.sender == participants[4]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(8);\n        _tokenState |= 4;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        if (conditions & 0x01 == 0x01) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(4);\n          _tokenState |= 16;\n          continue; \n        }\n        else {\n          // <---  auto transition default  --->\n          _tokenState &= ~uint(4);\n          _tokenState |= 16;\n          continue; \n        }\n      }\n      if (_tokenState & 16 == 16) {\n        // <--- Angebot annehmen --->\n        if (4 == id && msg.sender == participants[6]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(16);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```"
}