{
  "name": "anthropic/claude-sonnet-4 - one-shot",
  "processID": "sid_8cf04aa5_ed38_43f8_a628_7e211cc2f882",
  "timestamp": "2025-06-12T04:23:21.985Z",
  "model": "anthropic/claude-sonnet-4",
  "compiled": true,
  "usage": {
    "prompt_tokens": 9064,
    "completion_tokens": 877,
    "total_tokens": 9941,
    "cost": 0.040347
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-A981B3EA-FC92-4ABE-9906-A9AB18283EAC\":1,\"sid-0A2B5205-D3C8-4D18-8617-B059BA9DF38D\":2,\"sid-1C994BCF-8067-4CF5-B9A1-1E5E1E24B8AA\":3,\"sid-44FA8648-8BD1-4ED3-BB90-1524147E2E12\":4}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-06fa745c-1350-44b3-99a0-6b1f9dddf044\":0,\"sid-9b1d2cd4-03af-4851-bb7f-d5cfd2eb6535\":1,\"sid-4118edb6-0e86-4e8b-8d2c-30510ded7937\":2,\"sid-bee21415-0935-4bda-827e-02582ab08ad2\":3,\"sid-8a3a206f-6ea3-44a8-9391-7737e82feda0\":4,\"sid-dbf8d107-f911-405f-873a-ab2b49926951\":5,\"sid-dd8474d3-f751-4a84-9770-d3e662af08b3\":6,\"sid-ba916cc7-500a-4f5d-bf67-b57d6591bf9f\":7}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-f8850817-71ed-4544-bfd7-e1c617ef475c\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:message id=\"sid-f5ab6e0f-b087-4f35-81f4-4d6ccf996a9d\" name=\"rejestracja\"></ns0:message>\n  <ns0:message id=\"sid-46cf15c8-2eb0-4ddd-bde3-e95ada58b974\" name=\"zapisanie pacjenta\"></ns0:message>\n  <ns0:message id=\"sid-db94a402-4698-4967-ae37-4c97f80b660d\" name=\"organ\"></ns0:message>\n  <ns0:message id=\"sid-2ad9cef4-5b87-4b1d-b526-317da5b489b8\" name=\"odwolanie zamowienia na organ\"></ns0:message>\n  <ns0:message id=\"sid-15d0eccc-2e26-4776-8b98-ef065704322d\" name=\"rejestracja\"></ns0:message>\n  <ns0:message id=\"sid-cd46133c-b3d7-4c5f-a463-737fedc23284\" name=\"zapisanie pacjenta\"></ns0:message>\n  <ns0:message id=\"sid-fb70dfdb-3272-471a-a488-d871466273a7\" name=\"organ\"></ns0:message>\n  <ns0:message id=\"sid-4961a3b0-4569-4944-a12e-b8191aee2ba5\" name=\"odwolanie zamowienia na organ\"></ns0:message>\n  <ns0:choreography id=\"sid_8cf04aa5_ed38_43f8_a628_7e211cc2f882\" isClosed=\"false\">\n    <ns0:participant id=\"sid-06fa745c-1350-44b3-99a0-6b1f9dddf044\" name=\"patient\"></ns0:participant>\n    <ns0:participant id=\"sid-9b1d2cd4-03af-4851-bb7f-d5cfd2eb6535\" name=\"hospital\"></ns0:participant>\n    <ns0:participant id=\"sid-4118edb6-0e86-4e8b-8d2c-30510ded7937\" name=\"hospital\"></ns0:participant>\n    <ns0:participant id=\"sid-bee21415-0935-4bda-827e-02582ab08ad2\" name=\"centrum transpaltacji\"></ns0:participant>\n    <ns0:participant id=\"sid-8a3a206f-6ea3-44a8-9391-7737e82feda0\" name=\"hospital\"></ns0:participant>\n    <ns0:participant id=\"sid-dbf8d107-f911-405f-873a-ab2b49926951\" name=\"centrum transplantacji\"></ns0:participant>\n    <ns0:participant id=\"sid-dd8474d3-f751-4a84-9770-d3e662af08b3\" name=\"hospital\"></ns0:participant>\n    <ns0:participant id=\"sid-ba916cc7-500a-4f5d-bf67-b57d6591bf9f\" name=\"centrum transplantacji\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-10f8f88b-a3ee-4581-a929-6b78ff8d9eb8\" messageRef=\"sid-15d0eccc-2e26-4776-8b98-ef065704322d\" sourceRef=\"sid-06fa745c-1350-44b3-99a0-6b1f9dddf044\" targetRef=\"sid-9b1d2cd4-03af-4851-bb7f-d5cfd2eb6535\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-f44902e1-fcd2-40c6-b816-2a3320ef1a7c\" messageRef=\"sid-cd46133c-b3d7-4c5f-a463-737fedc23284\" sourceRef=\"sid-4118edb6-0e86-4e8b-8d2c-30510ded7937\" targetRef=\"sid-bee21415-0935-4bda-827e-02582ab08ad2\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-1724ee31-35bd-4a53-a846-3f4adbf42d97\" messageRef=\"sid-fb70dfdb-3272-471a-a488-d871466273a7\" sourceRef=\"sid-dbf8d107-f911-405f-873a-ab2b49926951\" targetRef=\"sid-8a3a206f-6ea3-44a8-9391-7737e82feda0\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-fc7d9470-8024-4199-8fc0-b1d61127ce15\" messageRef=\"sid-4961a3b0-4569-4944-a12e-b8191aee2ba5\" sourceRef=\"sid-dd8474d3-f751-4a84-9770-d3e662af08b3\" targetRef=\"sid-ba916cc7-500a-4f5d-bf67-b57d6591bf9f\"></ns0:messageFlow>\n    <ns0:startEvent id=\"sid-8597C975-3D8E-4839-8C80-E08D2FA81ED4\" isInterrupting name=\"\">\n      <ns0:outgoing>sid-7A795053-393E-489F-BD69-EC3AC3F07995</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:choreographyTask id=\"sid-A981B3EA-FC92-4ABE-9906-A9AB18283EAC\" initiatingParticipantRef=\"sid-06fa745c-1350-44b3-99a0-6b1f9dddf044\" loopType=\"None\" name=\"przyjmij pacjenta\">\n      <ns0:incoming>sid-7A795053-393E-489F-BD69-EC3AC3F07995</ns0:incoming>\n      <ns0:outgoing>sid-701DF6FD-67AC-48FF-B3AC-D44405B411A3</ns0:outgoing>\n      <ns0:participantRef>sid-06fa745c-1350-44b3-99a0-6b1f9dddf044</ns0:participantRef>\n      <ns0:participantRef>sid-9b1d2cd4-03af-4851-bb7f-d5cfd2eb6535</ns0:participantRef>\n      <ns0:messageFlowRef>sid-10f8f88b-a3ee-4581-a929-6b78ff8d9eb8</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-0A2B5205-D3C8-4D18-8617-B059BA9DF38D\" initiatingParticipantRef=\"sid-4118edb6-0e86-4e8b-8d2c-30510ded7937\" loopType=\"None\" name=\"zapisz pacjenta\">\n      <ns0:incoming>sid-701DF6FD-67AC-48FF-B3AC-D44405B411A3</ns0:incoming>\n      <ns0:outgoing>sid-A24AD3E5-F9E6-4552-BE66-FC93F92EBEB2</ns0:outgoing>\n      <ns0:participantRef>sid-4118edb6-0e86-4e8b-8d2c-30510ded7937</ns0:participantRef>\n      <ns0:participantRef>sid-bee21415-0935-4bda-827e-02582ab08ad2</ns0:participantRef>\n      <ns0:messageFlowRef>sid-f44902e1-fcd2-40c6-b816-2a3320ef1a7c</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-1C994BCF-8067-4CF5-B9A1-1E5E1E24B8AA\" initiatingParticipantRef=\"sid-dbf8d107-f911-405f-873a-ab2b49926951\" loopType=\"None\" name=\"wyslanie organu\">\n      <ns0:incoming>sid-7FC618E9-E3FA-4208-9639-20E05D593FCB</ns0:incoming>\n      <ns0:outgoing>sid-0D4CE818-BE21-47E5-9493-B10A8183C126</ns0:outgoing>\n      <ns0:participantRef>sid-8a3a206f-6ea3-44a8-9391-7737e82feda0</ns0:participantRef>\n      <ns0:participantRef>sid-dbf8d107-f911-405f-873a-ab2b49926951</ns0:participantRef>\n      <ns0:messageFlowRef>sid-1724ee31-35bd-4a53-a846-3f4adbf42d97</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-44FA8648-8BD1-4ED3-BB90-1524147E2E12\" initiatingParticipantRef=\"sid-dd8474d3-f751-4a84-9770-d3e662af08b3\" loopType=\"None\" name=\"wyslanie odwolania\">\n      <ns0:incoming>sid-546BF745-183E-42CD-A7C5-E6365B247939</ns0:incoming>\n      <ns0:outgoing>sid-66D5DFC0-1855-4254-92F5-2433E368B8E4</ns0:outgoing>\n      <ns0:participantRef>sid-dd8474d3-f751-4a84-9770-d3e662af08b3</ns0:participantRef>\n      <ns0:participantRef>sid-ba916cc7-500a-4f5d-bf67-b57d6591bf9f</ns0:participantRef>\n      <ns0:messageFlowRef>sid-fc7d9470-8024-4199-8fc0-b1d61127ce15</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:exclusiveGateway gatewayDirection=\"Diverging\" id=\"sid-A448521E-0933-448B-A270-8EC27F0CC5B3\" name=\"\" default=\"sid-7FC618E9-E3FA-4208-9639-20E05D593FCB\">\n      <ns0:incoming>sid-A24AD3E5-F9E6-4552-BE66-FC93F92EBEB2</ns0:incoming>\n      <ns0:outgoing>sid-7FC618E9-E3FA-4208-9639-20E05D593FCB</ns0:outgoing>\n      <ns0:outgoing>sid-546BF745-183E-42CD-A7C5-E6365B247939</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:exclusiveGateway gatewayDirection=\"Converging\" id=\"sid-1FEF189D-8FDA-48C4-B234-28C9600F06EF\" name=\"\" default=\"sid-4C0D587B-3933-488C-8F36-AF47C5308E04\">\n      <ns0:incoming>sid-0D4CE818-BE21-47E5-9493-B10A8183C126</ns0:incoming>\n      <ns0:incoming>sid-66D5DFC0-1855-4254-92F5-2433E368B8E4</ns0:incoming>\n      <ns0:outgoing>sid-4C0D587B-3933-488C-8F36-AF47C5308E04</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:endEvent id=\"sid-56924977-50D0-4897-AB7B-0ECA05A328A4\" name=\"\">\n      <ns0:incoming>sid-4C0D587B-3933-488C-8F36-AF47C5308E04</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-7A795053-393E-489F-BD69-EC3AC3F07995\" isImmediate name=\"\" sourceRef=\"sid-8597C975-3D8E-4839-8C80-E08D2FA81ED4\" targetRef=\"sid-A981B3EA-FC92-4ABE-9906-A9AB18283EAC\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-701DF6FD-67AC-48FF-B3AC-D44405B411A3\" isImmediate name=\"\" sourceRef=\"sid-A981B3EA-FC92-4ABE-9906-A9AB18283EAC\" targetRef=\"sid-0A2B5205-D3C8-4D18-8617-B059BA9DF38D\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-A24AD3E5-F9E6-4552-BE66-FC93F92EBEB2\" isImmediate name=\"\" sourceRef=\"sid-0A2B5205-D3C8-4D18-8617-B059BA9DF38D\" targetRef=\"sid-A448521E-0933-448B-A270-8EC27F0CC5B3\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-0D4CE818-BE21-47E5-9493-B10A8183C126\" isImmediate name=\"\" sourceRef=\"sid-1C994BCF-8067-4CF5-B9A1-1E5E1E24B8AA\" targetRef=\"sid-1FEF189D-8FDA-48C4-B234-28C9600F06EF\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-66D5DFC0-1855-4254-92F5-2433E368B8E4\" isImmediate name=\"\" sourceRef=\"sid-44FA8648-8BD1-4ED3-BB90-1524147E2E12\" targetRef=\"sid-1FEF189D-8FDA-48C4-B234-28C9600F06EF\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-4C0D587B-3933-488C-8F36-AF47C5308E04\" isImmediate name=\"\" sourceRef=\"sid-1FEF189D-8FDA-48C4-B234-28C9600F06EF\" targetRef=\"sid-56924977-50D0-4897-AB7B-0ECA05A328A4\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-7FC618E9-E3FA-4208-9639-20E05D593FCB\" isImmediate name=\"pacjent nie mial problemow\" sourceRef=\"sid-A448521E-0933-448B-A270-8EC27F0CC5B3\" targetRef=\"sid-1C994BCF-8067-4CF5-B9A1-1E5E1E24B8AA\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-546BF745-183E-42CD-A7C5-E6365B247939\" isImmediate name=\"conditions &amp; 1 == 1\" sourceRef=\"sid-A448521E-0933-448B-A270-8EC27F0CC5B3\" targetRef=\"sid-44FA8648-8BD1-4ED3-BB90-1524147E2E12\">\n      <conditionExpression xsi:type=\"ns0:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract sid_8cf04aa5_ed38_43f8_a628_7e211cc2f882 {\n    uint public tokenState = 1;\n    address[8] public participants;\n    uint public conditions;\n\n    constructor(address[8] memory _participants) {\n        participants = _participants;\n    }\n\n    function setConditions(uint _conditions) external {\n        conditions = _conditions;\n    }\n\n    function enact(uint id) external {\n        uint _tokenState = tokenState;\n        while(_tokenState != 0) {\n            if (_tokenState & 1 == 1) {\n                // <--- sid-A981B3EA-FC92-4ABE-9906-A9AB18283EAC przyjmij pacjenta --->\n                if (1 == id && msg.sender == participants[0]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(1);\n                    _tokenState |= 2;\n                    id = 0;\n                    continue;\n                }\n            }\n            if (_tokenState & 2 == 2) {\n                // <--- sid-0A2B5205-D3C8-4D18-8617-B059BA9DF38D zapisz pacjenta --->\n                if (2 == id && msg.sender == participants[2]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(2);\n                    _tokenState |= 4;\n                    id = 0;\n                    continue;\n                }\n            }\n            if (_tokenState & 8 == 8) {\n                // <--- sid-1C994BCF-8067-4CF5-B9A1-1E5E1E24B8AA wyslanie organu --->\n                if (3 == id && msg.sender == participants[5]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(8);\n                    _tokenState |= 16;\n                    id = 0;\n                    continue;\n                }\n            }\n            if (_tokenState & 32 == 32) {\n                // <--- sid-44FA8648-8BD1-4ED3-BB90-1524147E2E12 wyslanie odwolania --->\n                if (4 == id && msg.sender == participants[6]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(32);\n                    _tokenState |= 16;\n                    id = 0;\n                    continue;\n                }\n            }\n            if (_tokenState & 4 == 4) {\n                if (conditions & 1 == 1) {\n                    // <--- auto transition --->\n                    _tokenState &= ~uint(4);\n                    _tokenState |= 32;\n                    continue;\n                } else {\n                    // <--- default transition --->\n                    _tokenState &= ~uint(4);\n                    _tokenState |= 8;\n                    continue;\n                }\n            }\n            if (_tokenState & 16 == 16) {\n                // <--- auto transition --->\n                _tokenState &= ~uint(16);\n                _tokenState |= 0;\n                break; // is end\n            }\n            break;\n        }\n        tokenState = _tokenState;\n    }\n}\n```"
}