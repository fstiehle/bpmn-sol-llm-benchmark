{
  "name": "anthropic/claude-sonnet-4 - one-shot",
  "processID": "sid_232d5077_13ed_4b15_9d20_e2a901c3a32e",
  "timestamp": "2025-06-12T02:09:42.000Z",
  "model": "anthropic/claude-sonnet-4",
  "compiled": true,
  "usage": {
    "prompt_tokens": 9298,
    "completion_tokens": 724,
    "total_tokens": 10022,
    "cost": 0.038754
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-BD7B4002-9065-4315-AA74-82D3A6E7F757\":1,\"sid-BD08DB98-E701-4D6C-9CAA-C146871F6BD5\":2,\"sid-A83DECE7-E09F-4824-A820-4C2272E6E1B4\":3,\"sid-34B7968B-AE9A-47F7-BC39-04BD8B6B1548\":4}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-CA137D2D-7844-4734-87D4-EAF4E16F95DD\":0,\"sid-CA89F4A7-6FBD-43D1-8BD8-3AB774CF8098\":1,\"sid-4CA24E93-70CC-475D-99E9-879F787AA2E5\":2,\"sid-039E1911-FC87-47E4-B6D0-DD1555717E29\":3,\"sid-5F5ED979-47A1-4A2A-BF8D-8C3D3E16018F\":4,\"sid-6284EDD7-B58A-4C7D-A021-815EFA119D71\":5,\"sid-01A6D1B4-C5D2-40BC-93C0-33C5591D1D42\":6,\"sid-3F4C5527-2AFB-48FB-B562-F15DCE7FFA8B\":7}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-c15b1240-4f62-472f-8aba-490d7b4f3256\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:message id=\"sid-15054BED-D498-4EB3-AB34-0BD6BDE0698F\" name=\"m1\"></ns0:message>\n  <ns0:message id=\"sid-F56167C0-EECF-4C92-BD1B-68DBDEC428BA\" name=\"m2\"></ns0:message>\n  <ns0:message id=\"sid-5AB7C4CF-541F-4654-B244-12AC460B1E8B\" name=\"m3\"></ns0:message>\n  <ns0:message id=\"sid-D23D7DAB-7CFA-40EC-B772-E388410B69E1\" name=\"m4\"></ns0:message>\n  <ns0:choreography id=\"sid_232d5077_13ed_4b15_9d20_e2a901c3a32e\" isClosed=\"false\">\n    <ns0:participant id=\"sid-CA137D2D-7844-4734-87D4-EAF4E16F95DD\" name=\"A\"></ns0:participant>\n    <ns0:participant id=\"sid-CA89F4A7-6FBD-43D1-8BD8-3AB774CF8098\" name=\"B\"></ns0:participant>\n    <ns0:participant id=\"sid-4CA24E93-70CC-475D-99E9-879F787AA2E5\" name=\"A\"></ns0:participant>\n    <ns0:participant id=\"sid-039E1911-FC87-47E4-B6D0-DD1555717E29\" name=\"c\"></ns0:participant>\n    <ns0:participant id=\"sid-5F5ED979-47A1-4A2A-BF8D-8C3D3E16018F\" name=\"B\"></ns0:participant>\n    <ns0:participant id=\"sid-6284EDD7-B58A-4C7D-A021-815EFA119D71\" name=\"A\"></ns0:participant>\n    <ns0:participant id=\"sid-01A6D1B4-C5D2-40BC-93C0-33C5591D1D42\" name=\"C\"></ns0:participant>\n    <ns0:participant id=\"sid-3F4C5527-2AFB-48FB-B562-F15DCE7FFA8B\" name=\"A\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-6d0c5151-3510-48b3-89e7-92c5f659c415\" messageRef=\"sid-15054BED-D498-4EB3-AB34-0BD6BDE0698F\" sourceRef=\"sid-CA137D2D-7844-4734-87D4-EAF4E16F95DD\" targetRef=\"sid-CA89F4A7-6FBD-43D1-8BD8-3AB774CF8098\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-acec7199-5ef9-497e-8b74-b2f73ee84b8b\" messageRef=\"sid-F56167C0-EECF-4C92-BD1B-68DBDEC428BA\" sourceRef=\"sid-4CA24E93-70CC-475D-99E9-879F787AA2E5\" targetRef=\"sid-039E1911-FC87-47E4-B6D0-DD1555717E29\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-76d9ec2b-1842-4e49-841b-b0e54117c115\" messageRef=\"sid-5AB7C4CF-541F-4654-B244-12AC460B1E8B\" sourceRef=\"sid-5F5ED979-47A1-4A2A-BF8D-8C3D3E16018F\" targetRef=\"sid-6284EDD7-B58A-4C7D-A021-815EFA119D71\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-5fe97477-f2c8-40dd-b8c8-d482f1f88d76\" messageRef=\"sid-D23D7DAB-7CFA-40EC-B772-E388410B69E1\" sourceRef=\"sid-01A6D1B4-C5D2-40BC-93C0-33C5591D1D42\" targetRef=\"sid-3F4C5527-2AFB-48FB-B562-F15DCE7FFA8B\"></ns0:messageFlow>\n    <ns0:choreographyTask id=\"sid-BD7B4002-9065-4315-AA74-82D3A6E7F757\" initiatingParticipantRef=\"sid-CA137D2D-7844-4734-87D4-EAF4E16F95DD\" loopType=\"None\" name=\"task1\">\n      <ns0:incoming>sid-71AFFE1A-CF80-4E05-99A8-B3B3162996E2</ns0:incoming>\n      <ns0:outgoing>sid-BD0A5C4E-44F4-4672-B80D-EB971BB3DBFD</ns0:outgoing>\n      <ns0:participantRef>sid-CA137D2D-7844-4734-87D4-EAF4E16F95DD</ns0:participantRef>\n      <ns0:participantRef>sid-CA89F4A7-6FBD-43D1-8BD8-3AB774CF8098</ns0:participantRef>\n      <ns0:messageFlowRef>sid-6d0c5151-3510-48b3-89e7-92c5f659c415</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-BD08DB98-E701-4D6C-9CAA-C146871F6BD5\" initiatingParticipantRef=\"sid-4CA24E93-70CC-475D-99E9-879F787AA2E5\" loopType=\"None\" name=\"task2\">\n      <ns0:incoming>sid-33FC1F99-D904-483B-9714-8B0425138A18</ns0:incoming>\n      <ns0:outgoing>sid-CFCDA3DE-BC90-4709-B3DD-60DFFEA2FB95</ns0:outgoing>\n      <ns0:participantRef>sid-4CA24E93-70CC-475D-99E9-879F787AA2E5</ns0:participantRef>\n      <ns0:participantRef>sid-039E1911-FC87-47E4-B6D0-DD1555717E29</ns0:participantRef>\n      <ns0:messageFlowRef>sid-acec7199-5ef9-497e-8b74-b2f73ee84b8b</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-A83DECE7-E09F-4824-A820-4C2272E6E1B4\" initiatingParticipantRef=\"sid-5F5ED979-47A1-4A2A-BF8D-8C3D3E16018F\" loopType=\"None\" name=\"task3\">\n      <ns0:incoming>sid-40E5BFA6-B5F0-4CF2-9B41-C35E395666B2</ns0:incoming>\n      <ns0:outgoing>sid-DCE6D6DD-E712-4BF7-8D4E-EBB1AF297E25</ns0:outgoing>\n      <ns0:participantRef>sid-5F5ED979-47A1-4A2A-BF8D-8C3D3E16018F</ns0:participantRef>\n      <ns0:participantRef>sid-6284EDD7-B58A-4C7D-A021-815EFA119D71</ns0:participantRef>\n      <ns0:messageFlowRef>sid-76d9ec2b-1842-4e49-841b-b0e54117c115</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-34B7968B-AE9A-47F7-BC39-04BD8B6B1548\" initiatingParticipantRef=\"sid-01A6D1B4-C5D2-40BC-93C0-33C5591D1D42\" loopType=\"None\" name=\"task4\">\n      <ns0:incoming>sid-7BBC29F1-77E7-41B6-ACA0-B6A49237E86A</ns0:incoming>\n      <ns0:outgoing>sid-370AA6F4-42B2-42D3-BB69-903E72421D3E</ns0:outgoing>\n      <ns0:participantRef>sid-01A6D1B4-C5D2-40BC-93C0-33C5591D1D42</ns0:participantRef>\n      <ns0:participantRef>sid-3F4C5527-2AFB-48FB-B562-F15DCE7FFA8B</ns0:participantRef>\n      <ns0:messageFlowRef>sid-5fe97477-f2c8-40dd-b8c8-d482f1f88d76</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:startEvent id=\"sid-8578548B-DE87-4412-9112-6DF67445CFE4\" name=\"\">\n      <ns0:outgoing>sid-B652151E-1F86-40E2-A724-BC4F4E59EFCD</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:parallelGateway gatewayDirection=\"Diverging\" id=\"sid-51FDD8A3-0E17-4736-AA14-AE6D303EF8E0\" name=\"\">\n      <ns0:incoming>sid-B652151E-1F86-40E2-A724-BC4F4E59EFCD</ns0:incoming>\n      <ns0:outgoing>sid-71AFFE1A-CF80-4E05-99A8-B3B3162996E2</ns0:outgoing>\n      <ns0:outgoing>sid-33FC1F99-D904-483B-9714-8B0425138A18</ns0:outgoing>\n    </ns0:parallelGateway>\n    <ns0:parallelGateway gatewayDirection=\"Converging\" id=\"sid-CA0395AA-40A9-47C7-83B3-1F4666FEFA18\" name=\"\">\n      <ns0:incoming>sid-BD0A5C4E-44F4-4672-B80D-EB971BB3DBFD</ns0:incoming>\n      <ns0:incoming>sid-CFCDA3DE-BC90-4709-B3DD-60DFFEA2FB95</ns0:incoming>\n      <ns0:outgoing>sid-5C3B3FB9-ED74-45D2-A694-D4C6DEF4F66B</ns0:outgoing>\n    </ns0:parallelGateway>\n    <ns0:eventBasedGateway eventGatewayType=\"Exclusive\" gatewayDirection=\"Diverging\" id=\"sid-78C45E25-19C0-43E0-B19B-39FED201B266\" instantiate=\"false\" name=\"\">\n      <ns0:incoming>sid-5C3B3FB9-ED74-45D2-A694-D4C6DEF4F66B</ns0:incoming>\n      <ns0:outgoing>sid-40E5BFA6-B5F0-4CF2-9B41-C35E395666B2</ns0:outgoing>\n      <ns0:outgoing>sid-7BBC29F1-77E7-41B6-ACA0-B6A49237E86A</ns0:outgoing>\n    </ns0:eventBasedGateway>\n    <ns0:endEvent id=\"sid-92C1FDF2-AFB1-4EF4-9F48-28281C61B459\" name=\"\">\n      <ns0:incoming>sid-DCE6D6DD-E712-4BF7-8D4E-EBB1AF297E25</ns0:incoming>\n      <ns0:incoming>sid-370AA6F4-42B2-42D3-BB69-903E72421D3E</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-B652151E-1F86-40E2-A724-BC4F4E59EFCD\" name=\"\" sourceRef=\"sid-8578548B-DE87-4412-9112-6DF67445CFE4\" targetRef=\"sid-51FDD8A3-0E17-4736-AA14-AE6D303EF8E0\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-71AFFE1A-CF80-4E05-99A8-B3B3162996E2\" name=\"\" sourceRef=\"sid-51FDD8A3-0E17-4736-AA14-AE6D303EF8E0\" targetRef=\"sid-BD7B4002-9065-4315-AA74-82D3A6E7F757\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-33FC1F99-D904-483B-9714-8B0425138A18\" name=\"\" sourceRef=\"sid-51FDD8A3-0E17-4736-AA14-AE6D303EF8E0\" targetRef=\"sid-BD08DB98-E701-4D6C-9CAA-C146871F6BD5\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-BD0A5C4E-44F4-4672-B80D-EB971BB3DBFD\" name=\"\" sourceRef=\"sid-BD7B4002-9065-4315-AA74-82D3A6E7F757\" targetRef=\"sid-CA0395AA-40A9-47C7-83B3-1F4666FEFA18\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-CFCDA3DE-BC90-4709-B3DD-60DFFEA2FB95\" name=\"\" sourceRef=\"sid-BD08DB98-E701-4D6C-9CAA-C146871F6BD5\" targetRef=\"sid-CA0395AA-40A9-47C7-83B3-1F4666FEFA18\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-5C3B3FB9-ED74-45D2-A694-D4C6DEF4F66B\" name=\"\" sourceRef=\"sid-CA0395AA-40A9-47C7-83B3-1F4666FEFA18\" targetRef=\"sid-78C45E25-19C0-43E0-B19B-39FED201B266\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-40E5BFA6-B5F0-4CF2-9B41-C35E395666B2\" name=\"\" sourceRef=\"sid-78C45E25-19C0-43E0-B19B-39FED201B266\" targetRef=\"sid-A83DECE7-E09F-4824-A820-4C2272E6E1B4\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-7BBC29F1-77E7-41B6-ACA0-B6A49237E86A\" name=\"\" sourceRef=\"sid-78C45E25-19C0-43E0-B19B-39FED201B266\" targetRef=\"sid-34B7968B-AE9A-47F7-BC39-04BD8B6B1548\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-DCE6D6DD-E712-4BF7-8D4E-EBB1AF297E25\" name=\"\" sourceRef=\"sid-A83DECE7-E09F-4824-A820-4C2272E6E1B4\" targetRef=\"sid-92C1FDF2-AFB1-4EF4-9F48-28281C61B459\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-370AA6F4-42B2-42D3-BB69-903E72421D3E\" name=\"\" sourceRef=\"sid-34B7968B-AE9A-47F7-BC39-04BD8B6B1548\" targetRef=\"sid-92C1FDF2-AFB1-4EF4-9F48-28281C61B459\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract sid_232d5077_13ed_4b15_9d20_e2a901c3a32e {\n    uint public tokenState = 1;\n    address[8] public participants;\n    uint public conditions;\n    \n    constructor(address[8] memory _participants) {\n        participants = _participants;\n    }\n    \n    function setConditions(uint _conditions) external {\n        conditions = _conditions;\n    }\n    \n    function enact(uint id) external {\n        uint _tokenState = tokenState;\n        while(_tokenState != 0) {\n            if (_tokenState & 1 == 1) {\n                // Start event auto transition\n                _tokenState &= ~uint(1);\n                _tokenState |= 6; // Activate both parallel branches\n                continue;\n            }\n            \n            if (_tokenState & 2 == 2) {\n                // ChoreographyTask task1\n                if (1 == id && msg.sender == participants[0]) {\n                    _tokenState &= ~uint(2);\n                    _tokenState |= 8;\n                    id = 0;\n                    continue;\n                }\n            }\n            \n            if (_tokenState & 4 == 4) {\n                // ChoreographyTask task2\n                if (2 == id && msg.sender == participants[2]) {\n                    _tokenState &= ~uint(4);\n                    _tokenState |= 16;\n                    id = 0;\n                    continue;\n                }\n            }\n            \n            if (_tokenState & 32 == 32) {\n                // ChoreographyTask task3\n                if (3 == id && msg.sender == participants[4]) {\n                    _tokenState &= ~uint(32);\n                    _tokenState |= 0;\n                    break;\n                }\n            }\n            \n            if (_tokenState & 64 == 64) {\n                // ChoreographyTask task4\n                if (4 == id && msg.sender == participants[6]) {\n                    _tokenState &= ~uint(64);\n                    _tokenState |= 0;\n                    break;\n                }\n            }\n            \n            if (_tokenState & 24 == 24) {\n                // Parallel join - both task1 and task2 completed\n                _tokenState &= ~uint(24);\n                _tokenState |= 96; // Activate event-based gateway\n                continue;\n            }\n            \n            if (_tokenState & 96 == 96) {\n                // Event-based gateway - activate both alternatives\n                _tokenState &= ~uint(96);\n                _tokenState |= 96; // Keep both task3 and task4 available\n                continue;\n            }\n            \n            break;\n        }\n        tokenState = _tokenState;\n    }\n}\n```"
}