{
  "name": "anthropic/claude-sonnet-4 - one-shot",
  "processID": "sid_6f106151_3fbf_49f3_b4f1_dbddb5207068",
  "timestamp": "2025-06-12T03:57:12.577Z",
  "model": "anthropic/claude-sonnet-4",
  "compiled": true,
  "usage": {
    "prompt_tokens": 7956,
    "completion_tokens": 696,
    "total_tokens": 8652,
    "cost": 0.034308
  },
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-3C58D5A9-4A5D-4784-93F5-2EEAD658E4F7\":1,\"sid-D836F160-E1FA-4B10-9270-C224CAAA4139\":2,\"sid-05B396A1-4772-44AB-B4E2-21384E0A5D44\":3}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- The flow may include loops. \n  - Use taksID `0` as a no operation, and set taskID to `0` after every task execution, so there are no infinite task loops.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-C936A877-3443-4A0E-85EE-B4B22AF59A94\":0,\"sid-1439E550-45A1-4F95-9C9C-A2734583E5AE\":1,\"sid-DFE0D044-E997-4587-8BC0-E1822D8163D2\":2,\"sid-B9709101-8768-4C48-8F1F-14DE7EE3E4B1\":3,\"sid-3C6076B7-3D0A-431E-AC1A-58BA1AE352D5\":4,\"sid-C0178CA7-419A-4378-829C-E8C36FFA9E2F\":5}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- If you use text from the model in the code, you must properly escape it (no -, no umlauts).\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:message id=\"Message_032z8ml\"></bpmn2:message>\n  <bpmn2:message id=\"Message_19qrd5q\"></bpmn2:message>\n  <bpmn2:message id=\"Message_0vnm1wq\"></bpmn2:message>\n  <bpmn2:message id=\"Message_085o98p\"></bpmn2:message>\n  <bpmn2:choreography id=\"Choreography\">\n    <bpmn2:participant id=\"Participant_1tzf68i\" name=\"Customer\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_198pz14\" name=\"Seller\"></bpmn2:participant>\n    <bpmn2:participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></bpmn2:participant>\n    <bpmn2:messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></bpmn2:messageFlow>\n    <bpmn2:messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></bpmn2:messageFlow>\n    <bpmn2:startEvent id=\"Event_0y1sdn3\">\n      <bpmn2:outgoing>Flow_0e2c805</bpmn2:outgoing>\n    </bpmn2:startEvent>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <bpmn2:incoming>Flow_0e2c805</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0d6j7vb</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_1cx9rl4</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_0ybxbuc</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_14ulro8</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_0378t5g</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r00txu</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_02gqwyg</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_1kim4vq</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_18xf3u6</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <bpmn2:incoming>Flow_11zi7qu</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_04lnqsf</bpmn2:outgoing>\n      <bpmn2:participantRef>Participant_198pz14</bpmn2:participantRef>\n      <bpmn2:participantRef>Participant_1tzf68i</bpmn2:participantRef>\n      <bpmn2:messageFlowRef>MessageFlow_0r98f9o</bpmn2:messageFlowRef>\n    </bpmn2:choreographyTask>\n    <bpmn2:sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_067nql1\" name=\"conditions &amp; 1 == 1\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></bpmn2:sequenceFlow>\n    <bpmn2:sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></bpmn2:sequenceFlow>\n    <bpmn2:exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <bpmn2:incoming>Flow_0d6j7vb</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ymdsa2</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_067nql1</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <bpmn2:incoming>Flow_067nql1</bpmn2:incoming>\n      <bpmn2:incoming>Flow_198zju1</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_11zi7qu</bpmn2:outgoing>\n    </bpmn2:exclusiveGateway>\n    <bpmn2:parallelGateway id=\"Gateway_1klfaw3\">\n      <bpmn2:incoming>Flow_0ymdsa2</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_0ybxbuc</bpmn2:outgoing>\n      <bpmn2:outgoing>Flow_02gqwyg</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:parallelGateway id=\"Gateway_0xcnzox\">\n      <bpmn2:incoming>Flow_1kim4vq</bpmn2:incoming>\n      <bpmn2:incoming>Flow_14ulro8</bpmn2:incoming>\n      <bpmn2:outgoing>Flow_198zju1</bpmn2:outgoing>\n    </bpmn2:parallelGateway>\n    <bpmn2:endEvent id=\"Event_1ezlk4g\">\n      <bpmn2:incoming>Flow_04lnqsf</bpmn2:incoming>\n    </bpmn2:endEvent>\n  </bpmn2:choreography>\n</bpmn2:definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\ncontract comp_Choreography {\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (1 == id && msg.sender == participants[0]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (2 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (3 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        id = 0;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (4 == id && msg.sender == participants[1]) {\n        // <--- custom code for task here --->\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n    tokenState = _tokenState;\n  }\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-0f4158c3-c173-45b5-9ab3-643b700a2c8c\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:message id=\"sid-73043b5d-d3fa-4b15-bc80-4d5f4d0c1fab\" name=\"Antrag versenden\"></ns0:message>\n  <ns0:message id=\"sid-26165009-cd9c-4786-bc42-598ee8b6032e\" name=\"Eingangsbestätigung verschicken\"></ns0:message>\n  <ns0:choreography id=\"sid_6f106151_3fbf_49f3_b4f1_dbddb5207068\" isClosed=\"false\">\n    <ns0:participant id=\"sid-C936A877-3443-4A0E-85EE-B4B22AF59A94\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-1439E550-45A1-4F95-9C9C-A2734583E5AE\" name=\"Unternehmen\"></ns0:participant>\n    <ns0:participant id=\"sid-DFE0D044-E997-4587-8BC0-E1822D8163D2\" name=\"Unternehmen\"></ns0:participant>\n    <ns0:participant id=\"sid-B9709101-8768-4C48-8F1F-14DE7EE3E4B1\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-3C6076B7-3D0A-431E-AC1A-58BA1AE352D5\" name=\"Unternehmen\"></ns0:participant>\n    <ns0:participant id=\"sid-C0178CA7-419A-4378-829C-E8C36FFA9E2F\" name=\"Kunde\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-38d6a241-ae3a-43cd-8456-4eb8418bf19b\" messageRef=\"sid-73043b5d-d3fa-4b15-bc80-4d5f4d0c1fab\" sourceRef=\"sid-C936A877-3443-4A0E-85EE-B4B22AF59A94\" targetRef=\"sid-1439E550-45A1-4F95-9C9C-A2734583E5AE\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-d6671475-09fe-4dbf-9ac4-017d343b0087\" messageRef=\"sid-26165009-cd9c-4786-bc42-598ee8b6032e\" sourceRef=\"sid-1439E550-45A1-4F95-9C9C-A2734583E5AE\" targetRef=\"sid-C936A877-3443-4A0E-85EE-B4B22AF59A94\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-5cd286db-dc7e-4f4e-ab05-5b723b97f40f\" sourceRef=\"sid-DFE0D044-E997-4587-8BC0-E1822D8163D2\" targetRef=\"sid-B9709101-8768-4C48-8F1F-14DE7EE3E4B1\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-b6067772-9ce1-4479-92dc-989622f8075d\" sourceRef=\"sid-3C6076B7-3D0A-431E-AC1A-58BA1AE352D5\" targetRef=\"sid-C0178CA7-419A-4378-829C-E8C36FFA9E2F\"></ns0:messageFlow>\n    <ns0:startEvent id=\"sid-FF2CF55A-7C29-4E7C-A482-75CFA36BF1DA\" name=\"\">\n      <ns0:outgoing>sid-8488A12C-5A4B-4C48-9032-C03B0EF47F0A</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:choreographyTask id=\"sid-3C58D5A9-4A5D-4784-93F5-2EEAD658E4F7\" initiatingParticipantRef=\"sid-C936A877-3443-4A0E-85EE-B4B22AF59A94\" loopType=\"None\" name=\"Kunde stellt Antragsformular\">\n      <ns0:incoming>sid-8488A12C-5A4B-4C48-9032-C03B0EF47F0A</ns0:incoming>\n      <ns0:outgoing>sid-2830ADD3-4FD8-4FC3-A857-E63887CB68DA</ns0:outgoing>\n      <ns0:participantRef>sid-C936A877-3443-4A0E-85EE-B4B22AF59A94</ns0:participantRef>\n      <ns0:participantRef>sid-1439E550-45A1-4F95-9C9C-A2734583E5AE</ns0:participantRef>\n      <ns0:messageFlowRef>sid-38d6a241-ae3a-43cd-8456-4eb8418bf19b</ns0:messageFlowRef>\n      <ns0:messageFlowRef>sid-d6671475-09fe-4dbf-9ac4-017d343b0087</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-D836F160-E1FA-4B10-9270-C224CAAA4139\" initiatingParticipantRef=\"sid-DFE0D044-E997-4587-8BC0-E1822D8163D2\" loopType=\"None\" name=\"Informieren über Ablehnung\">\n      <ns0:incoming>sid-D444D23B-E42F-4B3A-8145-48513E956D64</ns0:incoming>\n      <ns0:outgoing>sid-B1C7B4A6-55D6-4256-8E93-B62D26F0173B</ns0:outgoing>\n      <ns0:participantRef>sid-DFE0D044-E997-4587-8BC0-E1822D8163D2</ns0:participantRef>\n      <ns0:participantRef>sid-B9709101-8768-4C48-8F1F-14DE7EE3E4B1</ns0:participantRef>\n      <ns0:messageFlowRef>sid-5cd286db-dc7e-4f4e-ab05-5b723b97f40f</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-05B396A1-4772-44AB-B4E2-21384E0A5D44\" initiatingParticipantRef=\"sid-3C6076B7-3D0A-431E-AC1A-58BA1AE352D5\" loopType=\"None\" name=\"Informieren über zustimmen\">\n      <ns0:incoming>sid-7F36541B-5A22-4F83-9F1E-2ED56B2C2B51</ns0:incoming>\n      <ns0:outgoing>sid-D326702B-536C-4670-A76D-821456F5D96C</ns0:outgoing>\n      <ns0:participantRef>sid-3C6076B7-3D0A-431E-AC1A-58BA1AE352D5</ns0:participantRef>\n      <ns0:participantRef>sid-C0178CA7-419A-4378-829C-E8C36FFA9E2F</ns0:participantRef>\n      <ns0:messageFlowRef>sid-b6067772-9ce1-4479-92dc-989622f8075d</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:endEvent id=\"sid-0A54DCAF-A587-4A84-93D4-554CDF3C08C6\" name=\"\">\n      <ns0:incoming>sid-B1C7B4A6-55D6-4256-8E93-B62D26F0173B</ns0:incoming>\n      <ns0:incoming>sid-D326702B-536C-4670-A76D-821456F5D96C</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:exclusiveGateway gatewayDirection=\"Diverging\" id=\"sid-0C2844F3-8362-40EC-9404-AEE6DE89F808\" name=\"\" default=\"sid-D444D23B-E42F-4B3A-8145-48513E956D64\">\n      <ns0:incoming>sid-2830ADD3-4FD8-4FC3-A857-E63887CB68DA</ns0:incoming>\n      <ns0:outgoing>sid-D444D23B-E42F-4B3A-8145-48513E956D64</ns0:outgoing>\n      <ns0:outgoing>sid-7F36541B-5A22-4F83-9F1E-2ED56B2C2B51</ns0:outgoing>\n    </ns0:exclusiveGateway>\n    <ns0:sequenceFlow id=\"sid-8488A12C-5A4B-4C48-9032-C03B0EF47F0A\" name=\"\" sourceRef=\"sid-FF2CF55A-7C29-4E7C-A482-75CFA36BF1DA\" targetRef=\"sid-3C58D5A9-4A5D-4784-93F5-2EEAD658E4F7\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-B1C7B4A6-55D6-4256-8E93-B62D26F0173B\" name=\"\" sourceRef=\"sid-D836F160-E1FA-4B10-9270-C224CAAA4139\" targetRef=\"sid-0A54DCAF-A587-4A84-93D4-554CDF3C08C6\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-D326702B-536C-4670-A76D-821456F5D96C\" name=\"\" sourceRef=\"sid-05B396A1-4772-44AB-B4E2-21384E0A5D44\" targetRef=\"sid-0A54DCAF-A587-4A84-93D4-554CDF3C08C6\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-D444D23B-E42F-4B3A-8145-48513E956D64\" name=\"\" sourceRef=\"sid-0C2844F3-8362-40EC-9404-AEE6DE89F808\" targetRef=\"sid-D836F160-E1FA-4B10-9270-C224CAAA4139\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-7F36541B-5A22-4F83-9F1E-2ED56B2C2B51\" name=\"conditions &amp; 1 == 1\" sourceRef=\"sid-0C2844F3-8362-40EC-9404-AEE6DE89F808\" targetRef=\"sid-05B396A1-4772-44AB-B4E2-21384E0A5D44\">\n      <conditionExpression xsi:type=\"ns0:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-2830ADD3-4FD8-4FC3-A857-E63887CB68DA\" name=\"\" sourceRef=\"sid-3C58D5A9-4A5D-4784-93F5-2EEAD658E4F7\" targetRef=\"sid-0C2844F3-8362-40EC-9404-AEE6DE89F808\"></ns0:sequenceFlow>\n  </ns0:choreography>\n</ns0:definitions>\n",
  "output": "```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract sid_6f106151_3fbf_49f3_b4f1_dbddb5207068 {\n    uint public tokenState = 1;\n    address[6] public participants;\n    uint public conditions;\n\n    constructor(address[6] memory _participants) {\n        participants = _participants;\n    }\n\n    function setConditions(uint _conditions) external {\n        conditions = _conditions;\n    }\n\n    function enact(uint id) external {\n        uint _tokenState = tokenState;\n        while(_tokenState != 0) {\n            if (_tokenState & 1 == 1) {\n                // <--- sid-3C58D5A9-4A5D-4784-93F5-2EEAD658E4F7 Kunde stellt Antragsformular --->\n                if (1 == id && msg.sender == participants[0]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(1);\n                    _tokenState |= 2;\n                    id = 0;\n                    continue;\n                }\n            }\n            if (_tokenState & 4 == 4) {\n                // <--- sid-D836F160-E1FA-4B10-9270-C224CAAA4139 Informieren ueber Ablehnung --->\n                if (2 == id && msg.sender == participants[2]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(4);\n                    _tokenState |= 0;\n                    break; // is end\n                }\n            }\n            if (_tokenState & 8 == 8) {\n                // <--- sid-05B396A1-4772-44AB-B4E2-21384E0A5D44 Informieren ueber zustimmen --->\n                if (3 == id && msg.sender == participants[4]) {\n                    // <--- custom code for task here --->\n                    _tokenState &= ~uint(8);\n                    _tokenState |= 0;\n                    break; // is end\n                }\n            }\n            if (_tokenState & 2 == 2) {\n                if (conditions & 1 == 1) {\n                    // <--- auto transition --->\n                    _tokenState &= ~uint(2);\n                    _tokenState |= 8;\n                    continue;\n                } else {\n                    // <--- auto transition --->\n                    _tokenState &= ~uint(2);\n                    _tokenState |= 4;\n                    continue;\n                }\n            }\n            break;\n        }\n        tokenState = _tokenState;\n    }\n}\n```"
}