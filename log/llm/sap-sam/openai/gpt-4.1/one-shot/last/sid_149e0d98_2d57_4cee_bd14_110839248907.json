{
  "name": "openai/gpt-4.1 - one-shot",
  "timestamp": "2025-06-10T22:22:56.546Z",
  "model": "openai/gpt-4.1",
  "prompt": "Generate a Solidity smart contract from the BPMN 2.0 choreography model XML provided above.\n\nUse the following implementation rules:\n\n- The contract name must be the `id` of the `<choreography>` element in the model.\n- Implement the function `enact(uint taskID) external` which allows a participant to execute a choreography task.\n- Only `<choreographyTask>` elements are executable via `enact()`. Gateways and start/end events are handled internally.\n- Enforce the order of task execution based on `<sequenceFlow>` elements and the choreography's control flow.\nUse the following mapping of taskID to `choreographyTask` id of the model:\n```json\n{\"sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC\":1,\"sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1\":2}\n```\n- Implement exclusive gateways (`<exclusiveGateway>`) using Solidity conditional logic.\n  - Each exclusive gateway must evaluate all conditional `<sequenceFlow>` elements when active.\n  - Use Solidity `if (conditions & N == N)` syntax, exactly as defined in the `<conditionExpression>`.\n  - If at least one condition is satisfied, activate the target task.\n  - If none are satisfied, follow the `default` sequenceFlow.\n  - Each condition must be evaluated only when the gateway's bit is active in `tokenState`.\n  - Use a variable `uint public conditions` and include a setter: `function setConditions(uint _conditions) external`.\n\n- Implement parallel gateways (`<parallelGateway>`) as:\n  - Join: wait for all incoming tokens to activate.\n  - Split: activate all outgoing tasks concurrently.\n\n- Use `uint public tokenState` to encode current control flow positions:\n  - Each active task or gateway is tracked using a unique bit (e.g., 1, 2, 4, 8...).\n  - Use bitmasking (`&`, `|`, `~`) to activate or deactivate paths.\n  - Transitions may activate multiple concurrent paths.\n\n- Use the constructor: `constructor(address[n] memory _participants)` where `n` is the number of participants.\n- Allow execution of each task only by the correct initiating participant, using:\n  ```solidity\n  require(msg.sender == participants[i]);\n  ```\n- Use this mapping of participant index to participant ID:\n```json\n{\"sid-0314F99C-2568-43DA-84B3-E4C6DD51C068\":0,\"sid-D88B6C78-C2CF-4E2A-BA9E-091AA12CF42A\":1,\"sid-B4DAB341-FFA7-47AB-BD38-6B5A85B8D7B6\":2,\"sid-B654610E-2232-44BE-BA4C-D7215B5D4529\":3}\n```\n\n- At the end of the process, set `tokenState = 0` to indicate termination.\n- Do not output any text other than the Solidity contract itself.\n\nAn example.\nGiven the choreography\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions id=\"_tTv5YOycEeiHGOQ2NkJZNQ\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <message id=\"Message_032z8ml\"></message>\n  <message id=\"Message_19qrd5q\"></message>\n  <message id=\"Message_0vnm1wq\"></message>\n  <message id=\"Message_085o98p\"></message>\n  <choreography id=\"ChoreographyExample\">\n    <participant id=\"Participant_1tzf68i\" name=\"Customer\"></participant>\n    <participant id=\"Participant_198pz14\" name=\"Seller\"></participant>\n    <participant id=\"Participant_0378t5g\" name=\"Manufacturer\"></participant>\n    <messageFlow id=\"MessageFlow_0r98f9o\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_032z8ml\"></messageFlow>\n    <messageFlow id=\"MessageFlow_18xf3u6\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_1tzf68i\" messageRef=\"Message_19qrd5q\"></messageFlow>\n    <messageFlow id=\"MessageFlow_0r00txu\" sourceRef=\"Participant_198pz14\" targetRef=\"Participant_0378t5g\" messageRef=\"Message_0vnm1wq\"></messageFlow>\n    <messageFlow id=\"MessageFlow_1cx9rl4\" sourceRef=\"Participant_1tzf68i\" targetRef=\"Participant_198pz14\" messageRef=\"Message_085o98p\"></messageFlow>\n    <startEvent id=\"Event_0y1sdn3\">\n      <outgoing>Flow_0e2c805</outgoing>\n    </startEvent>\n    <choreographyTask id=\"ChoreographyTask_1vnykqp\" name=\"Order goods\" initiatingParticipantRef=\"Participant_1tzf68i\">\n      <incoming>Flow_0e2c805</incoming>\n      <outgoing>Flow_0d6j7vb</outgoing>\n      <participantRef>Participant_1tzf68i</participantRef>\n      <participantRef>Participant_198pz14</participantRef>\n      <messageFlowRef>MessageFlow_1cx9rl4</messageFlowRef>\n    </choreographyTask>\n    <choreographyTask id=\"ChoreographyTask_16lc74v\" name=\"Produce goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <incoming>Flow_0ybxbuc</incoming>\n      <outgoing>Flow_14ulro8</outgoing>\n      <participantRef>Participant_198pz14</participantRef>\n      <participantRef>Participant_0378t5g</participantRef>\n      <messageFlowRef>MessageFlow_0r00txu</messageFlowRef>\n    </choreographyTask>\n    <choreographyTask id=\"ChoreographyTask_07t2zjo\" name=\"Inform customer\" initiatingParticipantRef=\"Participant_198pz14\">\n      <incoming>Flow_02gqwyg</incoming>\n      <outgoing>Flow_1kim4vq</outgoing>\n      <participantRef>Participant_198pz14</participantRef>\n      <participantRef>Participant_1tzf68i</participantRef>\n      <messageFlowRef>MessageFlow_18xf3u6</messageFlowRef>\n    </choreographyTask>\n    <choreographyTask id=\"ChoreographyTask_056ylqg\" name=\"Ship goods\" initiatingParticipantRef=\"Participant_198pz14\">\n      <incoming>Flow_11zi7qu</incoming>\n      <outgoing>Flow_04lnqsf</outgoing>\n      <participantRef>Participant_198pz14</participantRef>\n      <participantRef>Participant_1tzf68i</participantRef>\n      <messageFlowRef>MessageFlow_0r98f9o</messageFlowRef>\n    </choreographyTask>\n    <sequenceFlow id=\"Flow_0e2c805\" sourceRef=\"Event_0y1sdn3\" targetRef=\"ChoreographyTask_1vnykqp\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_0d6j7vb\" sourceRef=\"ChoreographyTask_1vnykqp\" targetRef=\"Gateway_1bpkhpg\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_0ymdsa2\" name=\"unavailable\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1klfaw3\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_0ybxbuc\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_16lc74v\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_02gqwyg\" sourceRef=\"Gateway_1klfaw3\" targetRef=\"ChoreographyTask_07t2zjo\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_1kim4vq\" sourceRef=\"ChoreographyTask_07t2zjo\" targetRef=\"Gateway_0xcnzox\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_14ulro8\" sourceRef=\"ChoreographyTask_16lc74v\" targetRef=\"Gateway_0xcnzox\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_067nql1\" name=\"available\" sourceRef=\"Gateway_1bpkhpg\" targetRef=\"Gateway_1yl9mch\">\n      <conditionExpression xsi:type=\"bpmn2:tFormalExpression\" language=\"Solidity\">conditions &amp; 1 == 1</conditionExpression>\n    </sequenceFlow>\n    <sequenceFlow id=\"Flow_198zju1\" sourceRef=\"Gateway_0xcnzox\" targetRef=\"Gateway_1yl9mch\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_11zi7qu\" sourceRef=\"Gateway_1yl9mch\" targetRef=\"ChoreographyTask_056ylqg\"></sequenceFlow>\n    <sequenceFlow id=\"Flow_04lnqsf\" sourceRef=\"ChoreographyTask_056ylqg\" targetRef=\"Event_1ezlk4g\"></sequenceFlow>\n    <exclusiveGateway id=\"Gateway_1bpkhpg\" default=\"Flow_0ymdsa2\">\n      <incoming>Flow_0d6j7vb</incoming>\n      <outgoing>Flow_0ymdsa2</outgoing>\n      <outgoing>Flow_067nql1</outgoing>\n    </exclusiveGateway>\n    <exclusiveGateway id=\"Gateway_1yl9mch\" default=\"Flow_11zi7qu\">\n      <incoming>Flow_067nql1</incoming>\n      <incoming>Flow_198zju1</incoming>\n      <outgoing>Flow_11zi7qu</outgoing>\n    </exclusiveGateway>\n    <parallelGateway id=\"Gateway_1klfaw3\">\n      <incoming>Flow_0ymdsa2</incoming>\n      <outgoing>Flow_0ybxbuc</outgoing>\n      <outgoing>Flow_02gqwyg</outgoing>\n    </parallelGateway>\n    <parallelGateway id=\"Gateway_0xcnzox\">\n      <incoming>Flow_1kim4vq</incoming>\n      <incoming>Flow_14ulro8</incoming>\n      <outgoing>Flow_198zju1</outgoing>\n    </parallelGateway>\n    <endEvent id=\"Event_1ezlk4g\">\n      <incoming>Flow_04lnqsf</incoming>\n    </endEvent>\n  </choreography>\n</definitions>\n```\nA correct implementation is:\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract ChoreographyExample {\n  // The example code uses bitmasking for the current state, as it is more efficient.\n  // tokenState represents the current active elements, which can include multiple concurrent paths.\n  uint public tokenState = 1;\n  address[3] public participants;\n  uint public conditions;\n\n  constructor(address[3] memory _participants) {\n    participants = _participants;\n  }\n  function setConditions(uint _conditions) external {\n    conditions = _conditions;\n  }\n\n  function enact(uint id) external {\n    uint _tokenState = tokenState;\n\n    while(_tokenState != 0) {\n      if (_tokenState & 1 == 1) {\n        // <--- ChoreographyTask_1vnykqp Order goods --->\n        if (0 == id && msg.sender == participants[0]) {\n        // Transition: deactivate current, activate next state\n        _tokenState &= ~uint(1);\n        _tokenState |= 6;\n        continue; \n        }\n      }\n      if (_tokenState & 2 == 2) {\n        // <--- ChoreographyTask_16lc74v Produce goods --->\n        if (1 == id && msg.sender == participants[1]) {\n        // Transition: deactivate current, activate next state\n        _tokenState &= ~uint(2);\n        _tokenState |= 8;\n        continue; \n        }\n      }\n      if (_tokenState & 4 == 4) {\n        // <--- ChoreographyTask_07t2zjo Inform customer --->\n        if (2 == id && msg.sender == participants[1]) {\n        // Transition: deactivate current, activate next state\n        _tokenState &= ~uint(4);\n        _tokenState |= 16;\n        continue; \n        }\n      }\n      if (_tokenState & 32 == 32) {\n        // <--- ChoreographyTask_056ylqg Ship goods --->\n        if (3 == id && msg.sender == participants[1]) {\n        // Transition: deactivate current, activate next state\n        _tokenState &= ~uint(32);\n        _tokenState |= 0;\n        break; // is end\n        }\n      }\n      if (_tokenState & 6 == 6) {\n        if (conditions & 1 == 1) {\n          // <---  auto transition  --->\n          // Transition: deactivate current, activate next state\n          _tokenState &= ~uint(6);\n          _tokenState |= 32;\n          continue; \n        }\n      }\n      if (_tokenState & 24 == 24) {\n        // <---  auto transition  --->\n        // Transition: deactivate current, activate next state\n        _tokenState &= ~uint(24);\n        _tokenState |= 32;\n        continue; \n      }\n      break;\n    }\n\n    tokenState = _tokenState;\n  }\n\n}\n```",
  "input": "<ns0:definitions xmlns:ns0=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ns2=\"http://www.signavio.com\" xmlns:ns3=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:ns4=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:ns5=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" exporter=\"Signavio Process Editor, http://www.signavio.com\" exporterVersion=\"19.1.2\" expressionLanguage=\"http://www.w3.org/TR/XPath\" id=\"sid-ec43896d-4df0-453e-91ac-5b44d009f011\" targetNamespace=\"http://www.signavio.com\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd\">\n  <ns0:choreography id=\"sid_149e0d98_2d57_4cee_bd14_110839248907\" isClosed=\"false\">\n    <ns0:participant id=\"sid-0314F99C-2568-43DA-84B3-E4C6DD51C068\" name=\"Pizzalieferant\"></ns0:participant>\n    <ns0:participant id=\"sid-D88B6C78-C2CF-4E2A-BA9E-091AA12CF42A\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-B4DAB341-FFA7-47AB-BD38-6B5A85B8D7B6\" name=\"Kunde\"></ns0:participant>\n    <ns0:participant id=\"sid-B654610E-2232-44BE-BA4C-D7215B5D4529\" name=\"Pizzalieferant\"></ns0:participant>\n    <ns0:messageFlow id=\"sid-3593db32-5c9e-457d-968b-e4e256fc118b\" sourceRef=\"sid-0314F99C-2568-43DA-84B3-E4C6DD51C068\" targetRef=\"sid-D88B6C78-C2CF-4E2A-BA9E-091AA12CF42A\"></ns0:messageFlow>\n    <ns0:messageFlow id=\"sid-857779e7-0311-498f-92a4-754f942d4411\" sourceRef=\"sid-B4DAB341-FFA7-47AB-BD38-6B5A85B8D7B6\" targetRef=\"sid-B654610E-2232-44BE-BA4C-D7215B5D4529\"></ns0:messageFlow>\n    <ns0:startEvent id=\"sid-92E9CE06-AB7A-43DB-B5A3-053B1BBF964C\" name=\"\">\n      <ns0:outgoing>sid-18CB1707-0A75-461D-907F-53DF3A66AC5A</ns0:outgoing>\n    </ns0:startEvent>\n    <ns0:choreographyTask id=\"sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC\" initiatingParticipantRef=\"sid-0314F99C-2568-43DA-84B3-E4C6DD51C068\" loopType=\"None\" name=\"Nach Geld &amp;#10;fragen\">\n      <ns0:incoming>sid-18CB1707-0A75-461D-907F-53DF3A66AC5A</ns0:incoming>\n      <ns0:outgoing>sid-52088C11-66ED-42A0-A625-3D203410A530</ns0:outgoing>\n      <ns0:participantRef>sid-0314F99C-2568-43DA-84B3-E4C6DD51C068</ns0:participantRef>\n      <ns0:participantRef>sid-D88B6C78-C2CF-4E2A-BA9E-091AA12CF42A</ns0:participantRef>\n      <ns0:messageFlowRef>sid-3593db32-5c9e-457d-968b-e4e256fc118b</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:choreographyTask id=\"sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1\" initiatingParticipantRef=\"sid-B4DAB341-FFA7-47AB-BD38-6B5A85B8D7B6\" loopType=\"None\" name=\"Geld geben\">\n      <ns0:incoming>sid-52088C11-66ED-42A0-A625-3D203410A530</ns0:incoming>\n      <ns0:outgoing>sid-96643C3F-DE73-4B68-92FC-026485634EB0</ns0:outgoing>\n      <ns0:participantRef>sid-B4DAB341-FFA7-47AB-BD38-6B5A85B8D7B6</ns0:participantRef>\n      <ns0:participantRef>sid-B654610E-2232-44BE-BA4C-D7215B5D4529</ns0:participantRef>\n      <ns0:messageFlowRef>sid-857779e7-0311-498f-92a4-754f942d4411</ns0:messageFlowRef>\n    </ns0:choreographyTask>\n    <ns0:endEvent id=\"sid-7EEAF070-8113-4C0F-B72A-F25FD509ADCE\" name=\"\">\n      <ns0:incoming>sid-96643C3F-DE73-4B68-92FC-026485634EB0</ns0:incoming>\n    </ns0:endEvent>\n    <ns0:sequenceFlow id=\"sid-18CB1707-0A75-461D-907F-53DF3A66AC5A\" name=\"\" sourceRef=\"sid-92E9CE06-AB7A-43DB-B5A3-053B1BBF964C\" targetRef=\"sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-52088C11-66ED-42A0-A625-3D203410A530\" name=\"\" sourceRef=\"sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC\" targetRef=\"sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1\"></ns0:sequenceFlow>\n    <ns0:sequenceFlow id=\"sid-96643C3F-DE73-4B68-92FC-026485634EB0\" name=\"\" sourceRef=\"sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1\" targetRef=\"sid-7EEAF070-8113-4C0F-B72A-F25FD509ADCE\"></ns0:sequenceFlow>\n  </ns0:choreography>\n  <ns3:BPMNDiagram id=\"sid-65c0039e-c534-4331-bc2a-f25eb3bf8570\">\n    <ns3:BPMNPlane bpmnElement=\"sid_149e0d98_2d57_4cee_bd14_110839248907\" id=\"sid-6fd582c6-6f10-430f-9925-3577411af821\">\n      <ns3:BPMNShape bpmnElement=\"sid-92E9CE06-AB7A-43DB-B5A3-053B1BBF964C\" id=\"sid-92E9CE06-AB7A-43DB-B5A3-053B1BBF964C_gui\">\n        <ns4:Bounds height=\"30.0\" width=\"30.0\" x=\"135.0\" y=\"300.0\"></ns4:Bounds>\n      </ns3:BPMNShape>\n      <ns3:BPMNShape bpmnElement=\"sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC\" id=\"sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC_gui\">\n        <ns4:Bounds height=\"140.0\" width=\"150.0\" x=\"210.0\" y=\"245.0\"></ns4:Bounds>\n        <ns3:BPMNLabel labelStyle=\"sid-2dccaadd-4788-4bd1-8635-7f24d97e8622\">\n          <ns4:Bounds height=\"24.0\" width=\"54.0\" x=\"258.0\" y=\"301.0\"></ns4:Bounds>\n        </ns3:BPMNLabel>\n      </ns3:BPMNShape>\n      <ns3:BPMNShape bpmnElement=\"sid-0314F99C-2568-43DA-84B3-E4C6DD51C068\" choreographyActivityShape=\"sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC_gui\" id=\"sid-0314F99C-2568-43DA-84B3-E4C6DD51C068_gui\" isMessageVisible=\"false\" participantBandKind=\"top_initiating\">\n        <ns4:Bounds height=\"20.0\" width=\"150.0\" x=\"210.0\" y=\"245.0\"></ns4:Bounds>\n        <ns3:BPMNLabel labelStyle=\"sid-2dccaadd-4788-4bd1-8635-7f24d97e8622\">\n          <ns4:Bounds height=\"12.0\" width=\"70.19999694824219\" x=\"249.9000015258789\" y=\"247.0\"></ns4:Bounds>\n        </ns3:BPMNLabel>\n      </ns3:BPMNShape>\n      <ns3:BPMNShape bpmnElement=\"sid-D88B6C78-C2CF-4E2A-BA9E-091AA12CF42A\" choreographyActivityShape=\"sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC_gui\" id=\"sid-D88B6C78-C2CF-4E2A-BA9E-091AA12CF42A_gui\" isMessageVisible=\"false\" participantBandKind=\"bottom_non_initiating\">\n        <ns4:Bounds height=\"20.0\" width=\"150.0\" x=\"210.0\" y=\"365.0\"></ns4:Bounds>\n        <ns3:BPMNLabel labelStyle=\"sid-2dccaadd-4788-4bd1-8635-7f24d97e8622\">\n          <ns4:Bounds height=\"12.0\" width=\"34.71428680419922\" x=\"267.6428565979004\" y=\"367.0\"></ns4:Bounds>\n        </ns3:BPMNLabel>\n      </ns3:BPMNShape>\n      <ns3:BPMNShape bpmnElement=\"sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1\" id=\"sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1_gui\">\n        <ns4:Bounds height=\"140.0\" width=\"150.0\" x=\"405.0\" y=\"245.0\"></ns4:Bounds>\n        <ns3:BPMNLabel labelStyle=\"sid-2dccaadd-4788-4bd1-8635-7f24d97e8622\">\n          <ns4:Bounds height=\"12.0\" width=\"60.94285583496094\" x=\"449.52857208251953\" y=\"307.0\"></ns4:Bounds>\n        </ns3:BPMNLabel>\n      </ns3:BPMNShape>\n      <ns3:BPMNShape bpmnElement=\"sid-B4DAB341-FFA7-47AB-BD38-6B5A85B8D7B6\" choreographyActivityShape=\"sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1_gui\" id=\"sid-B4DAB341-FFA7-47AB-BD38-6B5A85B8D7B6_gui\" isMessageVisible=\"false\" participantBandKind=\"top_initiating\">\n        <ns4:Bounds height=\"20.0\" width=\"150.0\" x=\"405.0\" y=\"245.0\"></ns4:Bounds>\n        <ns3:BPMNLabel labelStyle=\"sid-2dccaadd-4788-4bd1-8635-7f24d97e8622\">\n          <ns4:Bounds height=\"12.0\" width=\"34.71428680419922\" x=\"462.6428565979004\" y=\"247.0\"></ns4:Bounds>\n        </ns3:BPMNLabel>\n      </ns3:BPMNShape>\n      <ns3:BPMNShape bpmnElement=\"sid-B654610E-2232-44BE-BA4C-D7215B5D4529\" choreographyActivityShape=\"sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1_gui\" id=\"sid-B654610E-2232-44BE-BA4C-D7215B5D4529_gui\" isMessageVisible=\"false\" participantBandKind=\"bottom_non_initiating\">\n        <ns4:Bounds height=\"20.0\" width=\"150.0\" x=\"405.0\" y=\"365.0\"></ns4:Bounds>\n        <ns3:BPMNLabel labelStyle=\"sid-2dccaadd-4788-4bd1-8635-7f24d97e8622\">\n          <ns4:Bounds height=\"12.0\" width=\"70.19999694824219\" x=\"444.9000015258789\" y=\"367.0\"></ns4:Bounds>\n        </ns3:BPMNLabel>\n      </ns3:BPMNShape>\n      <ns3:BPMNShape bpmnElement=\"sid-7EEAF070-8113-4C0F-B72A-F25FD509ADCE\" id=\"sid-7EEAF070-8113-4C0F-B72A-F25FD509ADCE_gui\">\n        <ns4:Bounds height=\"28.0\" width=\"28.0\" x=\"600.0\" y=\"301.0\"></ns4:Bounds>\n      </ns3:BPMNShape>\n      <ns3:BPMNEdge bpmnElement=\"sid-18CB1707-0A75-461D-907F-53DF3A66AC5A\" id=\"sid-18CB1707-0A75-461D-907F-53DF3A66AC5A_gui\">\n        <ns5:waypoint x=\"165.0\" y=\"315.0\"></ns5:waypoint>\n        <ns5:waypoint x=\"210.0\" y=\"315.0\"></ns5:waypoint>\n      </ns3:BPMNEdge>\n      <ns3:BPMNEdge bpmnElement=\"sid-52088C11-66ED-42A0-A625-3D203410A530\" id=\"sid-52088C11-66ED-42A0-A625-3D203410A530_gui\">\n        <ns5:waypoint x=\"360.0\" y=\"315.0\"></ns5:waypoint>\n        <ns5:waypoint x=\"405.0\" y=\"315.0\"></ns5:waypoint>\n      </ns3:BPMNEdge>\n      <ns3:BPMNEdge bpmnElement=\"sid-96643C3F-DE73-4B68-92FC-026485634EB0\" id=\"sid-96643C3F-DE73-4B68-92FC-026485634EB0_gui\">\n        <ns5:waypoint x=\"555.0\" y=\"315.0\"></ns5:waypoint>\n        <ns5:waypoint x=\"600.0\" y=\"315.0\"></ns5:waypoint>\n      </ns3:BPMNEdge>\n    </ns3:BPMNPlane>\n    <ns3:BPMNLabelStyle id=\"sid-2dccaadd-4788-4bd1-8635-7f24d97e8622\">\n      <ns4:Font isBold=\"false\" isItalic=\"false\" isStrikeThrough=\"false\" isUnderline=\"false\" name=\"Arial\" size=\"12.0\"></ns4:Font>\n    </ns3:BPMNLabelStyle>\n  </ns3:BPMNDiagram>\n</ns0:definitions>\n",
  "output": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract sid_149e0d98_2d57_4cee_bd14_110839248907 {\n    // tokenState bitmasks:\n    // 1: Start Event (sid-92E9CE06-AB7A-43DB-B5A3-053B1BBF964C) [initial]\n    // 2: Task 1 (sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC, \"Nach Geld fragen\")\n    // 4: Task 2 (sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1, \"Geld geben\")\n    // 8: End Event (sid-7EEAF070-8113-4C0F-B72A-F25FD509ADCE)\n    //\n    // Mapping:\n    //   taskID 1: sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC (initiatingParticipant: sid-0314F99C-2568-43DA-84B3-E4C6DD51C068 => index 0)\n    //   taskID 2: sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1 (initiatingParticipant: sid-B4DAB341-FFA7-47AB-BD38-6B5A85B8D7B6 => index 2)\n    // 4 participants\n    address[4] public participants;\n    uint public tokenState = 1;\n    uint public conditions; // for gateways, not used here but required by spec\n\n    constructor(address[4] memory _participants) {\n        participants = _participants;\n    }\n\n    function setConditions(uint _conditions) external {\n        conditions = _conditions;\n    }\n\n    function enact(uint taskID) external {\n        uint _tokenState = tokenState;\n\n        while (_tokenState != 0) {\n            // Start Event: sid-92E9CE06-AB7A-43DB-B5A3-053B1BBF964C (tokenState & 1)\n            if (_tokenState & 1 == 1) {\n                // Automatic transition to first task\n                // Sequence: sid-18CB1707-0A75-461D-907F-53DF3A66AC5A\n                _tokenState &= ~uint(1);\n                _tokenState |= 2;\n                continue;\n            }\n            // Task 1: sid-CE6FC14A-131E-46BC-BC22-EB91FC9B3DDC, taskID=1, \"Nach Geld fragen\"\n            if (_tokenState & 2 == 2) {\n                if (taskID == 1 && msg.sender == participants[0]) {\n                    // Only initiating participant (index 0) may execute\n                    // Sequence: sid-52088C11-66ED-42A0-A625-3D203410A530 to Task 2\n                    _tokenState &= ~uint(2);\n                    _tokenState |= 4;\n                    continue;\n                }\n            }\n            // Task 2: sid-F2D422F5-0187-4B47-AF88-7E50BA466EE1, taskID=2, \"Geld geben\"\n            if (_tokenState & 4 == 4) {\n                if (taskID == 2 && msg.sender == participants[2]) {\n                    // Only initiating participant (index 2) may execute\n                    // Sequence: sid-96643C3F-DE73-4B68-92FC-026485634EB0 to End Event\n                    _tokenState &= ~uint(4);\n                    _tokenState |= 8;\n                    continue;\n                }\n            }\n            // End Event: sid-7EEAF070-8113-4C0F-B72A-F25FD509ADCE\n            if (_tokenState & 8 == 8) {\n                // End event reached, terminate process\n                _tokenState = 0;\n                break;\n            }\n            // No further automatic transitions, exit loop\n            break;\n        }\n\n        tokenState = _tokenState;\n    }\n}\n",
  "processID": "sid_149e0d98_2d57_4cee_bd14_110839248907",
  "usage": {
    "prompt_tokens": 6899,
    "completion_tokens": 930,
    "total_tokens": 7829,
    "cost": 0.021238
  }
}